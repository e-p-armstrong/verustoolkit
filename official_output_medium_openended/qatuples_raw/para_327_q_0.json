[
    "How does Verus provide a foundation for extending smart transactions and building custom financial infrastructure, and what resources are available for developers to get started?",
    "Verus provides a foundation for extending smart transactions and building custom financial infrastructure through its core primitive framework. This framework provides a set of fundamental building blocks that are crucial for safe financial infrastructure, yet often missing in other systems. With Verus, developers can extend smart transactions in various ways, including creating custom PBaaS chains, sharing or not sharing extensions, and collaborating on protocol extensions.\n\nOne way to extend smart transactions is by creating a custom PBaaS chain, which allows developers to tailor their blockchain to specific use cases and requirements. This can be done by defining the chain's properties, such as its native currency, conversion ratios, and notary nodes. Developers can also share their extensions with the community or keep them private.\n\nVerus also provides a foundation for collaborating on protocol extensions, which can include forms of VM and/or ZKVM extension points. This allows developers to work within the framework of the core primitives that are fundamental to Verus, ensuring that any extensions are safe and compatible with the rest of the ecosystem.\n\nTo get started with building on Verus, developers can access a range of resources, including:\n\n* The Verus documentation at docs.verus.io, which provides detailed information on using API commands, such as launching currencies, tokens, and liquidity pools.\n* The complete command list, which provides a comprehensive overview of the available API commands.\n* The Verus community on Discord, where developers can connect with others, ask questions, and learn from each other.\n* The Verus Twitter account, which provides updates and announcements on the latest developments and features.\n* The Verus website at verus.io, which provides an overview of the project and its goals.\n\nOverall, Verus provides a flexible and extensible foundation for building custom financial infrastructure, along with a range of resources to support developers in their journey.",
    "cies, blockchains, and liquidity baskets have very rich capabilities from launch to continued operation.\nExtending Verus Smart Transactions\nIf someone wants to extend smart transactions, that is an option, but they either don\u2019t have to, or if they really have a reason to do so, they can do it on their PBaaS chain, share or not share back (lots of reasons to do so), and now that we have the core primitive framework as a foundation, we can certainly collaborate on a kind of protocol extension that is likely to include forms of VM and/or ZKVM extension points in the current protocol, to work within the framework of the core primitives that are fundamental to Verus and that we believe are crucial for safe financial infrastructure, yet generally missing in other systems.\nTry Yourself! \u2705\nLook up docs.verus.io to use many API commands (e.g. launching currencies, tokens & liquidity pools).\nOr look up the complete command list here.\nJoin the community. Learn about the protocol. Use Verus & build.\n\u27a1\ufe0f Join the community on Discord\nFollow on Twitter\nGo to verus.io",
    "./raw_text_input_medium/Verus Smart Transactions vs. Smart Contracts-2023-07-27 14:24:48"
]