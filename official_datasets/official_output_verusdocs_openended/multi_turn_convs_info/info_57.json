[
    [
        [
            "What are the key components and parameters that can be specified when defining a currency using the `definecurrency` command in Verus, and how do they affect the behavior of the currency?",
            "When defining a currency using the `definecurrency` command in Verus, there are several key components and parameters that can be specified to customize the behavior of the currency.\n\n**Name and Options:**\nThe `name` parameter specifies the name of the currency, while the `options` parameter is an integer that can be used to customize the behavior of the currency.\n\n**Currencies and Weights:**\nThe `currencies` parameter specifies an array of currencies that can be converted into the reserves of the currency being defined. The `weights` parameter specifies the relative weights of each currency in the reserves. For example, in the example given, VRSCTEST has a weight of 0.5, while BusinessBrand and DiscountBrand each have a weight of 0.25.\n\n**Initial Supply:**\nThe `initialsupply` parameter specifies the initial supply of the currency.\n\n**Start Block:**\nThe `startblock` parameter specifies the block height at which the currency should be launched. If this parameter is omitted, the currency will have a preconversion time frame of 20 blocks before launch. The preconversion time frame is always at least 20 blocks and cannot be less.\n\n**End Block:**\nThe `endblock` parameter is only applicable to centralized (`proofprotocol:2`) simple token currencies. When the end block is reached, it turns the centralized currency into a decentralized one, removing minting and burning capabilities. It does nothing for basket currencies.\n\n**ID Registration Fees:**\nThe `idregistrationfees` parameter specifies the cost of registering subIDs under the rootID. The default registration fee is 100. When the currency is decentralized, the fees are burned, reducing the supply of the currency and increasing its value. When the currency is centralized, the fees go to the rootID.\n\nIn summary, these parameters allow for customization of the currency's behavior, including its reserves, launch timing, and fees.",
            "Example currency:\n``` json\n./verus -chain=VRSCTEST definecurrency '{\n \"name\":\"MyBusiness\", \n \"options\":33, \n \"currencies\":[\"vrsctest\",\"BusinessBrand\",\"DiscountBrand\"], \n \"initialsupply\":100, \n \"weights\":[0.5,0.25,0.25]\n}'\n```\n\u261d\ufe0f This is a basket currency called MyBusiness. During the preconversion time frame there are various currencies that can be converted into its reserves. They have different weights to them. 0.5 for VRSCTEST, 0.25 for both BusinessBrand and DiscountBrand.### **\"startblock\"**\nUse this parameter to define the block height when the currency should be launched. There is a preconversion time frame before the currency is launched. When omitting this parameter it uses a 20 block preconversion time frame before the currency is launched.The preconversion time frame is always 20 blocks, this can not be less.\u26a0\ufe0f IMPORTANT: Fill in the absolute block height you want the currency to launch on.### **\"endblock\"**\nEndblock can not be defined on basket currencies. It does nothing. It could be set as a signal to software that might use the basket currency.It can be set on centralized (`proofprotcol:2`) simple token currencies. When the endblock is reached, it turns the centralized currency into a decentralized one (no more minting and burning capabilities.)### **\"idregistrationfees\"**\nUse this parameter to change the costs of registering subIDs under the rootID. The default registration fee is `100`.\nWhen it\u2019s a decentralized currency the fees are burned (and the basket currency becomes worth more because there is less supply, yet the reserves stay the same), when it\u2019s centralized the fees go to the rootID.",
            "./raw_text_input_docs/launch-currency.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "00861c6a-666f-4e03-81d9-5423c737ce5f"
]