[
    "How do I use Verus to lock a VerusID with a time lock or a DelayLock, and what are the implications of doing so?",
    "Verus provides a way to lock a VerusID, which prevents the associated funds from being spent until a certain condition is met. There are two types of locks: a time lock and a DelayLock.\n\n**Time Lock:**\nA time lock allows you to specify a block number at which the lock will be released. To set a time lock, you can use the `setidentitytimelock` command in the Verus command-line interface. For example, to lock a VerusID for approximately 1 year, you can use the following command:\n```json\nrun setidentitytimelock \"myid@\" \n'{\n  \"unlockatblock\":1508994\n}'\n```\nReplace `myid@` with your own VerusID. This will lock the funds associated with the VerusID until the specified block number is reached.\n\n**DelayLock:**\nA DelayLock is similar to a time lock, but instead of specifying a specific block number, you specify a delay period in blocks. When you request an unlock, the funds will not be available until the delay period has passed. To set a DelayLock, you can use the `setidentitytimelock` command with the `setunlockdelay` option. For example, to set a DelayLock of 1 week (10,080 blocks), you can use the following command:\n```json\nrun setidentitytimelock \"myid@\" \n'{\n  \"setunlockdelay\":10080\n}'\n```\nReplace `myid@` with your own VerusID. This will lock the funds associated with the VerusID, and when you request an unlock, you will have to wait for 1 week (or 10,080 blocks) before the funds can be spent again.\n\n**Requesting an Unlock:**\nOnce you have set a time lock or DelayLock, you can request an unlock using the same `setidentitytimelock` command. However, you will have to wait for the specified delay period or until the specified block number is reached before the funds can be spent again.\n\n**Important Note:**\nRemember that you can always revoke and recover a locked VerusID if needed.",
    "- Under ``unlockatblock`` you put ``1508994``\n- Change ``myid@`` with your own VerusIDSo in our example your VerusID is locked for approximately for 1 year. After that period of time the funds can be spent again.``` json\nrun setidentitytimelock \"myid@\" \n'{\n  \"unlockatblock\":1508994\n}'\n```You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs.:::tip Revoke & Recover\nRemember: you can always revoke and recover a locked VerusID.\n:::## Vault with DelayLock\n![image-delaylock](/images/delaylock.png)\nNow let's put a DelayLock on a VerusID. This means that you lock the identity, and when you request the identity to be unlocked, a predetermined number of blocks have to pass before you can actually spend the funds again.### Set the DelayLock\nLet's say you want to put a DelayLock of 1 week. 1 week is ``10,080`` blocks (1440x7). This will lock the identity, and when you request an unlock, it takes 1 week (or 10,080 blocks) before the funds can be spent again.- Under ``setunlockdelay`` you put ``10080``\n- Change ``myid@`` with your own VerusID``` json\nrun setidentitytimelock \"myid@\" \n'{\n  \"setunlockdelay\":10080\n}'\n```You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs.:::tip Revoke & Recover\nRemember: you can always revoke and recover a locked VerusID.\n:::### Request an unlock\nAbove you locked a VerusID with a DelayLock. Now let's request an unlock. When an unlock has been requested you have to wait the predetermined number of blocks before you can spend the funds again.",
    "./raw_text_input_docs/setup-vault-v2.md"
]