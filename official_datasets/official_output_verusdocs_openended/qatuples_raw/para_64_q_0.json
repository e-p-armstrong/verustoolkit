[
    "What are the key components of defining a currency on the Verus network, and how do subID referrals and registration fees work in a currency definition?",
    "Defining a currency on the Verus network involves specifying several key components, including the currency's name, options, currencies, initial contributions, initial supply, and ID registration fees. Additionally, a currency can have subID referrals enabled, which allows for the distribution of subID registration fees to multiple levels of referrals.\n\nThe `options` parameter in a currency definition determines the behavior of the currency. For example, setting `options` to 8 enables referrals, while setting `options` to 40 or 41 defines a centralized simple token currency or a basket currency, respectively.\n\nThe `idregistrationfees` parameter specifies the fee required to register a subID, and this fee can be distributed to multiple levels of referrals using the `idreferrallevels` parameter. The `idreferrallevels` parameter determines the number of levels of referrals that can receive a portion of the subID registration fee, with a minimum of 0 levels and a maximum of 5 levels.\n\nWhen a currency is launched, the initial supply of the currency is distributed to the rootID, and any preconverters may also receive a portion of the initial supply. The currency owner can also specify preallocations, which allow for the distribution of a certain amount of the currency to specific VerusIDs at launch.\n\nIn a currency with referrals enabled, when a subID is registered using a referral, the registration fee is distributed to the referred subID and the rootID. The specific distribution of the fee depends on the `idreferrallevels` parameter and the currency's definition.\n\nOverall, defining a currency on the Verus network involves specifying a range of parameters that determine the behavior and properties of the currency, including its supply, distribution, and referral structure.",
    "Example currency:\n``` json\n./verus -chain=VRSCTEST definecurrency '{\n \"name\":\"InternetCommunity\", \n \"options\":41, \n \"currencies\":[\"vrsctest\"],\n \"initialcontributions\":[25],\n \"initialsupply\":5000, \n \"idregistrationfees\":1\n}'\n```\n\u261d\ufe0f The is a basket currency called InternetCommunity with subID referrals enabled. The launcher of the currency wanted to make initial contributions to its reserves. There needs to be 225.0002 VRSCTEST in the rootID at the moment of broadcasting the currency to the network (currency launch fee + initial contributions + txfees). The initial supply of 5000 went to the rootID (if there weren\u2019t any more preconverters). The base fee to register a subID is 1 InternetCommunity.### **\"idreferrallevels\"**\n![image-referralsID](/images/referralsID2.png)\nUse this parameter to change the levels of referrals used when registering subIDs. The image above shows the division and distribution of subID registration fees, depending on the chosen level. Minimum is 0 levels, maximum is 5. The default is `3` levels.To enable referrals, add `\"options\":8` to the currency definition.Example currency:\n``` json\n./verus -chain=VRSCTEST definecurrency '{\n \"name\":\"PremiumAccess\", \n \"options\":40, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Klaus@\":2000}],\n \"idregistrationfees\":300,\n \"idreferrallevels\":1\n}'\n```\n\u261d\ufe0f This is a centralized simple token currency called PremiumAccess. The owner of the rootID can mint and burn tokens at will. It has referrals enabled. When the currency is launched 2000 PremiumAccess go to the Klaus@ VerusID. It costs a 300 PremiumAccess fee to register a subID. These fees go to the rootID because it is a centralized token currency. When someone registers a subID using a referral they pay 200 of which 100 goes to the referred subID, and 100 to the rootID.",
    "./raw_text_input_docs/launch-currency.md"
]