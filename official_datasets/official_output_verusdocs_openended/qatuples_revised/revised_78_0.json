[
    "What are the different flags that can be set on a VerusPay invoice, and what do they indicate about the invoice's properties and behavior?",
    "VerusPay invoices can have various flags set to define their properties and behavior. These flags are used to indicate whether an invoice is valid, what kind of payments it accepts, and under what conditions. Here's a breakdown of the different flags and their meanings:\n\n**VERUSPAY_INVALID (0)**: This flag indicates that the invoice is invalid and should not be processed.\n\n**VERUSPAY_VALID (1)**: This flag must be set for the invoice to be considered actionable, indicating that the invoice is valid and can be processed.\n\n**VERUSPAY_ACCEPTS_CONVERSION (2)**: If this flag is set, the invoice accepts payments in different currencies, with conversion to the invoice's requested currency. This requires a max estimated slippage value to be specified.\n\n**VERUSPAY_ACCEPTS_NON_VERUS_SYSTEMS (4)**: This flag indicates that payments from non-Verus blockchain systems are accepted. If set, the invoice must specify which systems are accepted.\n\n**VERUSPAY_EXPIRES (8)**: This flag determines that the invoice has an expiry condition, meaning it must be paid before a specific Verus blockchain height is reached. An expiry height must be set if this flag is set.\n\n**VERUSPAY_ACCEPTS_ANY_DESTINATION (16)**: If this flag is set, the invoice can accept payments to any destination. In this case, the destination field in the invoice must be left blank.\n\n**VERUSPAY_ACCEPTS_ANY_AMOUNT (32)**: This flag indicates that the invoice can be paid with any amount, making it useful for donations or when the exact payment amount is not fixed. If set, the amount field in the invoice must be left blank.\n\n**VERUSPAY_EXCLUDES_VERUS_BLOCKCHAIN (64)**: If set, the invoice cannot be paid on the VRSC or VRSCTEST blockchains.\n\n**VERUSPAY_IS_TESTNET (128)**: This flag marks the invoice as only valid on VRSCTEST and/or testnet PBaaS blockchains, and establishes that all currencies/identities referenced within the invoice exist only on testnet.\n\nThese flags provide flexibility and customization options for VerusPay invoices, allowing them to accommodate different use cases and payment scenarios.",
    "- **VERUSPAY_INVALID (0)**: Indicates that the invoice is invalid. This default state can be used to signify that an invoice should not be processed.\n- **VERUSPAY_VALID (1)**: Signifies that the invoice is valid and can be processed. This flag must be set for the invoice to be considered actionable.\n- **VERUSPAY_ACCEPTS_CONVERSION (2)**: Specifies that the invoice accepts currency conversions. This allows payments in different currencies, with conversion to the invoice's requested currency. If an invoice accepts conversion, it requires a max estimated slippage value.\n- **VERUSPAY_ACCEPTS_NON_VERUS_SYSTEMS (4)**: Indicates that payments from non-Verus blockchain systems are accepted. If this flag is set, specifying accepted systems is required.\n- **VERUSPAY_EXPIRES (8)**: Determines that the invoice has an expiry condition. If set, the invoice must be paid before a specific Verus blockchain height is reached, and an expiry height must be set.\n- **VERUSPAY_ACCEPTS_ANY_DESTINATION (16)**: Allows the invoice to accept payments to any destination. If set, the destination field in the invoice must be left blank.\n- **VERUSPAY_ACCEPTS_ANY_AMOUNT (32)**: Indicates that the invoice can be paid with any amount. This is useful for donations or when the exact payment amount is not fixed. If set, the amount field in the invoice must be left blank.\n- **VERUSPAY_EXCLUDES_VERUS_BLOCKCHAIN (64)**: If set, invoice cannot be paid on VRSC/VRSCTEST.\n- **VERUSPAY_IS_TESTNET (128)**: Marks the invoice as only valid on VRSCTEST and/or testnet PBaaS blockchains, and establishes that all currencies/identities referenced within the invoice exist only on testnet.## Serialization and Deserialization![veruspay-invoice-bytes](/images/veruspay-invoice-bytes.svg)",
    "./raw_text_input_docs/invoices.md"
]