[
    "How do I use the `getblockhashes` method to retrieve a single block hash given a specific timestamp?",
    "The `getblockhashes` method actually retrieves a range of block hashes between two specified timestamps, not a single block hash given a specific timestamp. It takes two required arguments: `high` (the newer block timestamp) and `low` (the older block timestamp), as well as an optional `options` object that can specify additional criteria for the returned block hashes.",
    "#### Arguments:\n```json\n1. high     (numeric, required) The newer block timestamp\n2. low     (numeric, required) The older block timestamp\n3. options   (string, required) A json object\n  {\n   \"noOrphans\":true  (boolean) will only include blocks on the main chain\n   \"logicalTimes\":true  (boolean) will include logical timestamps with hashes\n  }\n```\n#### Result:\n```json\n[\n \"hash\"     (string) The block hash\n]\n[\n {\n  \"blockhash\": (string) The block hash\n  \"logicalts\": (numeric) The logical timestamp\n }\n]\n```\nExamples:\n```bash\n> verus getblockhashes 1231614698 1231024505\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockhashes\", \"params\": [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n> verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'\n```### `getblockheader \"hash\" ( verbose )`\nIf verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'.\nIf verbose is true, returns an Object with information about blockheader <hash>.#### Arguments:\n```\n1. \"hash\"     (string, required) The block hash\n2. verbose      (boolean, optional, default=true) true for a json object, false for the hex encoded data\n```",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]