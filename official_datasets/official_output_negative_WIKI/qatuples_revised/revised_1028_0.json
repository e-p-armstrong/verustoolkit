[
    "How do I specify the encryption algorithm when using the `encrypttoaddress` field?",
    "The `encrypttoaddress` field does not allow specifying an encryption algorithm. It only accepts a \"sapling address\" as its value, which is used for granular encryption of data. The encryption algorithm is not configurable in this context.",
    "e, object for getvdxfid API, or friendly name ID -- no i-addresses\", ...],\n \"boundhashes\":[\"hexhash\", ...],\n \"hashtype\": \"sha256\" | \"sha256D\" | \"blake2b\" | \"keccak256\",\n \"encrypttoaddress\": \"sapling address\",       granularly encrypt all data, either all decryptable with viewing key or parts using unique, SSKs\n \"createmmr\":\"bool\",                 if true, 1 or more objects will be put into a merkle mountain range and the root signed\n \"signature\":\"currentsig\"\n}\n```\nGenerates a hash (SHA256 default if \"hashtype\" not specified) of the data, returns the hash, and signs it with parameters specified\n#### Arguments:\n```json\n{\n \"address\":\"t-addr or identity\"                (string, required) The transparent address or identity to use for signing.\n \"filename\" | \"message\" | \"messagehex\" | \"messagebase64\" | \"datahash\" (string, required) Data to sign\n \"mmrdata\":[{\"filename | vdxfdata | message | serializedhex | serializedbase64 | datahash\":\"str\"}], (array, optional) Alternate to single data parameters, this enables an MMR signing\n       \"mmrsalt\":[\"salt\":\"str\"],             (string, optional) Protects privacy of leaf nodes of the MMR\n       \"mmrhashtype\":\"sha256\" | \"sha256D\" | \"blake2b\" | \"keccak256\", (string, optional) Default is blake2b\n       \"priormmr\":\"[{\"idxhash\":,\"utxoref\":{}}]\",     (array, optional) When growing an MMR, the prior hashes can be used to construct the MMR and root w/o data\n \"vdxfkeys\":[\"vdxfkey\", ...],                 (array, optional) Array of vdxfkeys or ID i-addresses\n \"vdxfkeynames\":[\"vdxfkeyname\", ...],             (array, optional) Array of vdxfkey names or fully qualified friendly IDs\n \"boundhashes\":[\"hexhash\", ...],               (array, optional) Array of bound hash values\n \"hashtype\": \"str\",              ",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]