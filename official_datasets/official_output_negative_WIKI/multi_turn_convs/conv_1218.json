[
    "## Conversation that answers the provided question:\n**User:**\nI'm trying to define a new currency with Verus, and I'm not sure about the `proofprotocol` setting. If I set `proofprotocol` to 1, will that allow anyone to mint new coins?\n\n**AI Assistant:**\nNo, that's not correct. Setting `proofprotocol` to 1 doesn't allow anyone to mint new coins. Actually, when `proofprotocol` is set to 2 (PROOF_CHAINID), it means that the controller of the chain ID can mint new coins.\n\nTo illustrate this, let's look at an example. If you set `proofprotocol` to 2, you can allow the controller of the chain ID to mint new coins using a command like `./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'`.\n\nSo, to summarize, setting `proofprotocol` to 1 doesn't give anyone the ability to mint new coins. Instead, you need to set it to 2 and ensure that the controller of the chain ID has the necessary permissions.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "When defining a new currency with Verus, can you set `proofprotocol` to 1 to allow anyone to mint new coins?",
            "No, when defining a new currency with Verus, setting `proofprotocol` to 1 does not allow anyone to mint new coins. In fact, when `proofprotocol` is set to 2 (PROOF_CHAINID), it means that the controller of the chain ID can mint new coins. This is evident in the example where `proofprotocol` is set to 2, allowing the controller of the chain ID to mint new coins using a command like `./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'`.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]