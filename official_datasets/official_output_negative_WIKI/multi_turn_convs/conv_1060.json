[
    "## Conversation that answers the provided questions:\n**User:**\nI'm curious about how VerusIDs can be used for financial transactions. How can VerusIDs be used to send and receive funds?\n\n**AI Assistant:**\nVerusIDs can be used to send and receive funds. In fact, they can be controlled by single or multi-sig addresses specified in the identity itself. If these controlling addresses or the single or multi-sig properties are changed, all future spends of UTXOs sent to that identity follow the updated spend conditions and are subject to the updated keys. This allows for a high degree of flexibility and security when managing your funds with VerusIDs.\n\n**User:**\nI've heard some concerns about VerusIDs not being secure against quantum attacks. Why are VerusIDs not quantum-resistant at all?\n\n**AI Assistant:**\nActually, that's a misconception! VerusIDs are actually quantum-resistant with known algorithms, and a quantum-secure signature scheme is being integrated. Although Verus 0.6.0 does not include quantum-resistant signatures for transactions, VerusIDs themselves are resistant to quantum attacks. Once the quantum-secure signature scheme is activated, it will be possible to change an ID and have all of the funds sent to it made retroactively quantum-resistant. So, rest assured that VerusIDs are designed with the future of cryptography in mind.\n\n**User:**\nAnother thing I was wondering about was whether VerusIDs are controlled by a central authority. Can only a central authority create a VerusID?\n\n**AI Assistant:**\nNo, not at all! Anyone can create a VerusID and have complete, self-sovereign control over it without needing permission from a central authority. All costs to create an ID go to miners, stakers, and ID referrers, making it a fully decentralized protocol. This means that you have full control over your digital identity, data, and assets, without relying on a central authority. VerusIDs are designed to be decentralized, private, and secure.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How can VerusIDs be used to send and receive funds?",
            "VerusIDs can be used to send and receive funds. In fact, they can be controlled by single or multi-sig addresses specified in the identity itself. If these controlling addresses or the single or multi-sig properties are changed, all future spends of UTXOs sent to that identity follow the updated spend conditions and are subject to the updated keys.",
            "### Quantum-ready friendly crypto-addresses on the worldwide Verus network\nVerusIDs can be used to receive and send funds, which are controlled by the single or multi-sig addresses specified in the identity itself. If these controlling addresses or the single or multi-sig properties are changed, which can be done by the controller of the identity, all future spends of UTXOs sent to that identity follow the updated spend conditions and are subject to the updated keys. Although Verus 0.6.0 does not include quantum resistant signatures for transactions, VerusIDs are themselves resistant to quantum attack with known algorithms, and we have already started to integrate a quantum secure signature scheme, which we expect to activate on mainnet early next year. When that is available, it will be possible to change an ID and have all of the funds sent to it made retroactively quantum resistant. Verus IDs can also be used to publish ID->destination address mappings on other blockchains, but only the Verus ecosystem has the ability to revoke, recover, inherit, funds in existing UTXOs.### Fully Decentralized Protocol\nAnyone can create one and have complete, self sovereign control over it without permission to do so. All costs to create an ID go to miners, stakers, and ID referrers. VerusIDs are:- **Revocable** -- each ID includes a revocation authority, which defaults to the identity self, and which has the permission to revoke the identity, which creates a valid transaction that, once mined into a block, prevents the identity from being used to spend or sign until it is recovered, effectively freezing all of its funds, for example, in the case of key theft.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Why are VerusIDs not quantum-resistant at all?",
            "VerusIDs are actually quantum-resistant with known algorithms, and a quantum-secure signature scheme is being integrated. Although Verus 0.6.0 does not include quantum-resistant signatures for transactions, VerusIDs themselves are resistant to quantum attacks. Once the quantum-secure signature scheme is activated, it will be possible to change an ID and have all of the funds sent to it made retroactively quantum-resistant.",
            "### Quantum-ready friendly crypto-addresses on the worldwide Verus network\nVerusIDs can be used to receive and send funds, which are controlled by the single or multi-sig addresses specified in the identity itself. If these controlling addresses or the single or multi-sig properties are changed, which can be done by the controller of the identity, all future spends of UTXOs sent to that identity follow the updated spend conditions and are subject to the updated keys. Although Verus 0.6.0 does not include quantum resistant signatures for transactions, VerusIDs are themselves resistant to quantum attack with known algorithms, and we have already started to integrate a quantum secure signature scheme, which we expect to activate on mainnet early next year. When that is available, it will be possible to change an ID and have all of the funds sent to it made retroactively quantum resistant. Verus IDs can also be used to publish ID->destination address mappings on other blockchains, but only the Verus ecosystem has the ability to revoke, recover, inherit, funds in existing UTXOs.### Fully Decentralized Protocol\nAnyone can create one and have complete, self sovereign control over it without permission to do so. All costs to create an ID go to miners, stakers, and ID referrers. VerusIDs are:- **Revocable** -- each ID includes a revocation authority, which defaults to the identity self, and which has the permission to revoke the identity, which creates a valid transaction that, once mined into a block, prevents the identity from being used to spend or sign until it is recovered, effectively freezing all of its funds, for example, in the case of key theft.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Can only a central authority create a VerusID?",
            "No, anyone can create a VerusID and have complete, self-sovereign control over it without needing permission from a central authority. All costs to create an ID go to miners, stakers, and ID referrers, making it a fully decentralized protocol.",
            "### Quantum-ready friendly crypto-addresses on the worldwide Verus network\nVerusIDs can be used to receive and send funds, which are controlled by the single or multi-sig addresses specified in the identity itself. If these controlling addresses or the single or multi-sig properties are changed, which can be done by the controller of the identity, all future spends of UTXOs sent to that identity follow the updated spend conditions and are subject to the updated keys. Although Verus 0.6.0 does not include quantum resistant signatures for transactions, VerusIDs are themselves resistant to quantum attack with known algorithms, and we have already started to integrate a quantum secure signature scheme, which we expect to activate on mainnet early next year. When that is available, it will be possible to change an ID and have all of the funds sent to it made retroactively quantum resistant. Verus IDs can also be used to publish ID->destination address mappings on other blockchains, but only the Verus ecosystem has the ability to revoke, recover, inherit, funds in existing UTXOs.### Fully Decentralized Protocol\nAnyone can create one and have complete, self sovereign control over it without permission to do so. All costs to create an ID go to miners, stakers, and ID referrers. VerusIDs are:- **Revocable** -- each ID includes a revocation authority, which defaults to the identity self, and which has the permission to revoke the identity, which creates a valid transaction that, once mined into a block, prevents the identity from being used to spend or sign until it is recovered, effectively freezing all of its funds, for example, in the case of key theft.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]