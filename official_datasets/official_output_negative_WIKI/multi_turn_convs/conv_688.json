[
    "## Conversation that answers the provided question:\n**User:**\nI'm trying to create a token with a maximum supply of 10 satoshis using the `definecurrency` command. Can you help me with that?\n\n**AI Assistant:**\nActually, the `definecurrency` command doesn't allow you to create a token with a maximum supply of 10 satoshis. When creating a token with the flags OPTION_NFT_TOKEN + OPTION_TOKEN, the max supply must be 1 satoshi, which is either pre-allocated or pre-converted to.\n\nIf you're interested, I can provide an example of how to create a token with a max supply of 1 satoshi. For instance, you can use the following command: `verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'`\n\nLet me know if you have any further questions or if there's anything else I can help you with!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you create a token with a maximum supply of 10 satoshis using the `definecurrency` command?",
            "The `definecurrency` command does not allow you to create a token with a maximum supply of 10 satoshis. When creating a token with the flags OPTION_NFT_TOKEN + OPTION_TOKEN, the max supply must be 1 satoshi, which is either pre-allocated or pre-converted to. You can see an example of this in the command: `verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'`",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]