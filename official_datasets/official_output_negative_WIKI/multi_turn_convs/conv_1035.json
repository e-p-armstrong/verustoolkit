[
    "## Conversation that answers the provided questions:\n**User:**\nI've heard about the first roll out of auto notarization. How did that go?\n\n**AI Assistant:**\nUnfortunately, the first roll out of auto notarization was not successful. It encountered two issues: a notarization bug that caused notarizations to fork, and the generation of large and slow proofs. These issues led to the need to re-enable cross-chain notarization and make adjustments to the auto notarization protocol to reduce the required proof size and increase efficiency.\n\n**User:**\nThat sounds like a significant issue. How did the team handle the notarization bug in the auto notarization system?\n\n**AI Assistant:**\nThe team encountered the notarization bug, which caused notarizations to fork, simulating a worst-case, unmitigated attack on the notarization system. The team is now working to correct the issue and optimize the auto notarization protocol. They're taking a thorough approach to ensure the system is secure and efficient.\n\n**User:**\nWhat's the current state of the mainnet after the successful implementation of auto notarization?\n\n**AI Assistant:**\nActually, the mainnet is not currently active. The testnet is still on the pre-PBaaS to mainnet preparatory state, and the team is taking a few days to adjust the auto notarization protocol parameters before proceeding. They're being cautious to ensure everything is working as intended before moving forward.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What was the outcome of the first roll out of auto notarization?",
            "Actually, the first roll out of auto notarization was not successful. It encountered two issues: a notarization bug that caused notarizations to fork, and the generation of large and slow proofs. These issues led to the need to re-enable cross-chain notarization and make adjustments to the auto notarization protocol to reduce the required proof size and increase efficiency.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How did the team handle the notarization bug in the auto notarization system?",
            "The team encountered the notarization bug, which caused notarizations to fork, simulating a worst-case, unmitigated attack on the notarization system. The team is now working to correct the issue and optimize the auto notarization protocol.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the current state of the mainnet after the successful implementation of auto notarization?",
            "The mainnet is not currently active. The testnet is still on the pre-PBaaS to mainnet preparatory state, and the team is taking a few days to adjust the auto notarization protocol parameters before proceeding.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]