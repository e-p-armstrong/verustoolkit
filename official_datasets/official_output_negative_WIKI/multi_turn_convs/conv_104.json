[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to figure out how to use the `prioritisetransaction` method to actually pay a higher fee for a transaction. Can you help me with that?\n\n**AI Assistant:**\nThe `prioritisetransaction` method doesn't actually pay a higher fee for a transaction. It only affects the transaction selection algorithm, making it consider the transaction as if it had a higher (or lower) fee. The fee is not actually paid. You can't use this method to pay a higher fee for a transaction. Is there anything else I can help you with?\n\n**User:**\nOkay, got it. What about the `setminingdistribution` method? What's the return value when it fails?\n\n**AI Assistant:**\nThe return value of the `setminingdistribution` method when it fails is an exception, not a specific error code or value. When it succeeds, it returns NULL. So, if you're using this method, be prepared to handle exceptions if something goes wrong.\n\n**User:**\nAlright, last question. How do I use the `setminingdistribution` method to set a single mining output with an amount?\n\n**AI Assistant:**\nActually, the `setminingdistribution` method is used to set multiple mining outputs with amounts, not a single output. You need to provide a JSON object with multiple key-value pairs, where each key is a valid destination address and each value is the relative value output to that address. You can't use this method to set a single mining output with an amount. I hope that clears things up!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I use the `prioritisetransaction` method to actually pay a higher fee for a transaction?",
            "The `prioritisetransaction` method does not actually pay a higher fee for a transaction. It only affects the transaction selection algorithm, making it consider the transaction as if it had a higher (or lower) fee. The fee is not actually paid.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the return value of the `setminingdistribution` method when it fails?",
            "The return value of the `setminingdistribution` method when it fails is an exception, not a specific error code or value. When it succeeds, it returns NULL.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How do I use the `setminingdistribution` method to set a single mining output with an amount?",
            "The `setminingdistribution` method is used to set multiple mining outputs with amounts, not a single output. You need to provide a JSON object with multiple key-value pairs, where each key is a valid destination address and each value is the relative value output to that address.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]