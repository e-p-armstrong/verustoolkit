[
    "## Conversation that answers the provided questions:\n**User:**\nHey there, I'm trying to define a new currency on Verus, but I don't want to use the `definecurrency` command. Is there another way to do it?\n\n**AI Assistant:**\nI'm afraid not. You cannot define a currency without using the `definecurrency` command. The `definecurrency` command is used to define a new currency, and it requires the necessary information such as the currency name, options, currencies, conversions, eras, notaries, nodes, and gateway converter details. The command is essential to create a new currency, and there is no alternative way to do so. You'll need to use the `definecurrency` command to define your new currency.\n\n**User:**\nOkay, that makes sense. I have another question. Is it possible to sign transactions from multi-signature IDs using a single wallet?\n\n**AI Assistant:**\nNo, it is not possible to sign transactions from multi-signature IDs using a single wallet. To sign transactions from multi-signature IDs, you need to take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and use the `signrawtransaction` command to sign the transaction. This process requires multiple wallets, not just one. You can't do it with a single wallet, unfortunately.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I define a currency without using the `definecurrency` command?",
            "You cannot define a currency without using the `definecurrency` command. The `definecurrency` command is used to define a new currency, and it requires the necessary information such as the currency name, options, currencies, conversions, eras, notaries, nodes, and gateway converter details. The command is essential to create a new currency, and there is no alternative way to do so.",
            "Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\n#### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Is it possible to sign transactions from multi-signature IDs using a single wallet?",
            "No, it is not possible to sign transactions from multi-signature IDs using a single wallet. To sign transactions from multi-signature IDs, you need to take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and use the `signrawtransaction` command to sign the transaction. This process requires multiple wallets, not just one.",
            "Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\n#### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]