[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I've got a question about chain launches. What happens when notary witnesses stop doing their job in a chain launch?\n\n**AI Assistant:**\nWhen notary witnesses stop witnessing for any reason, the protocol will fail-over to auto-notarization, ensuring that cross-chain transactions still function as expected. This means that even if witnesses are not operational, the protocol can still operate, albeit more slowly and based solely on cryptographic proof and challenge resolution between merge miners and stakers. So, the chain won't completely come to a halt, but it will continue to function, albeit at a slower pace. Does that make sense?\n\n**User:**\nThat's great to know! I've also been playing around with the APIs on the testnet, and I was wondering if the new APIs `getidentityhistory` and `getidentitycontent` are available on the mainnet?\n\n**AI Assistant:**\nNo, these APIs are not yet available on the mainnet. They are currently only available on the testnet until the #LaunchPBaaS release. So, you'll need to keep using the testnet for now if you want to experiment with those APIs. We'll let you know when they're available on the mainnet!\n\n**User:**\nOne more question. I've been looking at the settings for a chain launch, and I was wondering about the `notarizationprotocol`:1 setting. What's the purpose of that setting?\n\n**AI Assistant:**\nThe `notarizationprotocol`:1 setting in a chain launch does not specify that notary witnesses are not required. In fact, it allows a chain launch to specify notary witnesses that will be used when they do their job. So, it's actually a way to configure the notary witnesses for the chain launch, rather than disabling them altogether.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What happens when notary witnesses stop doing their job in a chain launch?",
            "When notary witnesses stop witnessing for any reason, the protocol will fail-over to auto-notarization, ensuring that cross-chain transactions still function as expected. This means that even if witnesses are not operational, the protocol can still operate, albeit more slowly and based solely on cryptographic proof and challenge resolution between merge miners and stakers.",
            "Using `\u201cnotarizationprotocol\u201d:1`, which is also the default, a chain launch can specify notary witnesses that will be used when they do their job. Even if they stop witnessing for any reason, the protocol will fail-over to auto-notarization, ensuring that cross-chain transactions still function as expected, even if just for people to move their assets to another blockchain, although significantly more slowly and based solely on cryptographic proof and challenge resolution between merge miners and stakers. This cross-chain proof and challenge protocol operates even when witnesses are also operating and if miners and stakers continue to prove a more powerful chain than the one witnesses represent, the most powerful chain can still be confirmed. **(Testnet until the #LaunchPBaaS release)**5. **Expanding L1 VerusID APIs**: This release provides a major enhancement to the identity content multimap support with two new APIs, `getidentityhistory` and `getidentitycontent` that provide real-time mempool access and also introduce self-sovereign delete operations to identity content that can be used by applications, making it easy for applications to index, organize, and aggregate an unlimited amount of user content referenced by an identity and made available to the application. This is the technology we used for oracle upgrade notifications, as all of this is available at L1, making it possible to imagine future protocols that can deal smoothly with diverse community opinions worldwide, but always respect the sovereignty and decisions of all members on the network. **(Testnet until the #LaunchPBaaS release)**",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Are the new APIs `getidentityhistory` and `getidentitycontent` available on the mainnet?",
            "No, these APIs are not yet available on the mainnet. They are currently only available on the testnet until the #LaunchPBaaS release.",
            "Using `\u201cnotarizationprotocol\u201d:1`, which is also the default, a chain launch can specify notary witnesses that will be used when they do their job. Even if they stop witnessing for any reason, the protocol will fail-over to auto-notarization, ensuring that cross-chain transactions still function as expected, even if just for people to move their assets to another blockchain, although significantly more slowly and based solely on cryptographic proof and challenge resolution between merge miners and stakers. This cross-chain proof and challenge protocol operates even when witnesses are also operating and if miners and stakers continue to prove a more powerful chain than the one witnesses represent, the most powerful chain can still be confirmed. **(Testnet until the #LaunchPBaaS release)**5. **Expanding L1 VerusID APIs**: This release provides a major enhancement to the identity content multimap support with two new APIs, `getidentityhistory` and `getidentitycontent` that provide real-time mempool access and also introduce self-sovereign delete operations to identity content that can be used by applications, making it easy for applications to index, organize, and aggregate an unlimited amount of user content referenced by an identity and made available to the application. This is the technology we used for oracle upgrade notifications, as all of this is available at L1, making it possible to imagine future protocols that can deal smoothly with diverse community opinions worldwide, but always respect the sovereignty and decisions of all members on the network. **(Testnet until the #LaunchPBaaS release)**",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the `notarizationprotocol`:1 setting in a chain launch?",
            "The `notarizationprotocol`:1 setting in a chain launch does not specify that notary witnesses are not required. In fact, it allows a chain launch to specify notary witnesses that will be used when they do their job.",
            "Using `\u201cnotarizationprotocol\u201d:1`, which is also the default, a chain launch can specify notary witnesses that will be used when they do their job. Even if they stop witnessing for any reason, the protocol will fail-over to auto-notarization, ensuring that cross-chain transactions still function as expected, even if just for people to move their assets to another blockchain, although significantly more slowly and based solely on cryptographic proof and challenge resolution between merge miners and stakers. This cross-chain proof and challenge protocol operates even when witnesses are also operating and if miners and stakers continue to prove a more powerful chain than the one witnesses represent, the most powerful chain can still be confirmed. **(Testnet until the #LaunchPBaaS release)**5. **Expanding L1 VerusID APIs**: This release provides a major enhancement to the identity content multimap support with two new APIs, `getidentityhistory` and `getidentitycontent` that provide real-time mempool access and also introduce self-sovereign delete operations to identity content that can be used by applications, making it easy for applications to index, organize, and aggregate an unlimited amount of user content referenced by an identity and made available to the application. This is the technology we used for oracle upgrade notifications, as all of this is available at L1, making it possible to imagine future protocols that can deal smoothly with diverse community opinions worldwide, but always respect the sovereignty and decisions of all members on the network. **(Testnet until the #LaunchPBaaS release)**",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]