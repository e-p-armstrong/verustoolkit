[
    "## Conversation that answers the provided question:\n**User:**\nI've been trying to submit a notarization using the `verus` command-line tool, but I'm not sure how to do it without providing any evidence. Can you help me out?\n\n**AI Assistant:**\nI think there may be a misunderstanding. You cannot submit a notarization using the `verus` command-line tool without providing evidence. The `submitacceptednotarization` command requires two arguments: `earnednotarization` and `notaryevidence`. The `notaryevidence` argument is required to provide proof of the notarization.\n\nYou'll need to provide the necessary evidence to submit a valid notarization. If you're having trouble with the command or understanding what evidence is required, I'd be happy to help you with that.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you submit a notarization using the `verus` command-line tool without providing any evidence?",
            "You cannot submit a notarization using the `verus` command-line tool without providing evidence. The `submitacceptednotarization` command requires two arguments: `earnednotarization` and `notaryevidence`. The `notaryevidence` argument is required to provide proof of the notarization.",
            "Examples:\n```bash\n> verus submitacceptednotarization \"{earnednotarization}\" \"{notaryevidence}\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitacceptednotarization\", \"params\": [\"{earnednotarization}\" \"{notaryevidence}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `submitchallenges [json array]`\nSubmits one or more cryptographic challenges to existing, unconfirmed notarizations, proving the existence\nof an alternate chain. Whether the alternate chain has more power than the chain with a pending notarization\nis not required, only that it has moved forward multiple blocks since the prior notarization.Requires that the local wallet have funds for fees.#### Arguments:\n\"challenges\"         (array, required) one or more challenges to unconfirmed notarizations on this system\n```json\n[\n {\n  \"type\":\"vrsc::evidence.skipchallenge\" || \"iCwxpRL6h3YeCRtGjgQSsqoKdZCuM4Dxaf\" ||\n            \"type\":\"vrsc::evidence.validitychallenge\" || \"iCPb8ywQna7jYV2SHrGZ6vQMj7kuyWFxvb\",\n  \"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},\n  \"forkroot\":{},\n  \"challengeroot\":{},\n  \"evidence\":{}\n },\n {...},\n  ...\n]\n```#### Result:\n```json\n[{\"txid\":\"hex\"}, {\"error\":\"errorstring\"}, ...]  (array) results of submitted challenge transactions\n```#### Examples:\n```bash\n> verus submitchallenges '[{\"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},\"challengeroot\":{},\"evidence\":{}}]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitchallenges\", \"params\": [[{\"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},\"challengeroot\":{},\"evidence\":{}}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]