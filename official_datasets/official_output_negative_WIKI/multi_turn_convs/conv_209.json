[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm having some trouble with nodes on my Verus setup. I'm trying to add a node using the `disconnectnode` command, but it's not working. Can you help?\n\n**AI Assistant:**\nI think there might be some confusion here! The `disconnectnode` command is actually used to immediately disconnect from a specified node, not to add a new one. To add a node, you would use the `addnode` command, like this:\n```\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n```\nDid you try that?\n\n**User:**\nOh, I see! I must have gotten it backwards. Thanks for the correction. But what about the `clearbanned` command? I thought that was used to disconnect from a specific node?\n\n**AI Assistant:**\nNo, that's not quite right. The `clearbanned` command is actually used to clear all banned IPs, not to disconnect from a specific node. To disconnect from a specific node, you would use the `disconnectnode` command, like this:\n```\n> verus disconnectnode \"192.168.0.6:8233\"\n```\nThe `clearbanned` command has a different purpose altogether.\n\n**User:**\nOkay, got it. One more question. Can I use the `getaddednodeinfo` command to get information about nodes that were added using `onetry`?\n\n**AI Assistant:**\nNo, unfortunately not. According to the documentation, \"onetry addnodes are not listed here\". The `getaddednodeinfo` command doesn't provide information about nodes added using `onetry`.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you add a node using the `disconnectnode` command?",
            "You don't. The `disconnectnode` command is used to immediately disconnect from a specified node, not to add a new one. To add a node, you would use the `addnode` command, like this:\n```\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n```",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `clearbanned` command, and how do you use it to disconnect from a specific node?",
            "The `clearbanned` command is used to clear all banned IPs, not to disconnect from a specific node. To disconnect from a specific node, you would use the `disconnectnode` command, like this:\n```\n> verus disconnectnode \"192.168.0.6:8233\"\n```",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "Can you use the `getaddednodeinfo` command to get information about nodes that were added using `onetry`?",
            "No, the `getaddednodeinfo` command does not provide information about nodes added using `onetry`. According to the documentation, \"onetry addnodes are not listed here\".",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]