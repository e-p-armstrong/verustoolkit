[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I have some questions about the `sendcurrency` command. What happens when you use an invalid signature with it?\n\n**AI Assistant:**\nIf you use an invalid signature with the `sendcurrency` command, the result will likely be `false` or the command will fail.\n\n**User:**\nThat makes sense. Does the `sendcurrency` command still support only transparent addresses as funding sources and destinations?\n\n**AI Assistant:**\nNo, the `sendcurrency` command no longer only supports transparent addresses as funding sources and destinations. It can now use sapling addresses as native currency funding sources and destinations for any transaction.\n\n**User:**\nThat's good to know. Can you use a wildcard to specify all private z-addresses in the wallet as a funding source in the `sendcurrency` command?\n\n**AI Assistant:**\nNo, there is no wildcard for specifying all private z-addresses in the wallet as a funding source in the `sendcurrency` command. However, you can use wildcards for specifying all transparent addresses (`\"*\"`), all R-addresses (`\"R*\"`), and all IDs controlled by the wallet (`\"i*\"`).\n\n**User:**\nOne more question. Does the `sendcurrency` command wait for the transaction to complete before returning?\n\n**AI Assistant:**\nNo, the `sendcurrency` command is now an asynchronous API that returns an operation ID and completes in the background. The status of the operation can be checked using the `z_getoperationstatus` command.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What happens when you use an invalid signature with the `sendcurrency` command?",
            "If you use an invalid signature with the `sendcurrency` command, the result will likely be `false` or the command will fail.",
            "**The result will be true if the signature is valid.**\n```\ntrue\n```\n## v0.7.2-4 WITH THE WORLD'S FIRST FRIENDLY-NAME, zk-SNARK ADDRESSES FOR MAINNET AND TESTNET\nAnnouncing NON-MANDATORY CLI upgrade v0.7.2-4 with the world's first friendly-name private z-address support for sending and receiving funds and messages, including the following improvements and updates:\n- `sendcurrency` can now use sapling addresses as native currency funding sources and destinations for any transaction.\n- An identity's z-address can now be referenced as a funding source or destination by appending `:private` to an ID (eg. `\"idname@:private\"`). This form of z-address will also be able to be used with the z_getbalance command.\n- New wildcards can also be used as funds sources in the 'sendcurrency' command and parameters to z_getbalance that include:\n  - All transparent addresses in the wallet (both R-addresses and IDs)\n    `\"*\"``\n  - All R-addresses in the wallet\n    `\"R*\"`\n  - All IDs controlled by the wallet\n    `\"i*\"`\n- `sendcurrency` will now be an asynchronous API that will return an operation ID, as `z_sendmany` does, and complete in the background. It will also have its status available through `z_getoperationstatus`.**NOTE:** Due to the zero knowledge nature of z-addresses, a z-address is an endpoint in your VerusID which can be changed if you revoke and recover an ID, funds held on a private address or endpoint are not able to be redirected to the newly recovered ID unless you still have control over the z-address itself. Transparent funds controlled by an ID are recovered when the ID is revoked and recovered, even if you have lost the keys. This is a fundamental limitation of zero-knowledge privacy, not an error and not something to be fixed. Please consider this when using friendly-name private addresses as funds and not just message endpoints.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Does the `sendcurrency` command still support only transparent addresses as funding sources and destinations?",
            "No, the `sendcurrency` command no longer only supports transparent addresses as funding sources and destinations. It can now use sapling addresses as native currency funding sources and destinations for any transaction.",
            "**The result will be true if the signature is valid.**\n```\ntrue\n```\n## v0.7.2-4 WITH THE WORLD'S FIRST FRIENDLY-NAME, zk-SNARK ADDRESSES FOR MAINNET AND TESTNET\nAnnouncing NON-MANDATORY CLI upgrade v0.7.2-4 with the world's first friendly-name private z-address support for sending and receiving funds and messages, including the following improvements and updates:\n- `sendcurrency` can now use sapling addresses as native currency funding sources and destinations for any transaction.\n- An identity's z-address can now be referenced as a funding source or destination by appending `:private` to an ID (eg. `\"idname@:private\"`). This form of z-address will also be able to be used with the z_getbalance command.\n- New wildcards can also be used as funds sources in the 'sendcurrency' command and parameters to z_getbalance that include:\n  - All transparent addresses in the wallet (both R-addresses and IDs)\n    `\"*\"``\n  - All R-addresses in the wallet\n    `\"R*\"`\n  - All IDs controlled by the wallet\n    `\"i*\"`\n- `sendcurrency` will now be an asynchronous API that will return an operation ID, as `z_sendmany` does, and complete in the background. It will also have its status available through `z_getoperationstatus`.**NOTE:** Due to the zero knowledge nature of z-addresses, a z-address is an endpoint in your VerusID which can be changed if you revoke and recover an ID, funds held on a private address or endpoint are not able to be redirected to the newly recovered ID unless you still have control over the z-address itself. Transparent funds controlled by an ID are recovered when the ID is revoked and recovered, even if you have lost the keys. This is a fundamental limitation of zero-knowledge privacy, not an error and not something to be fixed. Please consider this when using friendly-name private addresses as funds and not just message endpoints.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Can you use a wildcard to specify all private z-addresses in the wallet as a funding source in the `sendcurrency` command?",
            "No, there is no wildcard for specifying all private z-addresses in the wallet as a funding source in the `sendcurrency` command. However, you can use wildcards for specifying all transparent addresses (`\"*\"`), all R-addresses (`\"R*\"`), and all IDs controlled by the wallet (`\"i*\"`).",
            "**The result will be true if the signature is valid.**\n```\ntrue\n```\n## v0.7.2-4 WITH THE WORLD'S FIRST FRIENDLY-NAME, zk-SNARK ADDRESSES FOR MAINNET AND TESTNET\nAnnouncing NON-MANDATORY CLI upgrade v0.7.2-4 with the world's first friendly-name private z-address support for sending and receiving funds and messages, including the following improvements and updates:\n- `sendcurrency` can now use sapling addresses as native currency funding sources and destinations for any transaction.\n- An identity's z-address can now be referenced as a funding source or destination by appending `:private` to an ID (eg. `\"idname@:private\"`). This form of z-address will also be able to be used with the z_getbalance command.\n- New wildcards can also be used as funds sources in the 'sendcurrency' command and parameters to z_getbalance that include:\n  - All transparent addresses in the wallet (both R-addresses and IDs)\n    `\"*\"``\n  - All R-addresses in the wallet\n    `\"R*\"`\n  - All IDs controlled by the wallet\n    `\"i*\"`\n- `sendcurrency` will now be an asynchronous API that will return an operation ID, as `z_sendmany` does, and complete in the background. It will also have its status available through `z_getoperationstatus`.**NOTE:** Due to the zero knowledge nature of z-addresses, a z-address is an endpoint in your VerusID which can be changed if you revoke and recover an ID, funds held on a private address or endpoint are not able to be redirected to the newly recovered ID unless you still have control over the z-address itself. Transparent funds controlled by an ID are recovered when the ID is revoked and recovered, even if you have lost the keys. This is a fundamental limitation of zero-knowledge privacy, not an error and not something to be fixed. Please consider this when using friendly-name private addresses as funds and not just message endpoints.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Does the `sendcurrency` command wait for the transaction to complete before returning?",
            "No, the `sendcurrency` command is now an asynchronous API that returns an operation ID and completes in the background. The status of the operation can be checked using the `z_getoperationstatus` command.",
            "**The result will be true if the signature is valid.**\n```\ntrue\n```\n## v0.7.2-4 WITH THE WORLD'S FIRST FRIENDLY-NAME, zk-SNARK ADDRESSES FOR MAINNET AND TESTNET\nAnnouncing NON-MANDATORY CLI upgrade v0.7.2-4 with the world's first friendly-name private z-address support for sending and receiving funds and messages, including the following improvements and updates:\n- `sendcurrency` can now use sapling addresses as native currency funding sources and destinations for any transaction.\n- An identity's z-address can now be referenced as a funding source or destination by appending `:private` to an ID (eg. `\"idname@:private\"`). This form of z-address will also be able to be used with the z_getbalance command.\n- New wildcards can also be used as funds sources in the 'sendcurrency' command and parameters to z_getbalance that include:\n  - All transparent addresses in the wallet (both R-addresses and IDs)\n    `\"*\"``\n  - All R-addresses in the wallet\n    `\"R*\"`\n  - All IDs controlled by the wallet\n    `\"i*\"`\n- `sendcurrency` will now be an asynchronous API that will return an operation ID, as `z_sendmany` does, and complete in the background. It will also have its status available through `z_getoperationstatus`.**NOTE:** Due to the zero knowledge nature of z-addresses, a z-address is an endpoint in your VerusID which can be changed if you revoke and recover an ID, funds held on a private address or endpoint are not able to be redirected to the newly recovered ID unless you still have control over the z-address itself. Transparent funds controlled by an ID are recovered when the ID is revoked and recovered, even if you have lost the keys. This is a fundamental limitation of zero-knowledge privacy, not an error and not something to be fixed. Please consider this when using friendly-name private addresses as funds and not just message endpoints.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]