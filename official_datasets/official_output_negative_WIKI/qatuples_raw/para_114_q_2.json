[
    "Can I use the `getmempoolinfo` command to add a new transaction to the memory pool?",
    "No, the `getmempoolinfo` command is a read-only command that returns details on the active state of the TX memory pool. It does not allow you to add new transactions to the memory pool.",
    "#### Result:\n```json\n{\n \"time\": xxxxx,             (numeric) The timestamp for the final block in the window in UNIX format.\n \"txcount\": xxxxx,           (numeric) The total number of transactions in the chain up to that point.\n \"window_final_block_hash\": \"...\",   (string) The hash of the final block in the window.\n \"window_block_count\": xxxxx,      (numeric) Size of the window in number of blocks.\n \"window_tx_count\": xxxxx,       (numeric) The number of transactions in the window. Only returned if \"window_block_count\" is > 0.\n \"window_interval\": xxxxx,       (numeric) The elapsed time in the window in seconds. Only returned if \"window_block_count\" is > 0.\n \"txrate\": x.xx,            (numeric) The average rate of transactions per second in the window. Only returned if \"window_interval\" is > 0.\n}\n```Examples:\n```bash\n> verus getchaintxstats\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getchaintxstats\", \"params\": [2016] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getdifficulty`\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.#### Result:\n```\nn.nnn    (numeric) the proof-of-work difficulty as a multiple of the minimum difficulty.\n```\nExamples:\n```bash\n> verus getdifficulty\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdifficulty\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getmempoolinfo`\nReturns details on the active state of the TX memory pool.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]