[
    [
        [
            "How does the Verus Vault use case allow someone to spend funds controlled by a timelocked ID without waiting for the timelock to expire?",
            "The Verus Vault use case does not allow someone to spend funds controlled by a timelocked ID without waiting for the timelock to expire. In fact, the timelock feature prevents any spending of funds controlled by the ID until the timelock has expired. During the timelock period, the ID and its funds can still be used for staking, but not for spending. If someone compromises your private keys while an ID is locked, they cannot spend any of the funds unless they unlock the ID first and wait for the specified timelock period to expire.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Can a compromised ID be unlocked and spent immediately without any waiting period, even if it was previously timelocked?",
            "No, that's not possible. If an ID is timelocked, even if someone compromises your private keys and tries to unlock it, they will still have to wait for the specified timelock period to expire before they can spend any of the funds controlled by that ID. The unlock operation itself will require a waiting period of the same duration as the original timelock period, which can only be circumvented by a revocation followed by a recovery operation.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Does the Verus Vault use case provide a way to completely eliminate the risk of theft of funds controlled by an ID, without any possibility of compromise?",
            "While the Verus Vault use case provides a highly secure way to protect funds controlled by an ID, it does not completely eliminate the risk of theft. The technology is referred to as \"theft-resistant\" rather than \"theft-proof\". However, by using the Verus Vault feature in combination with other security measures, such as modifying the controlling private keys of an identity before unlocking it, users can achieve a very high level of security and protection for their assets.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9a35d933-b81c-453f-87fe-46901e4b0cad"
]