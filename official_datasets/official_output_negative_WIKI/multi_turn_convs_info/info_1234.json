[
    [
        [
            "Can I use the `z_validateaddress` command to validate a standard Verus address?",
            "No, the `z_validateaddress` command is specifically designed to validate z addresses, not standard Verus addresses. For standard Verus addresses, you should use the `validateaddress` command.",
            "#### Result:\n```json\n{\n \"isvalid\" : true|false,     (boolean) If the address is valid or not. If not, this is the only property returned.\n \"address\" : \"verusaddress\",  (string) The Verus address validated\n \"scriptPubKey\" : \"hex\",    (string) The hex encoded scriptPubKey generated by the address\n \"ismine\" : true|false,     (boolean) If the address is yours or not\n \"isscript\" : true|false,    (boolean) If the key is a script\n \"pubkey\" : \"publickeyhex\",  (string) The hex value of the raw public key\n \"iscompressed\" : true|false,  (boolean) If the address is compressed\n \"account\" : \"account\"     (string) DEPRECATED. The account associated with the address, \"\" is the default account\n}\n```\nExamples:\n```bash\n> verus validateaddress \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"validateaddress\", \"params\": [\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_validateaddress \"zaddr\"`\nReturn information about the given z address.#### Arguments:\n1. \"zaddr\"   (string, required) The z address to validate",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e21cfd2b-d37d-4e24-b7e4-9460dd23593e"
]