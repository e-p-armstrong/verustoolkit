[
    [
        [
            "How do you set up a new currency on Verus without specifying any eras or rewards?",
            "You can't set up a new currency on Verus without specifying eras or rewards. The \"eras\" field is required and must contain at least one object with \"reward\", \"decay\", \"halving\", and \"eraend\" properties. These properties define the different phases of rewards and convertibility for the currency.",
            "h percentage of proceeds for fractional currency sent to launching ID\n \"preallocations\" : \"[{\"i-address\":n}, ...]\", (objarray) VerusIDs and amounts for pre-allocation at launch\n \"initialcontributions\" : \"[n, ...]\",  (numberarray) amounts of pre-conversions reserved for launching ID\n \"idregistrationfees\" : n,       (number) base cost of IDs for this currency namespace in this currency\n \"idreferrallevels\" : n,        (int) levels of ID referrals (only for native PBaaS chains and IDs)\n \"idimportfees\" : n,          (number) fees required to import an ID to this system (only for native PBaaS chains and IDs)\n \"eras\" : \"[obj, ...]\",         (objarray) different chain phases of rewards and convertibility\n {\n  \"reward\" : \"[n, ...]\",        (int) reward start for each era in native coin\n  \"decay\" : \"[n, ...]\",        (int) exponential or linear decay of rewards during each era\n  \"halving\" : \"[n, ...]\",       (int) blocks between halvings during each era\n  \"eraend\" : \"[n, ...]\",        (int) block marking the end of each era\n  \"eraoptions\" : \"[n, ...]\",      (int) options (reserved)\n }\n \"nodes\"   : \"[obj, ..]\",  (objectarray, optional) up to 8 nodes that can be used to connect to the blockchain   [{\n    \"nodeidentity\" : \"txid\", (string, optional) internet, TOR, or other supported address for node\n    \"paymentaddress\" : n,   (int,   optional) rewards payment address\n   }, .. ]\n \"lastconfirmedcurrencystate\" : {\n  }\n \"besttxid\" : \"txid\"\n  }\n \"confirmednotarization\" : {\n  }\n \"confirmedtxid\" : \"txid\"\n}\n```\nExamples:\n```bash\n> verus getcurrency \"chainname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrency\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "8d1dc06b-d2e6-4516-b5f7-f5cae6008793"
]