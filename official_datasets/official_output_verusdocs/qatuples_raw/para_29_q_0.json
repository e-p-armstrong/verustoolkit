[
    "What are the two types of VerusIDs?",
    "There are two types of VerusIDs: those defined on the Verus network and those defined on independent PBaaS (Public Blockchains as a Service) blockchains that were spawned from and registered on the Verus blockchain network. Additionally, there are VerusIDs that may exist on fully external systems that were created without initial registration on the Verus network.",
    "Generally, one may think of two types of VerusIDs, those defined on the Verus network or on independent PBaaS (Public Blockchains as a Service) blockchains spawned originally from and registered on the Verus blockchain network, or VerusIDs, which may also exist on fully external systems that may have been created without any registration on the Verus network initially. In order for an externally created VerusID to be recognizable on the Verus blockchain network or by applications using the VDXF that are compatible with the Verus blockchain network that external system must provide a recognized bridge to the Verus blockchain.First, it is important to understand the requirements of registered VerusID identity names, which will also inform how externally generated VerusIDs are recognized as well. For the purposes of the VDXF, we do not require compatibility of the internal structure of IDs across different systems, and only define compatibility requirements of the naming systems and how those names translate into recognisable IDs on the Verus network.## ImplementationA VDXF object is fundamentally a serialized byte array that can be written to or interpreted by any system, given the appropriate libraries for handling its format. The serialization process transforms structured data into a byte stream, while deserialization reverses this process, reconstructing the original structured data from the byte stream.### Key ComponentsThe VDXF object comprises several key components encoded into bytes:",
    "./raw_text_input_docs/README_vdxf.md"
]