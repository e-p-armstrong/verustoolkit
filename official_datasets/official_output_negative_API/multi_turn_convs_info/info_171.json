[
    [
        [
            "Can you explain why the `createrawtransaction` command signs and broadcasts the transaction to the network?",
            "Actually, the `createrawtransaction` command does not sign or broadcast the transaction to the network. It only creates a raw transaction spending the given inputs and sending to the given addresses, returning a hex-encoded raw transaction. The transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network.\n\n**QUESTION: **\nHow do you use the `createrawtransaction` command to create a transaction that spends funds from multiple wallets?\n\n**ANSWER:**\nThe `createrawtransaction` command does not support creating a transaction that spends funds from multiple wallets. It can only create a transaction that spends funds from the inputs specified in the \"transactions\" argument, which are all part of the same wallet.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight )\n\nCreate a transaction spending the given inputs and sending to the given addresses.\nReturns hex-encoded raw transaction.\nNote that the transaction's inputs are not signed, and\nit is not stored in the wallet or transmitted to the network.\n\nArguments:\n1. \"transactions\"    (string, required) A json array of json objects\n   [\n    {\n     \"txid\":\"id\",  (string, required) The transaction id\n     \"vout\":n    (numeric, required) The output number\n     \"sequence\":n  (numeric, optional) The sequence number\n    }\n    ,...\n   ]\n2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values\n  {\n   \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount\n   \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts\n   \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data\n   ,...\n  }\n3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\n4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active)\n\nResult:\n\"transaction\"      (string) hex string of the transaction\n\nExamples\n> verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\"\n> verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ],
        [
            "What is the default value for the `expiryheight` argument in the `createrawtransaction` command?",
            "The default value for the `expiryheight` argument in the `createrawtransaction` command is not always 0. According to the documentation, the default value is `nextblockheight+20` if Overwinter is not active, and `nextblockheight+40` if Overwinter is active.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight )\n\nCreate a transaction spending the given inputs and sending to the given addresses.\nReturns hex-encoded raw transaction.\nNote that the transaction's inputs are not signed, and\nit is not stored in the wallet or transmitted to the network.\n\nArguments:\n1. \"transactions\"    (string, required) A json array of json objects\n   [\n    {\n     \"txid\":\"id\",  (string, required) The transaction id\n     \"vout\":n    (numeric, required) The output number\n     \"sequence\":n  (numeric, optional) The sequence number\n    }\n    ,...\n   ]\n2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values\n  {\n   \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount\n   \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts\n   \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data\n   ,...\n  }\n3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs\n4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active)\n\nResult:\n\"transaction\"      (string) hex string of the transaction\n\nExamples\n> verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\"\n> verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c7ad3dd7-4200-4654-9497-e906c63bff0a"
]