[
    [
        [
            "What does the `getsaplingtree` command return if no arguments are provided?",
            "If no arguments are provided, the `getsaplingtree` command returns the Sapling tree state at the latest currency state and height.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ],
        [
            "Can I use the `getsaplingtree` command to get the Sapling tree state for a specific block hash?",
            "No, the `getsaplingtree` command does not accept a block hash as an argument. It accepts an optional height or inclusive range with an optional step as an argument, which allows you to retrieve the Sapling tree state at a specific height or range of heights.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ],
        [
            "What is the format of the result returned by the `getsaplingtree` command?",
            "The result returned by the `getsaplingtree` command is an array of objects, each containing information about the Sapling tree state at a specific height. The format of each object in the array is:\n```\n{\n  \"network\": \"VRSC\",\n  \"height\": n,\n  \"hash\": \"hex\",\n  \"time\": n,\n  \"tree\": \"hex\"\n}\n```\nNot a single string value as you might have thought.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ]
    ],
    "will",
    "be",
    "replaced",
    "013d3992-7f73-4184-9b91-b3037fd0699d"
]