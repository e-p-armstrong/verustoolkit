[
    "## Conversation that answers the provided questions:\n**User:**\nHey there! I've got a couple of questions about managing identities and querying currencies in Verus. How do I manage identity locking and unlocking in Verus, and how can I query for currencies that have a certain level of liquidity?\n\n**AI Assistant:**\nManaging identities and querying currencies are both important aspects of working with Verus.\n\nLet's start with identity locking and unlocking. In Verus, you can manage identity locking and unlocking using the `updateidentity` command. There are two types of locking mechanisms: time lock and time delay.\n\n**Time Lock:**\nA time lock sets a specific block height at which an identity will be unlocked. To set a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block height>` with the desired block height at which you want the identity to be unlocked.\n\n**Time Delay:**\nA time delay sets a delay in blocks before an identity can be unlocked after its flags are set back to an unlocked state. To set a time delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block delay>` with the desired number of blocks to delay the unlock.\n\n**Revoking an Identity:**\nRevoking an identity will clear its locked status, regardless of the time delay or unlock height. However, a locked identity cannot revoke itself.\n\nNow, let's move on to querying currencies. Verus provides a way to query for currencies that have a certain level of liquidity using the `getcurrencyconverters` API. This API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nFor example, to query for currencies that have a BTC/ETH market at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that meet the specified liquidity criteria.\n\nDo you have any more questions about managing identities or querying currencies in Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I manage identity locking and unlocking in Verus, and how can I query for currencies that have a certain level of liquidity?",
            "In Verus, you can manage identity locking and unlocking using the `updateidentity` command. There are two types of locking mechanisms: time lock and time delay.\n\n**Time Lock:**\nA time lock sets a specific block height at which an identity will be unlocked. To set a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block height>` with the desired block height at which you want the identity to be unlocked.\n\n**Time Delay:**\nA time delay sets a delay in blocks before an identity can be unlocked after its flags are set back to an unlocked state. To set a time delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block delay>` with the desired number of blocks to delay the unlock.\n\n**Revoking an Identity:**\nRevoking an identity will clear its locked status, regardless of the time delay or unlock height. However, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nVerus also provides a way to query for currencies that have a certain level of liquidity using the `getcurrencyconverters` API. This API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nFor example, to query for currencies that have a BTC/ETH market at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that meet the specified liquidity criteria.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]