[
    "## Conversation that answers the provided questions:\n**User:**\nHi there! I have a couple of questions about working with VerusIDs. How do I lock and unlock VerusIDs, and what are conversion queries in Verus?\n\n**AI Assistant:**\nGreat questions! I'd be happy to explain how to lock and unlock VerusIDs, as well as conversion queries.\n\nIn Verus, you can lock and unlock VerusIDs using the `updateidentity` command. There are two ways to lock an ID: time lock and time delay.\n\n**Locking an ID:**\nA time lock is a way to lock an ID until a certain block height is reached. This is useful if you want to prevent an ID from being used until a specific point in the future. To set a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block height>` with the block height at which you want the ID to be unlocked.\n\nOn the other hand, a time delay is a way to lock an ID for a certain number of blocks after its flags are set back to an unlocked state. This is useful if you want to add an extra layer of security to an ID. To set a time delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block delay>` with the number of blocks you want to delay the unlock.\n\n**Revoking an Identity:**\nIf you revoke an identity, its locked status will be cleared, regardless of any time delay or unlock height. However, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nConversion queries are a way to retrieve information about currencies that have a certain level of liquidity. The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API to find currencies that have a certain market, such as BTC/ETH. For example:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that have BTC/ETH markets at or above the liquidity threshold.\n\nDo you have any further questions about locking and unlocking VerusIDs, or conversion queries?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I lock and unlock VerusIDs, and what are conversion queries in Verus?",
            "In Verus, you can lock and unlock VerusIDs using the `updateidentity` command. There are two ways to lock an ID: time lock and time delay.\n\n**Time Lock:**\nA time lock is a way to lock an ID until a certain block height is reached. This is useful if you want to prevent an ID from being used until a specific point in the future. To set a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block height>` with the block height at which you want the ID to be unlocked.\n\n**Time Delay:**\nA time delay is a way to lock an ID for a certain number of blocks after its flags are set back to an unlocked state. This is useful if you want to add an extra layer of security to an ID. To set a time delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block delay>` with the number of blocks you want to delay the unlock.\n\n**Revoking an Identity:**\nIf you revoke an identity, its locked status will be cleared, regardless of any time delay or unlock height. However, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nConversion queries are a way to retrieve information about currencies that have a certain level of liquidity. The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API to find currencies that have a certain market, such as BTC/ETH. For example:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that have BTC/ETH markets at or above the liquidity threshold.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]