[
    "## Conversation that answers the provided questions:\n**User:**\nI'm trying to figure out how to use the `sendcurrency` API to send and convert funds in Verus. Can you explain how to use this API and give some examples?\n\n**AI Assistant:**\nThe `sendcurrency` API in Verus is a powerful tool for sending and converting funds between different addresses and currencies. Here are some examples of how to use this API:\n\nThe `sendcurrency` API can be used in various ways, depending on your specific needs. Let me walk you through some examples.\n\n**Sending Funds from a Single Address:**\nTo send funds from a single address to a single recipient, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n```\nThis command sends 10 units of VRSCTEST from the address `bob@` to the address `alice@`.\n\n**Sending Funds from All Wallet Funds:**\nTo send funds from all wallet funds to multiple recipients, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@\",\"amount\":10}]'\n```\nThis command sends 10 units of VRSCTEST from all available wallet funds to both `alice@` and `bob@`.\n\n**Converting Funds to a Fractional Basket Currency:**\nTo convert funds to a fractional basket currency, such as VRSC-BTC, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n```\nThis command converts 10 units of VRSCTEST to VRSC-BTC and sends it to the address `bob@`.\n\n**Converting Funds to Another Reserve:**\nTo convert funds to another reserve, such as BTC, through a fractional currency, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]'\n```\nThis command converts 10 units of VRSCTEST to BTC through the VRSC-BTC fractional currency and sends it to the address `bob@`.\n\n**Preconverting to a New Currency:**\nTo preconvert funds to a new currency, such as NEWCOIN, before it is active, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refundto\":\"alice@\"}]'\n```\nThis command preconverts 10 units of VRSCTEST to NEWCOIN and sends it to the address `alice@`, with the option to refund the original amount to `alice@` if the NEWCOIN currency is not launched.\n\n**Defining a Currency:**\nTo create a currency, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. For example, you can define a currency called \"gold\" using the `definecurrency` API, which can be mapped to a specific, auditable store of gold. Similarly, you can define a token called \"mycoin\" which can be attributed to a specific utility or product value if the purchase exceeds a certain level.\n\nDo you have any further questions about using the `sendcurrency` API, or would you like me to clarify any of these examples?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How can I use the `sendcurrency` API to send and convert funds in Verus, and what are the different ways to use this API?",
            "The `sendcurrency` API in Verus is a powerful tool for sending and converting funds between different addresses and currencies. Here are some examples of how to use this API:\n\n**Sending Funds from a Single Address:**\nTo send funds from a single address to a single recipient, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n```\nThis command sends 10 units of VRSCTEST from the address `bob@` to the address `alice@`.\n\n**Sending Funds from All Wallet Funds:**\nTo send funds from all wallet funds to multiple recipients, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@\",\"amount\":10}]'\n```\nThis command sends 10 units of VRSCTEST from all available wallet funds to both `alice@` and `bob@`.\n\n**Converting Funds to a Fractional Basket Currency:**\nTo convert funds to a fractional basket currency, such as VRSC-BTC, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n```\nThis command converts 10 units of VRSCTEST to VRSC-BTC and sends it to the address `bob@`.\n\n**Converting Funds to Another Reserve:**\nTo convert funds to another reserve, such as BTC, through a fractional currency, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]'\n```\nThis command converts 10 units of VRSCTEST to BTC through the VRSC-BTC fractional currency and sends it to the address `bob@`.\n\n**Preconverting to a New Currency:**\nTo preconvert funds to a new currency, such as NEWCOIN, before it is active, you can use the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refundto\":\"alice@\"}]'\n```\nThis command preconverts 10 units of VRSCTEST to NEWCOIN and sends it to the address `alice@`, with the option to refund the original amount to `alice@` if the NEWCOIN currency is not launched.\n\n**Defining a Currency:**\nTo create a currency, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. For example, you can define a currency called \"gold\" using the `definecurrency` API, which can be mapped to a specific, auditable store of gold. Similarly, you can define a token called \"mycoin\" which can be attributed to a specific utility or product value if the purchase exceeds a certain level.",
            "The `sendcurrency` API can be used to send and convert funds.\n- **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n  ```\n- **Sending VRSCTEST from all wallet funds to two recipients (alice@ and bob@):**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@\",\"amount\":10}]'\n  ```\n- **Converting VRSCTEST to a fractional basket currency, VRSC-BTC:**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n  ```\n- **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]'\n  ```\n- **Preconverting to new currency, NEWCOIN, before it is active:**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refundto\":\"alice@\"}]'\n  ```## Defining a CurrencyTo create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]