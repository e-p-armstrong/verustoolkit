[
    "## Conversation that answers the provided questions:\n**User:**\nI'm curious about the latest TestNet release. What are the key updates and changes to cross-chain notarization, and how do these changes address previous issues with notarization forks and proof sizes?\n\n**AI Assistant:**\nThe latest TestNet release indeed brings significant updates to cross-chain notarization, addressing two major issues encountered in the previous rollout of auto-notarization.\n\nThe first issue was a notarization bug that caused notarizations to fork, simulating a worst-case, unmitigated attack on the notarization system. Although this did not cause the system to fail, it resulted in the generation of many perceived, but not real, notarization forks on the network.\n\nThe second issue was related to the effort to provide excessive evidence in auto-notarization, which led to the generation of large and time-consuming proofs. This approach was deemed unreasonable and unnecessary for mainnet in any real scenario.\n\nTo address these issues, the auto-notarization protocol will undergo changes to reduce the total and maximum amount of proof required while maintaining a sufficient level of cryptographic proof. This will involve more efficient and selective proof choices, similar in strength to the current proof model. These updates are expected to be completed soon, and until then, the TestNet will remain in a pre-PBaaS to mainnet preparatory state.\n\nIn summary, the latest TestNet release marks a significant step forward in cross-chain notarization, addressing previous issues with notarization forks and excessive proof sizes. The upcoming changes will provide a more efficient and secure notarization process, paving the way for a smoother transition to mainnet.\n\nDo you have any further questions about these updates or how they'll impact the notarization process?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the key updates and changes to cross-chain notarization in the latest TestNet release, and how do these changes address previous issues with notarization forks and proof sizes?",
            "The latest TestNet release brings significant updates to cross-chain notarization, addressing two major issues encountered in the previous rollout of auto-notarization. \n\nThe first issue was a notarization bug that caused notarizations to fork, simulating a worst-case, unmitigated attack on the notarization system. Although this did not cause the system to fail, it resulted in the generation of many perceived, but not real, notarization forks on the network.\n\nThe second issue was related to the effort to provide excessive evidence in auto-notarization, which led to the generation of large and time-consuming proofs. This approach was deemed unreasonable and unnecessary for mainnet in any real scenario.\n\nTo address these issues, the auto-notarization protocol will undergo changes to reduce the total and maximum amount of proof required while maintaining a sufficient level of cryptographic proof. This will involve more efficient and selective proof choices, similar in strength to the current proof model. These updates are expected to be completed soon, and until then, the TestNet will remain in a pre-PBaaS to mainnet preparatory state.\n\nIn summary, the latest TestNet release marks a significant step forward in cross-chain notarization, addressing previous issues with notarization forks and excessive proof sizes. The upcoming changes will provide a more efficient and secure notarization process, paving the way for a smoother transition to mainnet.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]