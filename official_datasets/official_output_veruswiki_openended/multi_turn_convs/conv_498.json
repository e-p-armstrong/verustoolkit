[
    "## Conversation that answers the provided questions:\n**User:**\nI'm trying to create a tokenized ID control (next-generation NFT) and an identity with a fractional currency as its parent in Verus. Can you walk me through the process and explain the requirements for doing so?\n\n**AI Assistant:**\nCreating a tokenized ID control and an identity with a fractional currency as its parent in Verus requires using the `definecurrency` and `registernamecommitment` commands. Let me break it down step by step.\n\n**Tokenized ID Control (Next-Generation NFT):**\nTo create a tokenized ID control, you need to define a currency with specific options and properties. The currency definition must have flags `OPTION_NFT_TOKEN` and `OPTION_TOKEN`, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n\nHere's an example of how to define a currency for a tokenized ID control:\n\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\n\n**Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` command with additional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank.\n\nHere's an example of how to register a name commitment with a parent currency:\n\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nWhen registering the identity, you need to specify the parent in the identity definition. You can enter `false` for `returntx` to sign and submit the ID registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address.\n\nHere's an example of how to register an identity with a parent currency:\n\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nIn summary, to create a tokenized ID control and an identity with a fractional currency as its parent in Verus, you need to define a currency with specific options and properties, register a name commitment with a parent currency, and register an identity with the parent currency specified in the identity definition.\n\nDo you have any questions about these steps or requirements?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you create a tokenized ID control (next-generation NFT) and an identity with a fractional currency as its parent in Verus, and what are the requirements for doing so?",
            "To create a tokenized ID control (next-generation NFT) and an identity with a fractional currency as its parent in Verus, you need to use the `definecurrency` and `registernamecommitment` commands.\n\n**Tokenized ID Control (Next-Generation NFT):**\nTo create a tokenized ID control, you need to define a currency with specific options and properties. The currency definition must have flags `OPTION_NFT_TOKEN` and `OPTION_TOKEN`, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n\nHere's an example of how to define a currency for a tokenized ID control:\n\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\n\n**Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` command with additional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank.\n\nHere's an example of how to register a name commitment with a parent currency:\n\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nWhen registering the identity, you need to specify the parent in the identity definition. You can enter `false` for `returntx` to sign and submit the ID registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address.\n\nHere's an example of how to register an identity with a parent currency:\n\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nIn summary, to create a tokenized ID control and an identity with a fractional currency as its parent in Verus, you need to define a currency with specific options and properties, register a name commitment with a parent currency, and register an identity with the parent currency specified in the identity definition.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]