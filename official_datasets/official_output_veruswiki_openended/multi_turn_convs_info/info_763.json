[
    [
        [
            "How do you define a new cryptocurrency on the Verus platform, and what are the implications of setting the proof protocol to PROOF_CHAINID?",
            "To define a new cryptocurrency on the Verus platform, you can use the `definecurrency` command with the necessary parameters. For example, let's say you want to create a new cryptocurrency called \"mycoin\" with specific properties. Here's an example command:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nThis command defines a new cryptocurrency named \"mycoin\" with the following properties:\n\n* `name`: The name of the cryptocurrency, which is \"mycoin\" in this case.\n* `options`: An integer value that specifies various options for the cryptocurrency. In this case, it's set to 97.\n* `proofprotocol`: The proof protocol used by the cryptocurrency. In this case, it's set to 2, which corresponds to PROOF_CHAINID.\n* `currencies`: An array of currencies that can be converted to \"mycoin\". In this case, it's set to [\"vrsctest\", \"gold\"], which means that \"mycoin\" can be converted from VRSCTEST and GOLD.\n* `minpreconversion`: An array of minimum amounts required for conversion from the specified currencies. In this case, it's set to [10000, 5.1298], which means that at least 10,000 VRSCTEST or 5.1298 GOLD is required for conversion.\n* `initialsupply`: The initial supply of \"mycoin\" units, which is set to 20,000 in this case.\n\nNow, let's talk about the implications of setting the proof protocol to PROOF_CHAINID. When you set the proof protocol to 2 (PROOF_CHAINID), it means that the controller of the chain ID can mint new coins. This is useful for scenarios where you want to have control over the supply of the cryptocurrency.\n\nTo mint new coins, you can use the `sendcurrency` command with the `mintnew` parameter set to 1. Here's an example command:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\". The `mintnew` parameter is set to 1, which indicates that new coins should be minted.\n\nIn summary, defining a new cryptocurrency on the Verus platform involves specifying its properties using the `definecurrency` command. Setting the proof protocol to PROOF_CHAINID gives the controller of the chain ID the ability to mint new coins, which can be useful for controlling the supply of the cryptocurrency.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "2cdb43a5-a799-4706-8b9f-1dc498ecfc1c"
]