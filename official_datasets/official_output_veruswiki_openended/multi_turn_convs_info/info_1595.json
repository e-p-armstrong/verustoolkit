[
    [
        [
            "What is the Verus Vault and how can it be used for time-locking and delayed lock opening, including examples of use cases and commands to implement these features?",
            "The Verus Vault is a powerful protocol capability within the Verus ecosystem that enables advanced time-locking and delayed lock opening features. These features can be used in a variety of ways, including providing theft resistance, delayed lock opening, and standard forms of time-locking.\n\n**Time-Locking:**\nOne of the key features of the Verus Vault is time-locking, which allows users to lock funds for a specified period of time. This can be achieved by setting the `timelock` parameter to a specific block height, after which the identity will be unlocked. For example, to update an identity with a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Delayed Lock Opening:**\nAnother feature of the Verus Vault is delayed lock opening, which allows users to delay the unlocking of an identity by a specified number of blocks. This can be achieved by setting the `flags` parameter to 2 and the `timelock` parameter to the desired block delay. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Important Notes:**\nIt's important to note that revoking an identity will clear its locked status, regardless of any time delay or unlock height. Additionally, a locked identity cannot revoke itself.\n\n**Use Cases:**\nThe Verus Vault has a wide range of potential use cases, including:\n\n* Providing time-locked funds to team members, children, or employees\n* Structuring deals and payment terms with time-locked conditions\n* Offering theft resistance and delayed lock opening features\n\nThe possibilities are endless, and the Verus team is excited to see how users will leverage this powerful new protocol capability.",
            "In addition to use cases related to theft resistance and delayed lock opening, Verus Vault can be used to provide more standard forms of time-locking by simply time locking and unlocking in one operation, leaving the unlock period immediately counting down. This capability could be used to provide time locked funds to team members, children, employees, or structured in a way to provide time locked deal and payment terms. The uses for this technology are certainly beyond those that we have already thought of, and we look forward to seeing how people leverage this powerful new protocol capability.- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency\n**Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "211ea8d5-819c-4930-855c-e436c5808663"
]