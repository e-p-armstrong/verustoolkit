[
    [
        [
            "How do you define a PBaaS blockchain and its bridge using the Verus command line tool, and what are the key components of these definitions?",
            "Defining a PBaaS blockchain and its bridge using the Verus command line tool involves creating two JSON objects: one for the PBaaS blockchain definition and another for the bridge definition. \n\n**PBaaS Blockchain Definition:**\nThe PBaaS blockchain definition is a JSON object that defines the properties of the blockchain. The key components of this definition are:\n\n1. **Name**: the name of the blockchain, in this case \"PBaaSChain\".\n2. **Options**: an integer that determines the behavior of the blockchain, in this case 264.\n3. **Currencies**: an array of currencies that can be used on the blockchain, in this case only \"VRSCTEST\".\n4. **Conversions**: an array of conversion ratios between the currencies, in this case only 1.\n5. **Eras**: an array of objects that define the block reward, reward decay, halving, and end of each era in the blockchain's lifecycle.\n6. **Notaries**: an array of VerusIDs that will serve as notaries on the blockchain.\n7. **Min Notaries Confirm**: the minimum number of notaries required to confirm a block, in this case 2.\n8. **Nodes**: an array of objects that define the network addresses and identities of the nodes on the blockchain.\n9. **Gateway Converter Name**: the name of the bridge, in this case \"Bridge\".\n10. **Gateway Converter Issuance**: the initial issuance of the bridge's native token, in this case 1,000,000.\n\n**Bridge Definition:**\nThe bridge definition is another JSON object that defines the properties of the bridge. The key components of this definition are:\n\n1. **Currencies**: an array of currencies that the bridge supports, in this case \"VRSCTEST\", \"PBaaSChain\", and \"USD\".\n2. **Initial Contributions**: an array of initial liquidity for each currency on the bridge.\n3. **Initial Supply**: the initial supply of the bridge's native token.\n\n**Passing Definitions to `definecurrency`:**\nTo create the PBaaS blockchain and its bridge, you need to pass these definitions to the `definecurrency` command using the Verus command line tool. The command takes two arguments: the PBaaS blockchain definition and the bridge definition.",
            "### Defining a PBaaS blockchain\n```json\n {\n  \"name\": \"PBaaSChain\",\n  \"options\": 264,\n  \"currencies\": [\n   \"VRSCTEST\"\n  ],\n  \"conversions\": [\n   1\n  ],\n  \"eras\": [\n   {\n    \"reward\": 1200000000,\n    \"decay\": 0,\n    \"halving\": 0,\n    \"eraend\": 0\n   }\n  ],\n  \"notaries\": [\n   \"Notary1@\",\n   \"Notary2@\",\n   \"Notary3@\",\n  ],\n  \"minnotariesconfirm\": 2,\n  \"nodes\": [\n   {\n    \"networkaddress\": \"111.111.111.111:10000\",\n    \"nodeidentity\": \"Node1@\"\n   },\n   {\n    \"networkaddress\": \"111.111.111.112:10000\",\n    \"nodeidentity\": \"Node2@\"\n   }\n  ],\n  \"gatewayconvertername\": \"Bridge\",\n  \"gatewayconverterissuance\": 1000000\n }\n```\nThe bridge definition has overridable defaults\n```json\n {\n  \"currencies\": [\n   \"VRSCTEST\",\n   \"PBaaSChain\",\n   \"USD\"\n  ],\n  \"initialcontributions\": [\n   380228.12033701,\n   0,\n   1000000\n  ],\n  \"initialsupply\": 3000000\n }\n```Now pass those definitions to `definecurrency`\n```json\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "4b31df62-ca72-4baf-82ff-9157c8b274e5"
]