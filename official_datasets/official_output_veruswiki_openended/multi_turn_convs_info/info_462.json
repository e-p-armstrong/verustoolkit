[
    [
        [
            "What are the implications of upgrading to a new version of the Verus testnet bridge, and what issues have been resolved in this release?",
            "Upgrading to a new version of the Verus testnet bridge, specifically v0.8.0-4 or later, is recommended to ensure a smooth experience on the testnet. If you have pending transactions on the bridge, some requested conversions may come back as refunded, and you should receive all amounts expected, less fees. After the upgrade, the network will resume transaction imports/exports to and from Rinkeby, and anyone who continues running the old version may need to resync to testnet from scratch to continue.\n\nThe latest release of the Verus testnet bridge resolves several key issues that were previously encountered. These issues include:\n\n1. **Larger Proof Support**: The Verus daemon now supports much larger proofs, enabling more types of cross-chain proving in the future. This is particularly important for systems that require large proofs or have significantly variable length proofs.\n\n2. **Failed Refunds Resolution**: The release fixes failed refunds of conversion transactions attempted after a fractional currency launches, but before its preconversion phase is complete. If you sent transactions during this time, you may have stuck refunds that should flow after this upgrade.\n\n3. **Launch Complete Marking**: Currencies are now marked as \u201claunch complete\u201d immediately after all preconversions have been processed, enabling normal conversions in all directions from that point forward.\n\n4. **Import Notarizations Completion**: The release fixes an issue that left some import notarizations incomplete, causing cross-chain transfers to wait longer than expected after some imports.\n\n5. **Hardening Improvements**: The release includes improvements and validation of hardening, which enhances the overall security and resilience of the Verus testnet bridge.\n\nOverall, upgrading to the latest version of the Verus testnet bridge ensures a smoother and more reliable experience, with several key issues resolved to improve the functionality and performance of the bridge.",
            "If you have pending transactions on the bridge, some requested conversions may come back as refunded, and you should receive all amounts expected, less fees. We will not reset the testnet, but within an hour after this availability, the network will resume transaction imports/exports to and from Rinkeby, and anyone who continues running the old version may need to resync to testnet from scratch to continue. If you have upgraded to v0.8.0-4 or do so before connecting again to testnet, you should only see improvement without disruption.I want to thank everyone who participated already in using this testnet and bridge release. I hope we can keep that level of participation or more up, as it has been extremely helpful. Because of all that\u2019s happened on this testnet to date, we were able to make a lot of progress in finding and resolving the following testnet issues in this release:1. Enable support for much larger proofs than was previously possible from systems that either have large proofs required or significantly variable length proofs. Having this capability in the daemon will pave the way for more types of cross-chain proving in the future as well.\n2. Fix failed refunds of conversion transactions attempted after a fractional currency launches, but before it\u2019s preconversion phase is complete. If you sent transactions during this time, you may have stuck refunds that should flow after this upgrade.\n3. Ensure that currencies are marked as \u201claunch complete\u201d immediately after all preconversions have been processed, enabling normal conversions in all directions from that point forward.\n4. Fix an issue that left some import notarizations incomplete and caused cross-chain transfers to wait longer than expected after some imports.\n5. Improve and validate hardening.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "de2c4281-2d79-467d-804a-11dd353fcaaa"
]