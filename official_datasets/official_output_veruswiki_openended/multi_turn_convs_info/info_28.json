[
    [
        [
            "What does the command `./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":96, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"conversions\":[0.01, 1.0],\"minpreconversion\":[1000,1000]}'` do, and what are the implications of setting `proofprotocol` to 2?",
            "The command `./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":96, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"conversions\":[0.01, 1.0],\"minpreconversion\":[1000,1000]}'` defines a new currency called \"mycoin\" on the VRSCTEST chain. This new currency, \"mycoin\", has several properties defined:\n\n1. `options`: an integer set to 96, which determines the behavior of the currency.\n2. `proofprotocol`: set to 2, which is PROOF_CHAINID. This means that the controller of the chain ID has the ability to mint new coins.\n3. `currencies`: an array of currencies that \"mycoin\" can be converted to, in this case, `vrsctest` and `gold`.\n4. `conversions`: an array of conversion rates between \"mycoin\" and the currencies it can be converted to. In this case, 1 \"mycoin\" is equivalent to 0.01 `vrsctest` and 1.0 `gold`.\n5. `minpreconversion`: an array of minimum amounts of each currency required to convert to \"mycoin\". In this case, 1000 `vrsctest` and 1000 `gold` are required to convert to \"mycoin\".\n\nBy setting `proofprotocol` to 2, the controller of the chain ID gains the ability to mint new coins. This can be done using the command `./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'`, which would mint 10,000 new \"mycoin\" coins and send them to the address \"mike@\".",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":96, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"conversions\":[0.01, 1.0],\"minpreconversion\":[1000,1000]}'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```# DisclaimerThis is experimental and unfinished software. Use at your own risk! No warranty for any kind of damage!\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The enclosed copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "23c971c6-f706-4f3b-bfbd-7993e50f5016"
]