[
    [
        [
            "What are the main features of Verus's multichain architecture, and how do you lock and unlock IDs, as well as perform conversion queries in the Verus ecosystem?",
            "Verus's multichain architecture is designed to be fractal, allowing for an unlimited number of simultaneously operating, interoperable blockchains. This enables a high degree of flexibility and scalability.\n\n**Locking and Unlocking IDs:**\nIn Verus, IDs can be locked and unlocked using the `updateidentity` command. There are two types of locks:\n\n1. **Time Lock:** This type of lock sets an unlock height for the identity, which means that the ID will be locked until the specified block height is reached.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n2. **Time Delay:** This type of lock sets a delay for the ID's unlock when the flags are set back to an unlocked state. This means that even if the flags are set to unlock the ID, it will remain locked for the specified number of blocks.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nIt's important to note that revoking an identity will clear its locked status, regardless of the time delay or unlock height. Additionally, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nVerus provides a `getcurrencyconverters` API that retrieves all currencies that meet certain criteria. Specifically, it returns currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nFor example, to get all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return a list of currencies that meet the specified criteria, allowing you to query and explore the conversion possibilities within the Verus ecosystem.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\nThe timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\nThe timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "a8e72c05-dc3e-47a9-b756-16d9bb8c28b2"
]