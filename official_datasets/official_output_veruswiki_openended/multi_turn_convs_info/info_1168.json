[
    [
        [
            "What are some examples of Verus commands and their usage, specifically for adding and managing nodes, clearing banned IPs, disconnecting from nodes, and getting information about added nodes?",
            "Verus provides several commands for managing nodes, clearing banned IPs, disconnecting from nodes, and getting information about added nodes. Here are some examples of these commands and their usage:\n\n**Adding a Node:**\nThe `addnode` command is used to add a new node to the network. It takes two arguments: the IP address and port of the node, and a node identifier (e.g., \"onetry\"). Here's an example of how to use this command:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n```\nYou can also use the `curl` command to add a node using JSON-RPC:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n**Clearing Banned IPs:**\nThe `clearbanned` command is used to clear all banned IPs from the node. Here's an example of how to use this command:\n```bash\n> verus clearbanned\n```\nYou can also use the `curl` command to clear banned IPs using JSON-RPC:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n**Disconnecting from a Node:**\nThe `disconnectnode` command is used to immediately disconnect from a specified node. It takes one argument: the IP address and port of the node. Here's an example of how to use this command:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n```\nYou can also use the `curl` command to disconnect from a node using JSON-RPC:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n**Getting Information about Added Nodes:**\nThe `getaddednodeinfo` command is used to return information about added nodes. It takes two arguments: a boolean indicating whether to include connected information, and an optional node identifier. Here's an example of how to use this command:\n```bash\n> verus getaddednodeinfo true \"192.168.0.6:8233\"\n```\nYou can also use the `curl` command to get information about added nodes using JSON-RPC:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddednodeinfo\", \"params\": [true, \"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nThese are just a few examples of the many commands and features available in Verus for managing nodes and network connections.",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "b2b7ae07-ce6e-4120-8b69-dbdf43b48795"
]