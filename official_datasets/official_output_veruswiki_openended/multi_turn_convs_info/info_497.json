[
    [
        [
            "How do I perform advanced transactions and operations in Verus, such as signing transactions from multi-signature IDs, tokenizing ID control, and creating an identity with a fractional currency as its parent?",
            "Verus provides several advanced features for performing complex transactions and operations. Here are the detailed steps for signing transactions from multi-signature IDs, tokenizing ID control, and creating an identity with a fractional currency as its parent.\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. **Create a transaction**: Use the `verus sendcurrency` command to create a transaction from the multi-signature ID. This will return an operation ID.\n2. **Get the raw transaction data**: Use the `verus z_getoperationstatus` command to get the raw hex transaction data for the operation ID returned in step 1.\n3. **Sign the transaction**: Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and use the `verus signrawtransaction` command to sign the transaction.\n4. **Broadcast the signed transaction**: After the last necessary signature is applied, broadcast the signed transaction on the network using the `verus sendrawtransaction` command.\n\n**Tokenizing ID Control (Next Generation NFT):**\nTo tokenize ID control, you need to define a currency with specific options and parameters. Here's an example:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nThis defines a currency with the name \"ID\", options 2080, pre-allocated to the ControlTokenRecipient@ address, and a maximum pre-conversion of 0.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` command with additional positional arguments. Here's an example:\n```\nregisternamecommitment <username> <parent_currency> <funding_address>\n```\nYou can use quotes `\"\"` to leave fields blank. For example, you can specify a parent currency, vrsc-btc, but no referrer. You can also use `z_addresses` to fund the name commitment and identity registration.\n\nThese advanced features in Verus provide powerful tools for creating complex transactions, tokenizing ID control, and creating identities with fractional currencies as their parents.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "35754270-c499-49fa-8639-84bd393bc230"
]