[
    [
        [
            "What are some advanced features of Verus, including the Verus-Ethereum testnet bridge, tokenizing ID control, testnet reset, and creating an identity with a fractional currency as its parent?",
            "Verus offers several advanced features that can be utilized for various purposes.\n\n**Verus-Ethereum Testnet Bridge:**\nThe Verus-Ethereum testnet bridge allows for the transfer of assets between the Verus network and the Ethereum Goerli testnet. This bridge can be accessed at [https://ethtest.verus.services](https://ethtest.verus.services) using Metamask. To use this feature, you will need to obtain some Goerli Ethereum, which can be done through a faucet or via the Verus testnet liquidity baskets on Verus.\n\n**Tokenizing ID Control (Next Generation NFT):**\nVerus allows for the creation of tokenized ID control, which is a next-generation NFT feature. This can be achieved by defining a currency with specific flags and options. The `definecurrency` command can be used to create such a token, with flags such as `OPTION_NFT_TOKEN` and `OPTION_TOKEN`, and a maximum supply of 1 satoshi. The token can be pre-allocated or pre-converted to, and the maximum pre-conversion must be 0 if the token is pre-allocated.\n\n**Testnet Reset:**\nIn case you need to reset your testnet, you can do so by closing Verus, deleting specific directories, and then restarting the testnet daemon or relaunching Verus Desktop. The directories to be deleted vary depending on the operating system you are using.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nVerus also allows for the creation of an identity with a fractional currency as its parent. This can be done using the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes to leave fields blank, and z_addresses can be used to fund the name commitment and identity registration.\n\nThese advanced features of Verus provide users with more flexibility and control over their assets and identities on the Verus network.",
            "As a reminder, you can access the Verus <-> Ethereum testnet bridge here: https://ethtest.verus.services , using your metamask, converting or sending cross chain through the Verus network from Ethereum's Goerli. To use these features you will need to get some Goerli Ethereum, either from a faucet or via the Verus testnet liquidity baskets on Verus.The rest of these release notes are the same as the prior release. Drop by the #pbaas-development channel to help us prepare for mainnet and start building your vision today!### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```## Testnet Reset\nTo reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`# Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "809c3b8b-663b-41ef-967b-510fae09e131"
]