[
    [
        [
            "How does Verus support multiple blockchains, and what are some advanced features of Verus IDs, such as locking and unlocking, and how can I query currency converters?",
            "Verus is designed as a fractal system, which means it can support an unlimited number of simultaneously operating, interoperable blockchains. This allows for a high degree of flexibility and scalability.\n\nOne of the advanced features of Verus IDs is the ability to lock and unlock them. This can be done using the `updateidentity` command. There are two types of locks: time locks and time delays.\n\nA **time lock** allows you to set an unlock height for an ID, which means that the ID will remain locked until a certain block height is reached. This can be useful for scenarios where you want to ensure that an ID remains locked for a certain period of time. To set a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nA **time delay**, on the other hand, allows you to set a delay for an ID's unlock when the flags are set back to an unlocked state. This means that even if the flags are set to unlock, the ID will remain locked for a certain number of blocks before it becomes unlocked again. To set a time delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nIt's also important to note that revoking an identity will clear its locked status, regardless of time delay or unlock height. Additionally, a locked identity cannot revoke itself.\n\nAnother advanced feature of Verus is the ability to query currency converters using the `getcurrencyconverters` API. This API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, to query currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return a list of all currencies that meet the specified criteria.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\nThe timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\nThe timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e15e3884-a563-4402-a87e-6ffa8d16e0ac"
]