[
    [
        [
            "How do I sign transactions from multi-signature IDs in Verus, and what are some key features of the Verus testnet?",
            "Signing transactions from multi-signature IDs in Verus involves a few steps:\n\n**Step 1: Create a transaction and get raw transaction data**\nTo start, you need to create a transaction using the `sendcurrency` command, specifying the multi-signature ID and the destination address and amount. This will return an operation ID, which you can use to get the raw transaction data using the `z_getoperationstatus` command.\n\n**Step 2: Take the raw hex transaction data to additional wallets**\nTake the raw hex transaction data to each additional wallet that contains the additional signing addresses or IDs.\n\n**Step 3: Sign the raw transaction**\nUse the `signrawtransaction` command to sign the raw transaction data in each additional wallet.\n\n**Step 4: Broadcast the signed transaction**\nAfter all necessary signatures are applied, broadcast the signed transaction on the network using the `sendrawtransaction` command.\n\nNow, about the Verus testnet: it's a full-featured, intrinsically decentralized multi-chain blockchain platform that offers a wide range of features and capabilities. With Verus, you can create new identities, currencies, liquidity pools, and blockchains for various use cases, such as businesses, governments, projects, or personal use. The platform allows you to send currencies worldwide on the same chain or across blockchains with ease, and even convert currencies to others on the network without an exchange. The Verus testnet is accessible from the Verus Desktop and Verus CLI wallets, and it offers a new level of flexibility and functionality in the world of cryptocurrency.",
            "## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.The new Verus testnet is a full-featured, intrinsically decentralized multi-chain blockchain platform with an unlimited number of identities, currencies, liquidity pools, and blockchains. It is accessible from the released versions of Verus Desktop and Verus CLI wallets, and it is the beginning of a new age in crypto. There are so many things you can do with Verus that you cannot with any other cryptocurrency platform, and you can try them all today.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "4d549c2b-2817-460b-886d-f40bec88c828"
]