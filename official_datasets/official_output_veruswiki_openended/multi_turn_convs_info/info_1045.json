[
    [
        [
            "What are some advanced features of the Verus multi-currency, multi-chain network, and how can you lock and unlock IDs in Verus?",
            "The Verus multi-currency, multi-chain network offers several advanced features that enable the creation of an unlimited number of interoperable blockchains. These features include:\n\n**Launch Options:**\nVerus provides a range of launch options for new currencies, including pre-conversions, maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations, and vesting schedules. These options allow for flexible and customizable launches that can accommodate different use cases and requirements.\n\n**Interoperable Blockchains:**\nThe Verus network enables the creation of an unlimited number of interoperable blockchains, each with its own notary IDs that provide decentralized bridge confirmation. This allows for public blockchains to be merge mined and staked, as well as private, internal blockchains that can be easily set up and bridged to public currencies. The fractal model of the Verus blockchain network enables an unlimited number of simultaneously operating, interoperable blockchains.\n\n**Locking and Unlocking IDs:**\nVerus also provides features for locking and unlocking IDs, including time locks and time delays. A time lock defines the unlock height of the identity, which can be set using the `updateidentity` command. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nA time delay, on the other hand, defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. This can be useful for adding an extra layer of security to ID management.\n\nOverall, the Verus multi-currency, multi-chain network provides a powerful and flexible platform for creating and managing blockchains, IDs, and currencies. Its advanced features and customizable options make it an ideal choice for a wide range of use cases and applications.",
            "their pre-conversions, less the network fees. The launch options also provide for maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies, similarly price neutral carve-outs of proceeds, and pre-launch discounts for early participants. Using VerusIDs, launches can also include vesting schedules in the pre-allocations as well.\n## An interoperable, multichain network for new use cases and unlimited scale**\n- The Verus multi-currency, multi-chain network allows the creation of an unlimited number of interoperable blockchains in the Verus network. Notary IDs, specified at chain definition, provide decentralized blockchain-specific bridge confirmation, enabling public blockchains available to the world for merge mining and staking, as well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST upda",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "48f8580c-fce5-43be-ab53-f8dcdba1e594"
]