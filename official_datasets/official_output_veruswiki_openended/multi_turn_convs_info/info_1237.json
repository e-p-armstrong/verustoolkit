[
    [
        [
            "What are the new features and improvements in the Verus CLI upgrade, specifically related to friendly-name private z-addresses, and how do they enhance the functionality of sending and receiving funds and messages?",
            "The Verus CLI upgrade introduces several new features and improvements related to friendly-name private z-addresses. These features aim to make it easier to use zero-knowledge proof (zk-SNARK) addresses for sending and receiving funds and messages on both mainnet and testnet.\n\nOne of the key features is the ability to use sapling addresses as native currency funding sources and destinations for any transaction. This is achieved by using the `sendcurrency` command, which can now use sapling addresses as both funding sources and destinations.\n\nAdditionally, an identity's z-address can be referenced as a funding source or destination by appending `:private` to an ID (e.g., `\"idname@:private\"`). This form of z-address can also be used with the `z_getbalance` command.\n\nThe upgrade also introduces new wildcards that can be used as funding sources in the `sendcurrency` command and parameters to `z_getbalance`. These wildcards include:\n\n* `*`: All transparent addresses in the wallet (both R-addresses and IDs)\n* `R*`: All R-addresses in the wallet\n* `i*`: All IDs controlled by the wallet\n\nAnother significant improvement is that the `sendcurrency` command is now an asynchronous API that returns an operation ID, similar to `z_sendmany`. This means that the command will complete in the background, and its status can be checked using `z_getoperationstatus`.\n\nIt's important to note that due to the zero-knowledge nature of z-addresses, funds held on a private address or endpoint cannot be redirected to a newly recovered ID unless you still have control over the z-address itself. This is a fundamental limitation of zero-knowledge privacy and not an error. Transparent funds controlled by an ID are recovered when the ID is revoked and recovered, even if you have lost the keys.",
            "**The result will be true if the signature is valid.**\n```\ntrue\n```\n## v0.7.2-4 WITH THE WORLD'S FIRST FRIENDLY-NAME, zk-SNARK ADDRESSES FOR MAINNET AND TESTNET\nAnnouncing NON-MANDATORY CLI upgrade v0.7.2-4 with the world's first friendly-name private z-address support for sending and receiving funds and messages, including the following improvements and updates:\n- `sendcurrency` can now use sapling addresses as native currency funding sources and destinations for any transaction.\n- An identity's z-address can now be referenced as a funding source or destination by appending `:private` to an ID (eg. `\"idname@:private\"`). This form of z-address will also be able to be used with the z_getbalance command.\n- New wildcards can also be used as funds sources in the 'sendcurrency' command and parameters to z_getbalance that include:\n  - All transparent addresses in the wallet (both R-addresses and IDs)\n    `\"*\"``\n  - All R-addresses in the wallet\n    `\"R*\"`\n  - All IDs controlled by the wallet\n    `\"i*\"`\n- `sendcurrency` will now be an asynchronous API that will return an operation ID, as `z_sendmany` does, and complete in the background. It will also have its status available through `z_getoperationstatus`.**NOTE:** Due to the zero knowledge nature of z-addresses, a z-address is an endpoint in your VerusID which can be changed if you revoke and recover an ID, funds held on a private address or endpoint are not able to be redirected to the newly recovered ID unless you still have control over the z-address itself. Transparent funds controlled by an ID are recovered when the ID is revoked and recovered, even if you have lost the keys. This is a fundamental limitation of zero-knowledge privacy, not an error and not something to be fixed. Please consider this when using friendly-name private addresses as funds and not just message endpoints.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "25cf07db-f908-4585-aa44-1dd0f7754834"
]