[
    [
        [
            "What are the purposes of the `getnetworkhashps`, `getnetworksolps`, and `prioritisetransaction` commands in Verus, and how do you use them?",
            "The `getnetworkhashps` and `getnetworksolps` commands in Verus are used to estimate the network's solutions per second, which is a measure of the network's processing power. The main difference between the two commands is that `getnetworkhashps` is deprecated and exists only for backwards-compatibility, while `getnetworksolps` is the recommended command to use.\n\nBoth commands take two optional arguments: `blocks` and `height`. The `blocks` argument specifies the number of blocks to use for the estimation, with a default value of 120. If you pass -1 as the value for `blocks`, the command will use the difficulty averaging window instead. The `height` argument allows you to estimate the network speed at a specific block height, with a default value of -1.\n\nThe result of both commands is a numeric value representing the estimated solutions per second.\n\nHere are some examples of how to use these commands:\n```bash\n> verus getnetworksolps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nOn the other hand, the `prioritisetransaction` command is used to adjust the priority of a transaction in the mempool. It takes three arguments: `txid`, `priority delta`, and `fee delta`. The `txid` is the transaction ID of the transaction you want to prioritize, `priority delta` is the change in priority you want to apply, and `fee delta` is the change in fee you want to apply.\n\nBy using this command, you can increase or decrease the priority of a transaction, which can affect the order in which it is mined into a block. This can be useful in certain situations, such as when you need to ensure that a transaction is mined quickly.\n\nHere is an example of how to use the `prioritisetransaction` command:\n```bash\n> verus prioritisetransaction <txid> <priority delta> <fee delta>\n```",
            "### `getnetworkhashps ( blocks height )`\nDEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.Returns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworkhashps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnetworksolps ( blocks height )`\nReturns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworksolps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `prioritisetransaction <txid> <priority delta> <fee delta>`\nAccepts the transaction into mined blocks at a higher (or lower) priority",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "6631d348-a939-4086-a683-1dae9dd9accf"
]