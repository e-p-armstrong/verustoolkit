[
    [
        [
            "How do you define a PBaaS (Public Blockchain as a Service) chain using the Verus command line tool, and what are the key components that make up the definition of a PBaaS chain?",
            "To define a PBaaS chain using the Verus command line tool, you need to create a JSON object that describes the chain's properties and pass it to the `definecurrency` command. Here's a breakdown of the key components that make up the definition of a PBaaS chain:\n\n**Chain Definition:**\nThe chain definition is a JSON object that contains the following properties:\n\n* `name`: The name of the PBaaS chain.\n* `options`: An integer that represents the chain's options.\n* `currencies`: An array of currency tickers that the chain supports.\n* `conversions`: An array of conversion ratios between the chain's native currency and each supported currency.\n* `eras`: An array of objects that define the block reward, reward decay, halving, and end of each \"era\" in the chain's lifecycle.\n* `notaries`: An array of VerusIDs that serve as notaries on the chain.\n* `minnotariesconfirm`: An integer that represents the minimum number of notaries needed to confirm a block.\n* `nodes`: An array of objects that describe the network addresses of the nodes on the chain, as well as their IDs.\n* `gatewayconvertername`: The name of the bridge that allows funds to be moved on and off the chain.\n* `gatewayconverterissuance`: The initial issuance of the bridge's native token.\n\n**Bridge Definition:**\nThe bridge definition is a separate JSON object that has overridable defaults. It contains the following properties:\n\n* `currencies`: An array of currency tickers that the bridge supports.\n* `initialcontributions`: An array of initial liquidity for each currency in the bridge.\n* `initialsupply`: The initial supply of the bridge's native token.\n\n**Defining the PBaaS Chain:**\nTo define the PBaaS chain, you need to pass both the chain definition and the bridge definition to the `definecurrency` command using the following format:\n```json\n./verus -chain=vrsctest definecurrency '{\"chain_definition\"}' '{\"bridge_definition\"}'\n```\nReplace `chain_definition` and `bridge_definition` with the actual JSON objects that describe the chain and bridge properties, respectively.",
            "## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```Now pass those definitions to `definecurrency`\n```json\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":330,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "ed5fbf24-e965-4698-8849-ed593961e902"
]