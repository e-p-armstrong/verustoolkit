[
    [
        [
            "How do I define a PBaaS blockchain using Verus, and what are the properties that I need to define? Additionally, how do I export an ID to a PBaaS chain?",
            "To define a PBaaS blockchain using Verus, you need to create a JSON object that contains several properties. These properties include:\n\n1. **Name**: The name of the PBaaS chain.\n2. **Options**: An integer that specifies the options for the chain.\n3. **Currencies**: An array of currencies that the chain's native currency can be converted into.\n4. **Conversions**: An array that defines the conversion ratios between the chain's native currency and each currency on the chain.\n5. **Eras**: An array that defines the block reward, reward decay, halving, and end of each \"era\" in the chain's lifecycle.\n6. **Notaries**: An array of VerusIDs that will serve as notaries on the chain.\n7. **MinNotariesConfirm**: An integer that specifies the minimum number of notaries needed to confirm a block.\n8. **Nodes**: An array that describes the network addresses of the nodes on the chain, as well as their IDs.\n9. **GatewayConverterName**: The name of the bridge converter.\n10. **GatewayConverterIssuance**: The issuance amount for the bridge converter.\n\nYou can then pass this JSON object to the `definecurrency` command to create the PBaaS chain.\n\nAdditionally, to export an ID to a PBaaS chain, you can use the `sendcurrency` command with the following format:\n\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\n\nThis command exports the specified ID to the specified PBaaS chain. The `exportto` property specifies the name of the PBaaS chain, and the `exportid` property specifies whether to export the ID. The `amount` property specifies the amount of currency to export, and the `currency` property specifies the currency to use for the export.",
            "### Defining a PBaaS blockchain\n```json\n {\n \"name\": \"PBaaSChain\",\n \"options\": 264,\n \"currencies\": [\n  \"VRSCTEST\"\n ],\n \"conversions\": [\n  1\n ],\n \"eras\": [\n  {\n   \"reward\": 1200000000,\n   \"decay\": 0,\n   \"halving\": 0,\n   \"eraend\": 0\n  }\n ],\n \"notaries\": [\n  \"Notary1@\",\n  \"Notary2@\",\n  \"Notary3@\",\n ],\n \"minnotariesconfirm\": 2,\n \"nodes\": [\n  {\n   \"networkaddress\": \"111.111.111.111:10000\",\n   \"nodeidentity\": \"Node1@\"\n  },\n  {\n   \"networkaddress\": \"111.111.111.112:10000\",\n   \"nodeidentity\": \"Node2@\"\n  }\n ],\n \"gatewayconvertername\": \"Bridge\",\n \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n {\n \"currencies\": [\n  \"VRSCTEST\",\n  \"PBaaSChain\",\n  \"USD\"\n ],\n \"initialcontributions\": [\n  380228.12033701,\n  0,\n  1000000\n ],\n \"initialsupply\": 3000000\n}\n```Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\n### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "8378d013-a19a-449a-b9ad-84abd5e77e72"
]