[
    [
        [
            "How do you define a new currency on the Verus platform and what does it mean to set the proof protocol to PROOF_CHAINID? Additionally, how can the controller of the chain ID mint new coins?",
            "Defining a new currency on the Verus platform involves using the `definecurrency` command with specific parameters. In the example given, the command is:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nLet's break down what each part of this command does:\n\n* `name` specifies the name of the new currency, in this case \"mycoin\".\n* `options` is a configurable integer, set to 33 in this example.\n* `proofprotocol` determines how the currency is secured and verified. In this case, it is set to 2, which corresponds to PROOF_CHAINID.\n* `currencies` lists the currencies that can be converted to \"mycoin\", which are \"vrsctest\" and \"gold\" in this example.\n* `minpreconversion` defines the minimum amounts of \"vrsctest\" and \"gold\" required to convert to \"mycoin\", respectively.\n* `initialsupply` sets the initial supply of \"mycoin\" to 20,000 units.\n\nSetting the `proofprotocol` to PROOF_CHAINID means that the controller of the chain ID has the ability to mint new coins. This is a powerful feature that allows the controller to create new coins as needed.\n\nTo mint new coins, the controller can use the `sendcurrency` command with the `mintnew` option. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command would mint 10,000 new \"mycoin\" coins and send them to the address \"mike@\".",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "fd9e2187-a00d-419f-88ae-b4fffdf3f78a"
]