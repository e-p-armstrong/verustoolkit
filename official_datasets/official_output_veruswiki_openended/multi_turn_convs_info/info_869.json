[
    [
        [
            "How can you define a new currency, such as \"gold\", using the Verus command line, and what are the requirements for launching it? Additionally, how can you convert VRSCTEST to GOLD, and what are the implications of doing so? Finally, how can you create a new currency, such as \"mycoin\", that can be converted to with either GOLD or VRSCTEST?",
            "To define a new currency, such as \"gold\", using the Verus command line, you can use the `definecurrency` command. For example, to define the currency \"gold\" with a conversion rate of 0.01 VRSCTEST per GOLD, you would use the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines the currency \"gold\" with the specified options, including the conversion rate and preallocation of coins to the address \"mike@\". However, this is just the first step in launching the currency.\n\nTo launch the currency, you need to fund the identity of the currency with at least 10 VRSCTEST, and then send a transaction to initiate the currency launch. The launch will start 50 blocks from when the transaction was made, and will require 1000 VRSCTEST to be preconverted at the specified conversion rate in order to launch.\n\nOnce the currency is launched, you can convert VRSCTEST to GOLD using the `sendcurrency` command. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis command will park the conversion until the token launches, at which point you will either receive 0.975 GOLD in your wallet, or your VRSCTEST will be returned.\n\nFinally, to create a new currency, such as \"mycoin\", that can be converted to with either GOLD or VRSCTEST, you can use the `definecurrency` command again, specifying the currencies that can be converted to \"mycoin\". For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nThis command defines the currency \"mycoin\" with the specified options, including the currencies that can be converted to \"mycoin\" and the initial supply of coins.",
            " \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to\ninitiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch.\nall of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation\nin the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches.\nAfter it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:\n ```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nthat would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back.\nAssuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "601e99d6-87ea-4aa5-9830-7d018f043ce0"
]