[
    "What are the `getidentitycontent` and `getidentityhistory` commands in Verus, and how do you use them to retrieve information about an identity?",
    "The `getidentitycontent` and `getidentityhistory` commands in Verus are used to retrieve information about a specific identity on the Verus network. Here's a breakdown of how to use these commands:\n\n**`getidentitycontent` Command:**\nThe `getidentitycontent` command is used to retrieve the content associated with a specific identity. The command takes several arguments:\n\n* `\"name@ || iid\"`: This is the required argument, which specifies the name followed by \"@\" or the i-address of the identity.\n* `\"heightstart\"`: This is an optional argument, which specifies the starting height from which to retrieve content. The default value is 0, which means it will retrieve content from the genesis block.\n* `\"heightend\"`: This is an optional argument, which specifies the ending height up to which to retrieve content. The default value is 0, which means it will retrieve content up to the current block height. A value of -1 means it will also retrieve content from the mempool.\n* `\"txproofs\"`: This is an optional argument, which specifies whether to return proof of the identity. The default value is false.\n* `\"txproofheight\"`: This is an optional argument, which specifies the height from which to generate a proof. The default value is the current block height.\n* `\"vdxfkey\"`: This is an optional argument, which specifies a more selective search for specific content in the identity.\n\nYou can use the `getidentitycontent` command in the Verus command-line interface or through a JSON-RPC call using `curl`.\n\n**`getidentityhistory` Command:**\nThe `getidentityhistory` command is used to retrieve the history of an identity, including all the transactions and events associated with it. The command takes the same arguments as the `getidentitycontent` command.\n\nIn summary, the `getidentitycontent` command retrieves the content associated with an identity, while the `getidentityhistory` command retrieves the history of an identity. Both commands can be used to retrieve specific information about an identity on the Verus network.",
    "#### Arguments:\n  \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity\n  \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive\n  \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,\n                      inclusive. -1 means also return values from the mempool.\n  \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID\n  \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof\n  \"vdxfkey\"      (vdxf key, optional) default=null, more selective search for specific content in ID#### Result:#### Examples:\n```bash\n> verus getidentitycontent \"name@\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitycontent\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getidentityhistory \"name@ || iid\" (heightstart) (heightend) (txproofs) (txproofheight)`#### Arguments:\n  \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity\n  \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive\n  \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,\n             inclusive. -1 means also return values from the mempool.\n  \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID\n  \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof#### Result:",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]