[
    "What are the steps to sign transactions from multi-signature IDs, and how can you create a tokenized ID control and an identity with a fractional currency as its parent using the Verus command line?",
    "Here are the steps and explanations for each of these processes:\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. **Create a transaction**: Use the `sendcurrency` command to create a transaction from a multi-signature ID. For example:\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n```\nThis will return an operation ID.\n\n2. **Get the operation status**: Use the `z_getoperationstatus` command to get the raw transaction data. For example:\n```\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nThis will return the raw hex transaction data.\n\n3. **Sign the transaction**: Take the raw hex transaction data to each additional wallet(s) containing the additional signing addresses/IDs and sign it using the `signrawtransaction` command. For example:\n```\nverus signrawtransaction <raw_hex_transaction>\n```\nRepeat this step for each additional signature required.\n\n4. **Broadcast the transaction**: After the last necessary signature is applied, broadcast the transaction on the network using the `sendrawtransaction` command. For example:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\n\n**Tokenizing ID Control (Next Generation NFT):**\nTo tokenize ID control, you need to define a currency with specific flags and settings. Here's an example:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nThis defines a currency with the name \"ID\", options set to 2080 (which includes OPTION_NFT_TOKEN and OPTION_TOKEN), and a max supply of 1 satoshi that is pre-allocated to the ControlTokenRecipient@ address.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` command with additional arguments. Here's an example:\n```\nverus registernamecommitment <identity_name> <currency_parent> <funding_address>\n```\nFor example:\n```\nverus registernamecommitment \"my_identity\" \"vrsc-btc\" \"my_funding_address@\"\n```\nThis creates an identity with the name \"my_identity\", a parent currency of \"vrsc-btc\", and a funding address of \"my_funding_address@\".",
    "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
    "./raw_text_input_wiki/release_notes.md"
]