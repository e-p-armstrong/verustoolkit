[
    "How do I use Verus commands to retrieve information about pending transfers on a specific chain, reserved deposits under the control of a particular currency, and the entries for a light wallet Sapling tree state?",
    "Verus provides several commands to retrieve important information about transfers, deposits, and light wallet Sapling tree states. Here's how to use these commands:\n\n**Retrieving Pending Transfers on a Specific Chain:**\nTo retrieve all pending transfers for a particular chain that have not yet been aggregated into an export, you can use the `getpendingtransfers` command. This command takes an optional argument, `chainname`, which specifies the name of the chain for which you want to retrieve pending transfers. If you don't provide a `chainname` argument, the command will return pending transfers for the current chain in the daemon.\n\nYou can use this command in two ways:\n\n1. Using the Verus executable: `verus getpendingtransfers \"chainname\"`\n2. Using cURL: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getpendingtransfers\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\n**Retrieving Reserved Deposits Under a Particular Currency:**\nTo retrieve all deposits under the control of a specified currency or chain, you can use the `getreservedeposits` command. This command takes an optional argument, `currencyname`, which specifies the full name or i-ID of the controlling currency.\n\nYou can use this command in two ways:\n\n1. Using the Verus executable: `verus getreservedeposits \"currencyname\"`\n2. Using cURL: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getreservedeposits\", \"params\": [\"currencyname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\n**Retrieving Entries for a Light Wallet Sapling Tree State:**\nTo retrieve the entries for a light wallet Sapling tree state, you can use the `getsaplingtree` command. This command takes an optional argument, which can be an integer `n`, a string `m,n`, or a string `m,n,o`. These arguments specify the height or inclusive range with an optional step at which to get the Sapling tree state. If you don't provide an argument, the command will return the latest currency state and height.\n\nYou can use this command by running `verus getsaplingtree \"n | m,n | m,n,o\"`.\n\nThese Verus commands provide a convenient way to retrieve important information about transfers, deposits, and light wallet Sapling tree states.",
    "### `getpendingtransfers \"chainname\"`\nReturns all pending transfers for a particular chain that have not yet been aggregated into an export.\n#### Arguments:\n```\n1. \"chainname\"           (string, optional) name of the chain to look for. no parameter returns current chain in daemon.\n```\n#### Result:\n```json\n {\n }\n```\nExamples:\n```bash\n> verus getpendingtransfers \"chainname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getpendingtransfers\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getreservedeposits \"currencyname\"`\nReturns all deposits under control of the specified currency or chain. If the currency is of an external system\nor chain, all deposits will be under the control of that system or chain only, not its independent currencies.#### Arguments:\n1. \"currencyname\"    (string, optional) full name or i-ID of controlling currency#### Result:\n```json\n {\n }\n```\nExamples:\n```bash\n> verus getreservedeposits \"currencyname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getreservedeposits\", \"params\": [\"currencyname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getsaplingtree \"n | m,n | m,n,o\"`\nReturns the entries for a light wallet Sapling tree state.#### Arguments:\n1. \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state. If not specified, the latest currency state and height is returned",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]