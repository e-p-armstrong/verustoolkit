[
    "What are some ways to use Verus Vault for time-locking, and how can I use the `updateidentity` command to time-lock and unlock an identity? Additionally, how can I retrieve currencies that have at least 1000 VRSC in reserve and have a certain reserve ratio using the `getcurrencyconverters` API?",
    "Verus Vault is a powerful tool that provides various use cases related to theft resistance and delayed lock opening. One of the ways to use Verus Vault is to provide more standard forms of time-locking by simply time-locking and unlocking in one operation. This capability can be used to provide time-locked funds to team members, children, employees, or structured in a way to provide time-locked deal and payment terms.\n\nTo achieve time-locking using Verus Vault, you can use the `updateidentity` command to set a timelock parameter, which defines the unlock height of the identity. Here's an example of how to do this:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nThis command sets the unlock height of the identity to a specific block height. Once the block height is reached, the identity will be unlocked.\n\nAnother way to use Verus Vault is to set a time delay for an ID's unlock when the flags are set back to an unlocked state. This can be done by setting the `timelock` parameter to a specific block delay. Here's an example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nThis command sets a time delay for the ID's unlock, which means that the identity will not be unlocked until the specified block delay has passed.\n\nIt's important to note that revoking an identity will clear its locked status, regardless of time delay or unlock height. Additionally, a locked identity cannot revoke itself.\n\nVerus Vault also provides a way to retrieve currencies that have at least 1000 VRSC in reserve and have a certain reserve ratio using the `getcurrencyconverters` API. This API can be used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nHere's an example of how to use the `getcurrencyconverters` API:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that have BTC/ETH markets at or above the liquidity threshold.\n\nOverall, Verus Vault provides a powerful and flexible way to manage time-locking and currency conversion, and can be used in a variety of use cases beyond those mentioned here.",
    "In addition to use cases related to theft resistance and delayed lock opening, Verus Vault can be used to provide more standard forms of time-locking by simply time locking and unlocking in one operation, leaving the unlock period immediately counting down. This capability could be used to provide time locked funds to team members, children, employees, or structured in a way to provide time locked deal and payment terms. The uses for this technology are certainly beyond those that we have already thought of, and we look forward to seeing how people leverage this powerful new protocol capability.- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency\n**Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
    "./raw_text_input_wiki/release_notes.md"
]