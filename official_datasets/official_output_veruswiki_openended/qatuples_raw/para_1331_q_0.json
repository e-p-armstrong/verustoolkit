[
    "What is the Verus Vault use case, and how does it provide a secure way to protect funds controlled by an ID from being spent, even in the event of a private key compromise?",
    "The Verus Vault use case is a feature that allows you to timelock an ID, which prevents any spending of funds controlled by that ID, while still allowing the ID and its funds to be used for staking. This means that even if someone compromises your private keys while the ID is locked, they cannot spend any of the funds without first unlocking the ID and waiting for the timelock period to expire.\n\nHere's how it works: when you lock an ID, you set a timelock period, which can be any duration. During this time, the ID and its funds are frozen, and cannot be spent. However, the ID can still be used for staking, which means that the funds can still earn rewards, but the rewards will be delegated to another address.\n\nIf someone compromises your private keys while the ID is locked, they will not be able to spend any of the funds immediately. They will first need to unlock the ID, which will start the timelock period countdown. Once the timelock period expires, they will be able to spend the funds. However, if you notice that your ID has been unlocked by someone else, you can revoke and recover the ID before any funds are lost.\n\nTo take security to the next level, you can modify the controlling private keys of an identity before unlocking it. This ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. This way, even if someone steals your private keys without you knowing and then waits for you to unlock your identity, you can still protect your funds by modifying the controlling private keys before unlocking.\n\nIn summary, the Verus Vault use case provides a secure way to protect funds controlled by an ID from being spent, even in the event of a private key compromise, by allowing you to timelock the ID, and then modifying the controlling private keys before unlocking. This technology provides a high level of security and protection for assets on the network, making it \"theft-resistant\".",
    "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
    "./raw_text_input_wiki/release_notes.md"
]