[
    "How can I use Verus commands to find all identities that contain a specific address, and what are the possible parameters I can use to filter the results?",
    "Verus provides a command called `getidentitieswithaddress` that allows you to search for all identities that contain a specific address in their primary addresses. This command can be used with various parameters to filter the results according to your needs.\n\n**The Basic Command:**\nThe basic command requires a single parameter, `address`, which is a string representing the valid address you want to search for. Here's an example:\n```bash\nverus getidentitieswithaddress '{\"address\":\"validprimaryaddress\"}'\n```\n**Optional Parameters:**\nYou can also use three optional parameters to further filter the results:\n\n1. `fromheight`: a number that specifies the block height from which you want to start searching for identities. The default value is 0, which means the search will start from the genesis block.\n2. `toheight`: a number that specifies the block height up to which you want to search for identities. The default value is 0, which means there is no limit to the search.\n3. `unspent`: a boolean value that specifies whether you want to only return active ID UTXOs as of the current block height. The default value is `false`.\n\nHere's an example with all optional parameters:\n```bash\nverus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'\n```\n**Result:**\nThe command returns an array of matching identities, each with an additional `txout` member that contains the transaction hash and output index.\n\n**Alternative Method:**\nYou can also use the `curl` command to access the Verus RPC API and execute the `getidentitieswithaddress` method. Here's an example:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nAdditionally, there is another command called `getidentitieswithrecovery` that allows you to search for identities based on their recovery authority. The parameters and result are similar to `getidentitieswithaddress`.",
    "#### Arguments:\n```json\n{\n  \"address\":\"validaddress\"   (string, required) returns all identities that contain the specified address in its primary addresses\n  \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only\n  \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)\n  \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height\n}\n```\n#### Result:\n```json\n[                 (array) array of matching identities\n {identityobject},        (object) identity with additional member \"txout\" with txhash and output index\n ...\n]\n```\n####Examples:\n```bash\n> verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getidentitieswithrecovery '{\"identityid\":\"idori-address\", \"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]