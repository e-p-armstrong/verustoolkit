[
    "What is the purpose of setting `proofprotocol` to 2 when defining a new currency with Verus, and how does it enable the controller of the chain ID to mint new coins?",
    "When defining a new currency with Verus, setting `proofprotocol` to 2, also known as PROOF_CHAINID, allows the controller of the chain ID to mint new coins. This means that the controller has the ability to create new units of the currency, which can be useful for various purposes such as rewarding users, funding development, or stabilizing the currency's value.\n\nTo illustrate this, let's break down the process of defining a new currency and minting new coins:\n\n**Defining a new currency:**\nTo define a new currency, you would use the `definecurrency` command with Verus, specifying the currency's properties such as its name, options, proof protocol, currencies it can be converted to, minimum pre-conversion amounts, and initial supply. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\n**Minting new coins:**\nOnce the currency is defined, the controller of the chain ID can mint new coins using the `sendcurrency` command with the `mintnew` option. This command specifies the address to receive the newly minted coins, the currency being minted, and the amount to be minted. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nIn this example, the controller of the chain ID is minting 10,000 new units of \"mycoin\" and sending them to the address \"mike@\". This demonstrates how setting `proofprotocol` to 2 enables the controller to mint new coins and control the supply of the currency.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]