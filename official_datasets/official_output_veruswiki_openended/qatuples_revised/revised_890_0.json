[
    "What are the `getblockhashes` and `getblockheader` commands in Verus, and how do they work?",
    "In Verus, there are two commands that allow you to retrieve information about blocks on the blockchain: `getblockhashes` and `getblockheader`.\n\n**getblockhashes:**\nThe `getblockhashes` command is used to retrieve a list of block hashes between two specified timestamps. It takes three arguments:\n\n1. `high`: The newer block timestamp (required)\n2. `low`: The older block timestamp (required)\n3. `options`: A JSON object with optional parameters (required)\n\nThe `options` JSON object can contain two boolean parameters:\n\n* `noOrphans`: If set to `true`, the command will only include blocks on the main chain (default: `false`)\n* `logicalTimes`: If set to `true`, the command will include logical timestamps with hashes (default: `false`)\n\nThe command returns a list of block hashes, or a list of objects containing the block hash and logical timestamp if `logicalTimes` is set to `true`.\n\n**getblockheader:**\nThe `getblockheader` command is used to retrieve information about a specific block header. It takes two arguments:\n\n1. `hash`: The block hash (required)\n2. `verbose`: A boolean indicating whether to return a JSON object with detailed information or a serialized, hex-encoded data for the block header (optional, default: `true`)\n\nIf `verbose` is set to `false`, the command returns a string containing serialized, hex-encoded data for the block header. If `verbose` is set to `true`, the command returns a JSON object with detailed information about the block header.\n\nThese commands can be used in various ways, such as using the Verus command-line interface or making API calls using tools like `curl`.",
    "#### Arguments:\n```json\n1. high     (numeric, required) The newer block timestamp\n2. low     (numeric, required) The older block timestamp\n3. options   (string, required) A json object\n  {\n   \"noOrphans\":true  (boolean) will only include blocks on the main chain\n   \"logicalTimes\":true  (boolean) will include logical timestamps with hashes\n  }\n```\n#### Result:\n```json\n[\n \"hash\"     (string) The block hash\n]\n[\n {\n  \"blockhash\": (string) The block hash\n  \"logicalts\": (numeric) The logical timestamp\n }\n]\n```\nExamples:\n```bash\n> verus getblockhashes 1231614698 1231024505\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockhashes\", \"params\": [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n> verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'\n```### `getblockheader \"hash\" ( verbose )`\nIf verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'.\nIf verbose is true, returns an Object with information about blockheader <hash>.#### Arguments:\n```\n1. \"hash\"     (string, required) The block hash\n2. verbose      (boolean, optional, default=true) true for a json object, false for the hex encoded data\n```",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]