[
    "How do you create a new currency called \"mycoin\" on the Verus network, and what are the implications of setting the proof protocol to PROOF_CHAINID?",
    "To create a new currency called \"mycoin\" on the Verus network, you can use the `definecurrency` command with the Verus executable. The command would look like this:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":96, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"conversions\":[0.01, 1.0],\"minpreconversion\":[1000,1000]}'\n```\nThis command defines a new currency named \"mycoin\" with specific properties. \n\nHere's a breakdown of the properties:\n\n* `name` is the name of the currency, in this case \"mycoin\".\n* `options` is a configurable integer, in this case set to 96.\n* `proofprotocol` is set to 2, which corresponds to PROOF_CHAINID. This means that the controller of the chain ID can mint new coins.\n* `currencies` lists the currencies that can be converted to mycoin, in this case vrsctest and gold.\n* `conversions` specifies the conversion ratios between mycoin and the listed currencies.\n* `minpreconversion` specifies the minimum amounts of each currency required to convert to mycoin.\n\nBy setting the `proofprotocol` to PROOF_CHAINID (2), you are giving the controller of the chain ID the ability to mint new coins. This can be done using the `sendcurrency` command, like so:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new units of mycoin and sends them to the address \"mike@\". Note that this requires the controller of the chain ID to have the necessary permissions.\n\nIt's important to keep in mind that the software is experimental and unfinished, and should be used at your own risk. There is no warranty for any kind of damage, and the software is provided \"as is\" without any express or implied warranties.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":96, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"conversions\":[0.01, 1.0],\"minpreconversion\":[1000,1000]}'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```# DisclaimerThis is experimental and unfinished software. Use at your own risk! No warranty for any kind of damage!\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:The enclosed copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "./raw_text_input_wiki/release_notes.md"
]