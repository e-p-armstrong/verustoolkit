[
    "What is a chain definition in Verus, and how can I define a chain using the `definechain` command?",
    "In Verus, a chain definition is a set of parameters that define the properties and behavior of a blockchain. This includes settings such as the name of the chain, the address that will receive the premine, the initial contribution amount, the conversion rate, and the notarization reward, among others.\n\nTo define a chain using the `definechain` command, you need to provide a JSON object that specifies these parameters. The command has the following format:\n```\n./verusd -chain=<chain_name> definechain '<JSON_object>'\n```\nThe JSON object should contain the following properties:\n\n* `name`: the name of the chain\n* `paymentaddress`: the address that will receive the premine\n* `premine`: the amount of the premine\n* `initialcontribution`: the initial contribution amount\n* `conversion`: the conversion rate\n* `minpreconvert`: the minimum amount that can be converted\n* `maxpreconvert`: the maximum amount that can be converted\n* `launchfee`: the launch fee\n* `billingperiod`: the billing period\n* `notarizationreward`: the notarization reward\n* `eras`: an array of era objects, each specifying the reward, decay, halving, and end of an era\n* `nodes`: an array of node objects, each specifying the network address and payment address of a node\n\nThe example provided in the text defines a chain with a premine, conversion, and notarization reward. It also specifies the nodes that will make up the chain. The chain will emit a premine to the specified address and convert all contributions up to a maximum amount to the native chain currency at launch at a 100%, 1:1 conversion price. All contributions will enter the currency's reserve deposits, and the more contributions on this chain, the higher the starting reserve ratio will be. If the minimum contributions are not met, the chain will fail to start and all contributions can be spent back to the original contributors.\n\nBy using the `definechain` command, you can create a custom blockchain with specific properties and behavior, tailored to your needs.",
    "**Sample chain definition:**\n```\n./verusd -chain=VRSCTEST definechain '{\"name\":\"RESERVEWITHPREMINE\",\"paymentaddress\":\"R9LkTaMn1XpjeorE4RjM6pMcy5Nxkx9jPM\",\"premine\":50000000000000,\"initialcontribution\":5000000000000,\"conversion\":100000000,\"minpreconvert\":45000000000000,\"maxpreconvert\":100000000000000,\"launchfee\":0,\"billingperiod\":14400,\"notarizationreward\":100000000000,\"eras\":[{\"reward\":5000000000,\"decay\":0,\"halving\":0,\"eraend\":0,\"eraoptions\":1}],\"nodes\":[{\"networkaddress\":\"ipaddress:port\",\"paymentaddress\":\"R9LkTaMn1XpjeorE4RjM6pMcy5Nxkx9jPM\"},\n{\"networkaddress\":\"2ndipaddress:port\",\"paymentaddress\":\"R9LkTaMn1XpjeorE4RjM6pMcy5Nxkx9jPM\"}]}'\n```The example above defines a chain that emits a premine to the indicated address and also converts all contributions up to a maximum amount to the native chain currency at launch at a 100%, 1:1 conversion price. All contributions will enter the currency's reserve deposits, and the more contributions on this chain, the higher the starting reserve ratio will be. If the minimum contributions are not met, the chain will fail to start and all contributions can be spent back to the original contributors.",
    "./raw_text_input_wiki/release_notes.md"
]