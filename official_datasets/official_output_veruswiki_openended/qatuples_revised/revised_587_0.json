[
    "What is the step-by-step process to compile Monkins Verus enhanced CCMiner for various hardware, and how can I customize it to connect to a Verus mining pool?",
    "To compile Monkins Verus enhanced CCMiner for various hardware, you need to follow a specific procedure. Here's a detailed guide on how to do it:\n\n**Step 1: Install dependencies**\nThe first step is to install the necessary dependencies. This guide is specifically written for Debian-based Linux distributions, but you can adapt it to other distributions by using their respective package managers. For Debian-based distributions, run the following command:\n```\nsudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git\n```\n**Step 2: Download and install additional sources for GPU-miner compilation (if necessary)**\nIf you want to compile the GPU-miner, you need to download and install additional sources from NVIDIA. You can do this by running the following commands:\n```\nwget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run\nsudo sh cuda_10.2.89_440.33.01_linux.run\n```\n**Step 3: Download the source code and compile**\nNext, you need to download the source code from the GitHub repository and compile it. You can do this by running the following commands:\n```\ngit clone --single-branch -b <branch_name> https://github.com/monkins1010/ccminer.git\ncd ccminer\nchmod +x build.sh\nchmod +x configure.sh\nchmod +x autogen.sh\n./build.sh\n```\nReplace `<branch_name>` with the branch you want to use, such as `ARM`, `Verus2.2`, or `Verus2.2gpu`.\n\n**Step 4: Configure and start the miner**\nFinally, you need to configure and start the miner. You can do this by running the following command:\n```\n./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u <your_address>.<your_worker_name> -p <your_password>\n```\nReplace `<your_address>`, `<your_worker_name>`, and `<your_password>` with your own values.\n\nThat's it! With these steps, you should be able to compile Monkins Verus enhanced CCMiner for various hardware and connect it to a Verus mining pool.",
    "# Compile Monkins Verus enhanced CCMiner for various hardware\n\nRead it completely before using.\n\n## Important General Information\n\nThis guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution\n(eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your\nspecific distribution.\n\nThere are 3 active branches in ccminer github repo:\n `ARM`       (for 64bit ARM chips with AES intrinsic)\n `Verus2.2`    (standard x86-64 pc's)\n `Verus2.2gpu`   (GPUs)\n\nNote: Replace `ARM` in the `git clone` line below with the branchname above you want to use.\n\n## Procedure:\n\nInstall dependencies (specific for Debian-based distributions):\n```bash\nsudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git\n```\nFor GPU-miner compilation additional sources are required (Not needed for CPU or ARM):\n```bash\nwget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run\nsudo sh cuda_10.2.89_440.33.01_linux.run\n```\nDownload the source and compile:\n```bash\ngit clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git\ncd ccminer\nchmod +x build.sh\nchmod +x configure.sh\nchmod +x autogen.sh\n./build.sh\n```\nAnd finally starting the miner (Change pool, address & workername to your own liking):\n```bash\n./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x\n```\n\nInfo from @Chris - Monkins1010 LOUD Mining.\n\nNote: last revision date 2021-04-20.",
    "./raw_text_input_wiki/faq-lin06_compile_ccminer.md"
]