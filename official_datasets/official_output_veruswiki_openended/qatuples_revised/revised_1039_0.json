[
    "How do I use Verus commands to get information about block rewards and construct a block to mine, and what are the different parameters and options available for these commands?",
    "Verus provides two commands to help with mining: `getblocksubsidy` and `getblocktemplate`. \n\n**Get Block Subsidy:**\nThe `getblocksubsidy` command returns the block subsidy reward for a given block height, taking into account the mining slow start and the founders reward. You can use it to find out the coinbase reward amount in VRSC for a specific block.\n\nHere's how to use it:\n```\n./verus getblocksubsidy [height]\n```\n Replace `[height]` with the block height you're interested in. If you don't provide a height, it defaults to the current height of the chain.\n\nThe result will be a JSON object with a single key-value pair:\n```json\n{\n \"miner\" : x.xxx      (numeric) The coinbase reward amount in VRSC.\n}\n```\n\n**Get Block Template:**\nThe `getblocktemplate` command returns data needed to construct a block to work on. You can use it to get the information required to mine a block.\n\nHere's how to use it:\n```\n./verus getblocktemplate [jsonrequestobject]\n```\nThe `[jsonrequestobject]` parameter is optional. If you provide it, it should be a JSON object with the following specification:\n```json\n{\n  \"mode\":\"template\",      (string, optional) This must be set to \"template\" or omitted\n  \"miningdistribution\":{\n    \"(recipientaddress)\":n, (addressorid, relativeweight) key value to determine distribution\n    \"(recipientaddress)\":n,\n    \"...\"\n  },\n  \"capabilities\":[       (array, optional) A list of strings\n    \"support\"        (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'erverlist', 'workid'\n   ,...\n  ]\n}\n```\nThe result will be a JSON object with the following keys:\n```json\n{\n \"version\" : n,           (numeric) The block version\n \"previousblockhash\" : \"xxxx\",   (string) The hash of current highest block\n \"finalsaplingroothash\" : \"xxxx\",  (string) The hash of the final sapling root\n \"transactions\" : [         (array) containing transaction data\n ...\n ]\n}\n```\nThis data can be used to construct a block to mine.",
    "## Mining\n### `getblocksubsidy height`\nReturns block subsidy reward, taking into account the mining slow start and the founders reward, of block at index provided.#### Arguments:\n1. height     (numeric, optional) The block height. If not provided, defaults to the current height of the chain.#### Result:\n```json\n{\n \"miner\" : x.xxx      (numeric) The coinbase reward amount in VRSC.\n}\n```\nExamples:\n```bash\n> verus getblocksubsidy 1000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockubsidy\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getblocktemplate ( \"jsonrequestobject\" )`\nIf the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.\nIt returns data needed to construct a block to work on.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.#### Arguments:\n1. \"jsonrequestobject\"    (string, optional) A json object in the following spec\n```json\n   {\n    \"mode\":\"template\"      (string, optional) This must be set to \"template\" or omitted\n    \"miningdistribution\":{\n      \"(recipientaddress)\":n, (addressorid, relativeweight) key value to determine distribution\n      \"(recipientaddress)\":n,\n      \"...\n    \"},\n    \"capabilities\":[       (array, optional) A list of strings\n      \"support\"        (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'\n      ,...\n     ]\n   }\n```#### Result:\n```json\n{\n \"version\" : n,           (numeric) The block version\n \"previousblockhash\" : \"xxxx\",   (string) The hash of current highest block\n \"finalsaplingroothash\" : \"xxxx\",  (string) The hash of the final sapling root\n \"transactions\" : [         (array) con",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]