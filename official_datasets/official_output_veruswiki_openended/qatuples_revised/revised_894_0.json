[
    "What information can be obtained about a block using the `getblockheader` command in Verus, and how can this command be used?",
    "The `getblockheader` command in Verus is used to retrieve information about a specific block in the blockchain. The command can be used in two ways, depending on the verbosity level desired.\n\n**Verbose Mode (verbose=true):**\nWhen the `getblockheader` command is used with the verbose flag set to true, it returns a JSON object containing detailed information about the block. This information includes:\n\n1. `hash`: The block hash, which is the same as the one provided as an input.\n2. `confirmations`: The number of confirmations the block has, or -1 if the block is not on the main chain.\n3. `height`: The block height or index.\n4. `version`: The block version.\n5. `merkleroot`: The merkle root.\n6. `finalsaplingroot`: The root of the Sapling commitment tree after applying this block.\n7. `time`: The block time in seconds since the epoch (January 1, 1970, GMT).\n8. `nonce`: The nonce.\n9. `bits`: The bits.\n10. `difficulty`: The difficulty.\n11. `previousblockhash`: The hash of the previous block.\n12. `nextblockhash`: The hash of the next block.\n\n**Non-Verbose Mode (verbose=false):**\nWhen the `getblockheader` command is used with the verbose flag set to false, it returns a string that is serialized, hex-encoded data for the block specified by the provided hash.\n\n**Using the Command:**\nThe `getblockheader` command can be used in two ways:\n\n1. Through the Verus command-line interface: `verus getblockheader \"block_hash\"`\n2. Through an HTTP request using a tool like `curl`: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockheader\", \"params\": [\"block_hash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nIn both cases, you need to replace `block_hash` with the actual hash of the block you want to retrieve information about.",
    "#### Result (for verbose = true):\n```json\n{\n \"hash\" : \"hash\",    (string) the block hash (same as provided)\n \"confirmations\" : n,  (numeric) The number of confirmations, or -1 if the block is not on the main chain\n \"height\" : n,     (numeric) The block height or index\n \"version\" : n,     (numeric) The block version\n \"merkleroot\" : \"xxxx\", (string) The merkle root\n \"finalsaplingroot\" : \"xxxx\", (string) The root of the Sapling commitment tree after applying this block\n \"time\" : ttt,     (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)\n \"nonce\" : n,      (numeric) The nonce\n \"bits\" : \"1d00ffff\",  (string) The bits\n \"difficulty\" : x.xxx, (numeric) The difficulty\n \"previousblockhash\" : \"hash\", (string) The hash of the previous block\n \"nextblockhash\" : \"hash\"    (string) The hash of the next block\n}\n```\n#### Result (for verbose=false):\n```\n\"data\"       (string) A string that is serialized, hex-encoded data for block 'hash'.\n```\nExamples:\n```bash\n> verus getblockheader \"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockheader\", \"params\": [\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getchaintips`\nReturn information about all known tips in the block tree, including the main chain as well as orphaned branches.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]