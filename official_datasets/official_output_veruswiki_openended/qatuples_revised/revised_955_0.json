[
    "What makes Verus PBaaS unique compared to other decentralized platforms, and what are some of the key features and capabilities that set it apart?",
    "Verus PBaaS offers a range of capabilities that go beyond what is currently possible on other decentralized platforms. One of the key features that sets Verus apart is its focus on self-sovereignty, truth, and privacy for all users. The Verus community has worked hard to create a platform that enables users to take control of their own identities and funds, with features such as revocable and recoverable identities, staking-capable time locking, and theft prevention.\n\n**VerusID:**\nOne of the unique features of Verus is its self-sovereign, revocable, and recoverable identities, known as VerusID. This enables users to register friendly name strong identities and funds addresses that are fully under their control. This means that users can manage their own identities and funds without relying on third-party providers or intermediaries.\n\n**Verus Vault:**\nAnother key feature of Verus is its staking-capable time locking and theft prevention, known as Verus Vault. This enables users to lock their identities, preventing anyone from spending funds under their control while the ID is locked. However, users can still stake their funds seamlessly, and specify an unlock delay to prevent unauthorized access. This provides a high level of security and protection against theft and identity theft.\n\n**Other Key Features:**\nVerus PBaaS also enables users to create and use fresh private keys when unlocking an ID, providing an additional layer of security. IDs can be used as friendly name cryptocurrency addresses for all currencies on all Verus PBaaS blockchains in the Verus network. The VerusID protocol is a protocol that can also be implemented separately from the Verus PBaaS blockchain, making it a versatile and powerful tool for identity management.\n\nOverall, Verus PBaaS offers a range of unique features and capabilities that set it apart from other decentralized platforms. Its focus on self-sovereignty, truth, and privacy makes it an attractive option for users who want to take control of their own identities and funds.",
    "As Verus PBaaS offers completely new capabilities that go beyond today\u2019s decentralized platforms in many fundamental ways, the worldwide Verus community put its energy into creation, rather than convincing everyone that its capabilities are possible. Members across the Verus worldwide community have worked hard to make this all possible, and we are more than excited that you can now experience it firsthand. If you have an interest in the future of crypto, you owe it to yourself to learn about Verus, an unlimited scale, decentralized future with truth and privacy for all.## The Verus testnet, available in the Verus Desktop or cli wallets as the VRSCTEST coin, has the following capabilities, which to our knowledge are unique in crypto today.## Self sovereign, revocable, recoverable identities (currently on mainnet) VerusID\n- Enables permissionless registration of friendly name strong identities and funds addresses that are simultaneously fully self-sovereign, revocable, and recoverable.\n## Staking-capable time locking and theft prevention (Verus Vault)\n- Enables identities to be locked, preventing any funds under their control from being spent while locked, but still allowing seamless staking of funds. When locked, a user specifies an unlock delay, typically long enough to notice when someone who might have compromised a user\u2019s keys would have to unlock the ID before spending. The only way to circumvent the unlock delay is to revoke and recover an ID. Users may also choose to create and use fresh private keys when unlocking an ID as well. This enables virtually theft proof workflow and a solution to inheritance, trusts, vesting schedules, the 5$ wrench attack, and identity theft. IDs may be used as friendly name cryptocurrency addresses for all currencies on all Verus PBaaS blockchains in the Verus network. The VerusID protocol is a protocol, which can also be implement",
    "./raw_text_input_wiki/release_notes.md"
]