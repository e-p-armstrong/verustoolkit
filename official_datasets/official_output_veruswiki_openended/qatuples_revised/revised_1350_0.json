[
    "What is the purpose of the `z_listreceivedbyaddress` and `z_listunspent` commands in Verus, and how do they return information about shielded transactions?",
    "In Verus, there are two important commands for working with shielded transactions: `z_listreceivedbyaddress` and `z_listunspent`. These commands are used to retrieve information about shielded transactions that have been sent to specific addresses.\n\n**`z_listreceivedbyaddress` Command:**\nThe `z_listreceivedbyaddress` command returns a list of shielded transactions that have been received by a specific address. The command takes an address as an argument and returns an array of objects, each containing information about a single transaction. The information returned includes:\n\n* `txid`: the transaction ID\n* `amount`: the amount of value in the note\n* `memo`: a hexadecimal string representation of the memo field\n* `jsindex` and `jsoutindex` (for Sprout): the joinsplit index and output index of the joinsplit, respectively\n* `outindex` (for Sapling): the output index\n* `change`: a boolean indicating whether the address that received the note is also one of the sending addresses\n\nThis command can be used to retrieve a list of all shielded transactions that have been sent to a specific address, including the amount and memo associated with each transaction.\n\n**`z_listunspent` Command:**\nThe `z_listunspent` command returns an array of unspent shielded notes with between a specified minimum and maximum number of confirmations. The command takes three arguments: `minconf`, `maxconf`, and an optional array of addresses to filter by. The results are returned as an array of objects, each containing information about a single unspent note. The information returned includes:\n\n* `txid`: the transaction ID\n* `jsindex` and `jsoutindex` (for Sprout): the joinsplit index and output index of the joinsplit, respectively\n* `outindex` (for Sapling): the output index\n* `confirmations`: the number of confirmations for the transaction\n* `address`: the address associated with the note\n* `amount`: the amount of value in the note\n* `memo`: a hexadecimal string representation of the memo field\n\nThis command can be used to retrieve a list of all unspent shielded notes that have been sent to specific addresses, including the amount and memo associated with each note. The `minconf` and `maxconf` arguments allow you to filter the results by the number of confirmations, and the optional array of addresses allows you to filter by specific addresses.",
    "#### Result:\n```json\n{\n \"txid\": \"txid\",      (string) the transaction id\n \"amount\": xxxxx,     (numeric) the amount of value in the note\n \"memo\": xxxxx,      (string) hexadecimal string representation of memo field\n \"jsindex\" (sprout) : n,   (numeric) the joinsplit index\n \"jsoutindex\" (sprout) : n,   (numeric) the output index of the joinsplit\n \"outindex\" (sapling) : n,   (numeric) the output index\n \"change\": true|false,  (boolean) true if the address that received the note is also one of the sending addresses\n}\n```Examples:\n```bash\n> verus z_listreceivedbyaddress \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listreceivedbyaddress\", \"params\": [\"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_listunspent ( minconf maxconf includeWatchonly [\"zaddr\",...] )`\nReturns array of unspent shielded notes with between minconf and maxconf (inclusive) confirmations.\nOptionally filter to only include notes sent to specified addresses.\nWhen minconf is 0, unspent notes with zero confirmations are returned, even though they are not immediately spendable.\nResults are an array of Objects, each of which has:\n{txid, jsindex, jsoutindex, confirmations, address, amount, memo} (Sprout)\n{txid, outindex, confirmations, address, amount, memo} (Sapling)",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]