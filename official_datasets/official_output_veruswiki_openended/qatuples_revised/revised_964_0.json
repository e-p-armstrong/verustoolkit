[
    "How do you manage identities and their locks in Verus, and what is the purpose of conversion queries in the context of Verus?",
    "In Verus, managing identities and their locks is a crucial aspect of the decentralized ecosystem. Here's how you can lock and unlock identities, and what conversion queries are used for:\n\n**Locking and Unlocking IDs:**\nIn Verus, you can lock an identity to prevent it from being used for a certain period of time or until a specific block height is reached. There are two types of locks: Time Lock and Time Delay.\n\n**Time Lock:**\nA Time Lock sets the unlock height of an identity, meaning that the identity will be locked until the specified block height is reached. To set a Time Lock, you can use the following command:\n\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n\n**Time Delay:**\nA Time Delay sets a delay for an ID's unlock when the flags are set back to an unlocked state. This means that even after the flags are set to unlock, the identity will remain locked for the specified number of blocks. To set a Time Delay, you can use the following command:\n\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n\n**Important Notes:**\n\n* Revoking an identity will clear its locked status, regardless of the Time Delay or Unlock Height.\n* A locked identity cannot revoke itself.\n\n**Conversion Queries:**\nConversion queries are used to retrieve information about currencies that have a certain level of liquidity. The `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nFor example, if you want to find all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\n\nThis will return a list of currencies that meet the specified criteria. Conversion queries are useful for finding currencies that have a high level of liquidity, which can be important for trading and other financial activities.",
    "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
    "./raw_text_input_wiki/release_notes.md"
]