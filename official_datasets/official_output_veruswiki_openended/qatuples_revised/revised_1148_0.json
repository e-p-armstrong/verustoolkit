[
    "How can I sign transactions from multi-signature IDs on the Verus network, and what are some of the key features of the Verus testnet?",
    "To sign transactions from multi-signature IDs on the Verus network, you will need to follow a few steps.\n\nFirst, create a transaction using the `sendcurrency` command, specifying the multi-signature ID as the sender. This will return an operation ID, which you can use to get the raw transaction data using the `z_getoperationstatus` command.\n\nNext, take the raw hex transaction data and pass it to each additional wallet containing the additional signing addresses/IDs using the `signrawtransaction` command. This will apply the necessary signatures to the transaction.\n\nOnce the last necessary signature is applied, you can broadcast the transaction on the network using the `sendrawtransaction` command, specifying the raw hex signed transaction.\n\nAs for the Verus testnet, it is a full-featured, intrinsically decentralized multi-chain blockchain platform that allows for unlimited identities, currencies, liquidity pools, and blockchains. With Verus, you can create new identities, currencies, liquidity pools, and blockchains without any programming, using either the GUI for basic operations or the command line for more advanced functions.\n\nSome key features of the Verus testnet include the ability to send currencies worldwide on the same chain or across blockchains with ease, and the ability to convert currencies to others on the network without an exchange by sending to yourself and converting along the way. The Verus testnet is accessible from the released versions of Verus Desktop and Verus CLI wallets, and it represents a new age in crypto, offering many capabilities that are not possible on other cryptocurrency platforms.",
    "## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.The new Verus testnet is a full-featured, intrinsically decentralized multi-chain blockchain platform with an unlimited number of identities, currencies, liquidity pools, and blockchains. It is accessible from the released versions of Verus Desktop and Verus CLI wallets, and it is the beginning of a new age in crypto. There are so many things you can do with Verus that you cannot with any other cryptocurrency platform, and you can try them all today.",
    "./raw_text_input_wiki/release_notes.md"
]