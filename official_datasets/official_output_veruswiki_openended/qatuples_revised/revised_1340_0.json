[
    "What is the purpose of the `z_gettotalbalance` and `z_importkey` commands in Verus, and how can they be used to manage and retrieve information about funds in a wallet?",
    "The `z_gettotalbalance` command in Verus is used to retrieve the total balance of funds in a wallet, including both transparent and shielded funds. The command can be used with an optional argument to specify the minimum number of confirmations required for the balance to be considered valid.\n\nThe command returns a JSON object with three properties: `transparent`, `private`, and `total`. The `transparent` property represents the total balance of transparent funds in the wallet, the `private` property represents the total balance of shielded funds in the wallet, and the `total` property represents the total balance of both transparent and shielded funds.\n\nFor example, the command `verus z_gettotalbalance` can be used to retrieve the total balance of funds in the wallet, while the command `verus z_gettotalbalance 5` can be used to retrieve the total balance of funds in the wallet with at least 5 confirmations.\n\nThe `z_importkey` command, on the other hand, is used to add a zkey (a type of private key) to a wallet. This command takes two optional arguments: `rescan` and `startHeight`. The `rescan` argument specifies whether to rescan the wallet for transactions, and can be set to \"yes\", \"no\", or \"whenkeyisnew\". The `startHeight` argument specifies the block height to start the rescan from.\n\nThe command can be used to import a zkey that was previously exported using the `z_exportkey` command. For example, the command `verus z_importkey \"mykey\"` can be used to import a zkey with the default rescan behavior, while the command `verus z_importkey \"mykey\" whenkeyisnew 30000` can be used to import a zkey with a partial rescan starting from block height 30,000.\n\nBoth commands can also be used as JSON-RPC calls, allowing for more flexible integration with other applications and tools.",
    "#### Result:\n```json\n{\n \"transparent\": xxxxx,   (numeric) the total balance of transparent funds\n \"private\": xxxxx,     (numeric) the total balance of shielded funds (in both Sprout and Sapling addresses)\n \"total\": xxxxx,      (numeric) the total balance of both transparent and shielded funds\n}\n```Examples:The total amount in the wallet\n```bash\n> verus z_gettotalbalance\n```\nThe total amount in the wallet at least 5 blocks confirmed\n```bash\n> verus z_gettotalbalance 5\n```\nAs a json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettotalbalance\", \"params\": [5] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importkey \"zkey\" ( rescan startHeight )`\nAdds a zkey (as returned by z_exportkey) to your wallet.#### Arguments:\n1. \"zkey\"       (string, required) The zkey (see z_exportkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan fromNote: This call can take minutes to complete if rescan is true.Examples:Export a zkey\n```bash\n> verus z_exportkey \"myaddress\"\n```\nImport the zkey with rescan\n```bash\n> verus z_importkey \"mykey\"\n```\nImport the zkey with partial rescan\n```bash\n> verus z_importkey \"mykey\" whenkeyisnew 30000\n```\nRe-import the zkey with longer partial rescan\n```bash\n> verus z_importkey \"mykey\" yes 200000\n```\nAs a JSON-RPC call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importviewingkey \"vkey\" ( rescan startHeight )`\nAdds a viewing key (as returned by z_exportviewingkey) to your wallet.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]