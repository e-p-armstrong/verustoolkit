[
    "How do I define a new currency on the Verus blockchain, and what are the implications of setting the `proofprotocol` to `PROOF_CHAINID`?",
    "To define a new currency on the Verus blockchain, you can use the `definecurrency` command. The general format of this command is:\n```\n./verus -chain=<chain_name> definecurrency '<currency_definition>'\n```\nWhere `<chain_name>` is the name of the chain you want to define the currency on, and `<currency_definition>` is a JSON object that describes the properties of the new currency.\n\nFor example, to define a new currency called \"mycoin\" on the `VRSCTEST` chain, you could use the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis command defines a new currency called \"mycoin\" with the following properties:\n\n* `name`: the name of the currency, which is \"mycoin\" in this case.\n* `options`: a configurable integer that defines various properties of the currency, which is set to 97 in this case.\n* `proofprotocol`: the type of proof protocol used by the currency, which is set to `PROOF_CHAINID` (2) in this case.\n* `currencies`: an array of currencies that can be converted to \"mycoin\", which includes \"vrsctest\" and \"gold\" in this case.\n* `minpreconversion`: an array that defines the minimum amounts of each currency required to convert to \"mycoin\", which is set to [10000, 5.1298] in this case.\n* `initialsupply`: the initial supply of \"mycoin\", which is set to 20,000 units in this case.\n\nBy setting the `proofprotocol` to `PROOF_CHAINID` (2), you are allowing the controller of the chain ID to mint new coins. This means that the controller can create new coins and add them to the supply of \"mycoin\" as needed.\n\nTo mint new coins, the controller can use the `sendcurrency` command with the `mintnew` option. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\".",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]