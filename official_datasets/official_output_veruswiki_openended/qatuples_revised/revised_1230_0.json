[
    "What does the `validateaddress` command in Verus do, and what information does it provide about a given address?",
    "The `validateaddress` command in Verus is used to validate a Verus address and retrieve information about it. This command takes a single argument, the address to be validated, and returns a JSON object with various properties.\n\nThe `validateaddress` command checks if the provided address is valid or not, and if it is, returns additional information about the address. The returned JSON object contains the following properties:\n\n* `isvalid`: a boolean indicating whether the address is valid or not.\n* `address`: the Verus address that was validated.\n* `scriptPubKey`: the hex-encoded scriptPubKey generated by the address.\n* `ismine`: a boolean indicating whether the address belongs to the user or not.\n* `isscript`: a boolean indicating whether the key is a script or not.\n* `pubkey`: the hex value of the raw public key.\n* `iscompressed`: a boolean indicating whether the address is compressed or not.\n* `account`: the account associated with the address (deprecated, default is an empty string).\n\nThe `validateaddress` command can be used in two ways: through the Verus command-line interface, or through an HTTP request using the Verus JSON-RPC API. Examples of both usage are provided in the documentation.\n\nIn summary, the `validateaddress` command in Verus is a useful tool for verifying the validity of a Verus address and retrieving additional information about it.",
    "#### Result:\n```json\n{\n \"isvalid\" : true|false,     (boolean) If the address is valid or not. If not, this is the only property returned.\n \"address\" : \"verusaddress\",  (string) The Verus address validated\n \"scriptPubKey\" : \"hex\",    (string) The hex encoded scriptPubKey generated by the address\n \"ismine\" : true|false,     (boolean) If the address is yours or not\n \"isscript\" : true|false,    (boolean) If the key is a script\n \"pubkey\" : \"publickeyhex\",  (string) The hex value of the raw public key\n \"iscompressed\" : true|false,  (boolean) If the address is compressed\n \"account\" : \"account\"     (string) DEPRECATED. The account associated with the address, \"\" is the default account\n}\n```\nExamples:\n```bash\n> verus validateaddress \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"validateaddress\", \"params\": [\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_validateaddress \"zaddr\"`\nReturn information about the given z address.#### Arguments:\n1. \"zaddr\"   (string, required) The z address to validate",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]