[
    "How can I verify the authenticity and integrity of Verus downloads, and what are some important notes about upgrading to a new version of Verus?",
    "Verifying the authenticity and integrity of Verus downloads is crucial to ensure that you are using a legitimate and unaltered version of the software. To do this, you can use the `verifyfile` or `verifyhash` commands provided by Verus. \n\n**Verifying a Downloaded File Directly:**\nTo verify a downloaded file directly, you can use the `verifyfile` command. This command takes three arguments: the identity of the signer (in this case, \"Verus Coin Foundation Releases@\"), the signature, and the path to the file you want to verify. Here's an example of how to use this command:\n\n```\n./verus verifyfile \"Verus Coin Foundation Releases@\" \"AebXJgABQR877X9cSmsrmj3SE08+rgCb0pvwhp7JmSh+m0r2Swg9dhC4Yyra+GWBj0A0fcPH3o7OjvB6P/BMfDsvxFeQVO7e\" \"/Downloads/Verus-CLI-Linux-v1.0.3-x86_64/Verus-CLI-Linux-v1.0.3-x86_64.tar.gz\"\n```\n\n**Verifying a File Using a Checksum:**\nAlternatively, you can verify a file using a checksum. This involves generating a SHA256 checksum for the file and then comparing it to the expected checksum. You can use the `verifyhash` command to do this. Here's an example:\n\n```\n./verus verifyhash \"Verus Coin Foundation Releases@\" \"AebXJgABQR877X9cSmsrmj3SE08+rgCb0pvwhp7JmSh+m0r2Swg9dhC4Yyra+GWBj0A0fcPH3o7OjvB6P/BMfDsvxFeQVO7e\" b5ddb0576ac4d1ce5d6cd3c53946b8ca89bdc4e76f680caa822b181d8660199f\n```\n\nIf the signature is valid, the command will output `true`.\n\n**Upgrading to a New Version of Verus:**\nIt's essential to stay up-to-date with the latest versions of Verus to ensure that you have access to the latest features and security patches. When a new version of Verus is released, you may be required to upgrade to continue using the mainnet and testnet. In such cases, make sure to upgrade to the latest version as soon as possible to avoid any disruptions to your service.",
    "### Verifying Downloads\nA txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation Releases@\".\n1) Extract downloaded archive\n2) Verify signature for the extracted archive using the extracted text file.\n3) Extract archive to desired directory\n#### CLI examples\n**Verifying file directly**\n```\n./verus verifyfile \"Verus Coin Foundation Releases@\" \"AebXJgABQR877X9cSmsrmj3SE08+rgCb0pvwhp7JmSh+m0r2Swg9dhC4Yyra+GWBj0A0fcPH3o7OjvB6P/BMfDsvxFeQVO7e\" \"/Downloads/Verus-CLI-Linux-v1.0.3-x86_64/Verus-CLI-Linux-v1.0.3-x86_64.tar.gz\"\n```\n**Verifying using a checksum**\n```\n./verus verifyhash \"Verus Coin Foundation Releases@\" \"AebXJgABQR877X9cSmsrmj3SE08+rgCb0pvwhp7JmSh+m0r2Swg9dhC4Yyra+GWBj0A0fcPH3o7OjvB6P/BMfDsvxFeQVO7e\" b5ddb0576ac4d1ce5d6cd3c53946b8ca89bdc4e76f680caa822b181d8660199f\n```**The result will be true if the signature is valid.**\n```\ntrue\n```\n## v1.0.2\nAnnouncing v1.0.2 - MANDATORY MAINNET UPGRADE\nUPGRADE TO v1.0.2 OR LATER IS MANDATORY FOR CONTINUED MAINNET AND TESTNET USE AFTER MAY 21, 2023, EXPECTED BLOCK #2546600### Mainnet: fixes:\n* Fixes a regression that prevented staking on locked IDs as well as modifying locked IDs### Testnet fixes/improvements:\n* Fixes issues discovered when challenges occurred on the Gravity chain that blocked resolution of cross-chain challenges.\n* Addresses all known issues discovered in testing### What\u2019s New\nv1.0.2 has no feature changes, some minor API fixes, proof improvements, and we believe the third time's a charm \ud83d\ude42. The testnet will transition to the v1.0.2 protocol with no reset required, Wednesday, May 17, 2023 0:00:00, UTC.",
    "./raw_text_input_wiki/release_notes.md"
]