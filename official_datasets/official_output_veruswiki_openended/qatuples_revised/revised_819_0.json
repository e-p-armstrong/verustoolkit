[
    "How do I define a PBaaS chain, export an ID to it, and sign transactions from multi-signature IDs using the command line with Verus?",
    "To accomplish these tasks, you need to use the Verus command line with different inputs. Here's a step-by-step guide on how to define a PBaaS chain, export an ID to it, and sign transactions from multi-signature IDs.\n\n**Defining a PBaaS Chain:**\nTo define a PBaaS chain, you need to pass two JSON objects to the `definecurrency` command. The first JSON object defines the properties of the PBaaS chain, and the second JSON object defines the overridable defaults of the bridge. Here's an example command:\n\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\n\n**Exporting an ID to a PBaaS Chain:**\nTo export an ID to a PBaaS chain, you need to use the `sendcurrency` command with the `exportto` and `exportid` options. Here's an example command:\n\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. Create a transaction using the `sendcurrency` command and get the raw transaction data.\n2. Use the `z_getoperationstatus` command to get the operation ID returned by `sendcurrency`.\n3. Take the raw hex transaction data provided by `z_getoperationstatus` to each additional wallet(s) containing the additional signing addresses/IDs.\n4. Use the `signrawtransaction` command to sign the raw hex transaction data on each additional wallet.\n5. After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command.\n\nHere's an example of the commands you would use:\n\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\nverus signrawtransaction <raw_hex_transaction>\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\n\nBy following these steps, you can define a PBaaS chain, export an ID to it, and sign transactions from multi-signature IDs using the Verus command line.",
    "Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\n### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```",
    "./raw_text_input_wiki/release_notes.md"
]