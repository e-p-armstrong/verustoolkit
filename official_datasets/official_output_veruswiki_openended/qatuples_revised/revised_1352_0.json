[
    "How does the `sendcurrency` API work in Verus, and what are some examples of its usage? Additionally, how do I create a new currency in Verus?",
    "The `sendcurrency` API is a powerful tool in Verus that allows users to send and convert funds between different currencies. Here are some examples of its usage:\n\n**Sending Funds:**\nYou can use `sendcurrency` to send funds from one address to another. For example, to send 10 VRSCTEST from `bob@` to `alice@`, you would run:\n```\nverus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n```\nYou can also send funds from all wallet funds to multiple recipients by using the `*` wildcard instead of a specific address.\n\n**Converting Funds:**\n`sendcurrency` can also be used to convert funds from one currency to another. For example, to convert 10 VRSCTEST to the fractional basket currency VRSC-BTC, you would run:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n```\nYou can also convert funds to another reserve currency, like BTC, through a fractional currency like VRSC-BTC.\n\n**Preconverting Funds:**\nIt's also possible to preconvert funds to a new currency before it's active. For example, to preconvert 10 VRSCTEST to a new currency called NEWCOIN, you would run:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refundto\":\"alice@\"}]'\n```\nThis would park the conversion until the NEWCOIN currency is launched.\n\n**Creating a New Currency:**\nTo create a new currency in Verus, you need to have an ID of the same name as the currency. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\n\nFor example, if you have an ID called `gold@`, you can define a currency called `gold` that maps to a specific, auditable store of gold. Similarly, if you have an ID called `mycoin@`, you can define a currency called `mycoin` that offers some utility or product value if the purchase exceeds a certain level.\n\nTo define a new currency, you would use the `definecurrency` API, which allows you to specify the properties of the currency, such as its name, options, and conversion rates.",
    "The `sendcurrency` API can be used to send and convert funds.\n- **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n  ```\n- **Sending VRSCTEST from all wallet funds to two recipients (alice@ and bob@):**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@\",\"amount\":10}]'\n  ```\n- **Converting VRSCTEST to a fractional basket currency, VRSC-BTC:**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n  ```\n- **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]'\n  ```\n- **Preconverting to new currency, NEWCOIN, before it is active:**\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refundto\":\"alice@\"}]'\n  ```## Defining a CurrencyTo create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n",
    "./raw_text_input_wiki/release_notes.md"
]