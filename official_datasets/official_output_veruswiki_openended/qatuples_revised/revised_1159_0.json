[
    "What are the different ways to lock and unlock IDs in Verus, and how do conversion queries work in the context of Verus's interoperable blockchain ecosystem?",
    "In Verus, IDs can be locked and unlocked using various mechanisms to control access and usage. Additionally, conversion queries enable the retrieval of currencies with sufficient liquidity reserves. Here's a detailed explanation of these concepts:\n\n**Locking IDs:**\nVerus allows IDs to be locked using two methods: Time Lock and Time Delay.\n\n* **Time Lock:** This feature enables the lock of an ID until a specific block height is reached. The `updateidentity` command is used to set the lock, specifying the unlock block height, flags, minimum signatures, and primary addresses.\n\nExample: `verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'`\n\n* **Time Delay:** This feature introduces a delay before an ID can be unlocked after its flags are set back to an unlocked state. The `updateidentity` command is used to set the delay, specifying the unlock block delay, flags, minimum signatures, and primary addresses.\n\nExample: `verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'`\n\nImportant notes about locking IDs:\n\n* Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n* A locked identity cannot revoke itself.\n\n**Conversion Queries:**\nThe `getcurrencyconverters` API is used to retrieve all currencies that meet specific liquidity reserve requirements. These requirements include:\n\n* Having at least 1000 VRSC in reserve\n* Having a VRSC reserve ratio greater than 10%\n* Having all listed currencies as reserves\n\nExample: `verus -chain=VRSCTEST getcurrencyconverters btc eth`\n\nThis command will return all currencies that have BTC/ETH markets at or above the liquidity threshold. This enables users to identify currencies with sufficient liquidity reserves for conversions.\n\nIn summary, Verus's locking and unlocking mechanisms provide a flexible way to control ID access, while conversion queries enable the discovery of currencies with sufficient liquidity reserves for seamless conversions within the Verus ecosystem.",
    "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
    "./raw_text_input_wiki/release_notes.md"
]