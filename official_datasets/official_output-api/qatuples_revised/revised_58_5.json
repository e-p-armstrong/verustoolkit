[
    "Can I use the `submitchallenges` command with a JSON-RPC call?",
    "Yes, you can use the `submitchallenges` command with a JSON-RPC call. Here's an example:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitchallenges\", \"params\": [[{\"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},\"challengeroot\":{},\"evidence\":{}}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "submitchallenges '[{\"type\":\"vrsc::evidence.skipchallenge\" || \"iCwxpRL6h3YeCRtGjgQSsqoKdZCuM4Dxaf\" ||            \"type\":\"vrsc::evidence.validitychallenge\" || \"iCPb8ywQna7jYV2SHrGZ6vQMj7kuyWFxvb\",           \"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},           \"forkroot\":{},           \"challengeroot\":{},           \"evidence\":{}},          {...}, ...]' Submits one or more cryptographic challenges to existing, unconfirmed notarizations, proving the existence of an alternate chain. Whether the alternate chain has more power than the chain with a pending notarization is not required, only that it has moved forward multiple blocks since the prior notarization. Requires that the local wallet have funds for fees. Arguments \"challenges\"         (array, required) one or more challenges to unconfirmed notarizations on this system Result: [{\"txid\":\"hex\"}, {\"error\":\"errorstring\"}, ...]  (array) results of submitted challenge transactions Examples: > verus submitchallenges '[{\"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},\"challengeroot\":{},\"evidence\":{}}]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitchallenges\", \"params\": [[{\"notarizationref\":{\"txid\":\"hexvalue\",\"voutnum\":n},\"challengeroot\":{},\"evidence\":{}}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/submitchallenges"
]