[
    [
        [
            "What is the purpose of the `getnotarizationdata` command in Verus?",
            "The `getnotarizationdata` command is used to retrieve the latest PBaaS notarization data for a specified currency ID.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence) Returns the latest PBaaS notarization data for the specifed currencyid. Arguments 1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on 2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data 1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots Result: {  \"version\" : n,         (numeric) The notarization protocol version } Examples: > verus getnotarizationdata \"currencyid\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "What arguments are required for the `getnotarizationdata` command?",
            "The `getnotarizationdata` command requires one argument: the \"currencyid\" which is a string representing the hex-encoded ID or string name of the currency for which notarization data is being searched.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence) Returns the latest PBaaS notarization data for the specifed currencyid. Arguments 1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on 2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data 1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots Result: {  \"version\" : n,         (numeric) The notarization protocol version } Examples: > verus getnotarizationdata \"currencyid\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "What are the optional arguments for the `getnotarizationdata` command, and what do they do?",
            "The `getnotarizationdata` command has two optional arguments:\n\n1. `(getevidence)`: If set to `true`, this argument returns notarization evidence in addition to other data.\n\n2. `(separatecounterevidence)`: If set to `true`, this argument processes and returns counter-evidence with proof roots.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence) Returns the latest PBaaS notarization data for the specifed currencyid. Arguments 1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on 2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data 1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots Result: {  \"version\" : n,         (numeric) The notarization protocol version } Examples: > verus getnotarizationdata \"currencyid\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "What is the format of the result returned by the `getnotarizationdata` command?",
            "The result returned by the `getnotarizationdata` command is a JSON object with a single key-value pair, where the key is `\"version\"` and the value is a numeric representation of the notarization protocol version.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence) Returns the latest PBaaS notarization data for the specifed currencyid. Arguments 1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on 2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data 1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots Result: {  \"version\" : n,         (numeric) The notarization protocol version } Examples: > verus getnotarizationdata \"currencyid\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "How can I use the `getnotarizationdata` command from the command line and from a curl request?",
            "You can use the `getnotarizationdata` command from the command line by running `verus getnotarizationdata \"currencyid\"`. Alternatively, you can use it from a curl request by sending a JSON-RPC request to the Verus daemon, like this:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence) Returns the latest PBaaS notarization data for the specifed currencyid. Arguments 1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on 2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data 1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots Result: {  \"version\" : n,         (numeric) The notarization protocol version } Examples: > verus getnotarizationdata \"currencyid\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ]
    ],
    "will",
    "be",
    "replaced",
    "5a704194-5bcf-4cf2-b704-bebe8c182180"
]