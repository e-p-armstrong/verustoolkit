[
    "What information is returned by the `getcurrency` command?",
    "The `getcurrency` command returns a JSON object containing information about the chain, including:\n* Version of the chain definition\n* Name and fully qualified name of the chain\n* Currency ID and its hex representation\n* Parent blockchain ID\n* System ID and launch system ID\n* Notarization protocol and proof protocol\n* Start and end blocks of the chain\n* Currencies that can be converted to this currency\n* Relative currency weights (for liquidity baskets)\n* Pre-launch conversion rates for non-fractional currencies\n* Minimum amounts required for pre-conversions\n* Currency names with their full names",
    "getcurrency \"currencyname\" Returns a complete definition for any given chain if it is registered on the blockchain. If the chain requested is NULL, chain definition of the current chain is returned. Arguments 1. \"currencyname\"      (string, optional) name of the chain to look for. no parameter returns current chain in daemon. Result:  {   \"version\" : n,              (int) version of this chain definition   \"name\" : \"string\",           (string) name or symbol of the chain, same as passed   \"fullyqualifiedname\" : \"string\",    (string) name or symbol of the chain with all parent namespaces, separated by \".\"   \"currencyid\" : \"i-address\",      (string) string that represents the currency ID, same as the ID behind the currency   \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"   \"parent\" : \"i-address\",        (string) parent blockchain ID   \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run   \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched   \"notarizationprotocol\" : n        (int) protocol number that determines variations in cross-chain or bridged notarizations   \"proofprotocol\" : n           (int) protocol number that determines variations in cross-chain or bridged proofs   \"startblock\" : n,            (int) block # on this chain, which must be notarized into block one of the chain   \"endblock\" : n,             (int) block # after which, this chain's useful life is considered to be over   \"currencies\" : \"[\"i-address\", ...]\", (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket   \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)   \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies   \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch   \"currencies\" : \"[\"i-address\", ...]\", (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket   \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-a",
    "./raw_text_input_api_text/getcurrency"
]