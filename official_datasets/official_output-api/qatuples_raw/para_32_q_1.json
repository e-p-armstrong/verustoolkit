[
    "What are the optional parameters that can be included in the JSON request object for the `getblocktemplate` method?",
    "The optional parameters that can be included in the JSON request object for the `getblocktemplate` method are:\n\n* `mode`: a string that must be set to \"template\" or omitted\n* `miningdistribution`: an object that specifies the distribution of mining rewards\n* `capabilities`: an array of strings that specifies the client-side supported features, such as 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'erverlist', and 'workid'",
    "getblocktemplate ( \"jsonrequestobject\" ) If the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'. It returns data needed to construct a block to work on. See https://en.bitcoin.it/wiki/BIP_0022 for full specification. Arguments: 1. \"jsonrequestobject\"    (string, optional) A json object in the following spec   {    \"mode\":\"template\"  (string, optional) This must be set to \"template\" or omitted    \"miningdistribution\":{      \"(recipientaddress)\":n, (addressorid, relativeweight) key value to determine distribution      \"(recipientaddress)\":n,      \"...    \"}    \"capabilities\":[   (array, optional) A list of strings      \"support\"     (string) client side supported feature, 'longpoll', 'coinbasetxn', 'coinbasevalue', 'proposal', 'serverlist', 'workid'      ,...     ]   } Result: {  \"version\" : n,           (numeric) The block version  \"previousblockhash\" : \"xxxx\",  (string) The hash of current highest block  \"finalsaplingroothash\" : \"xxxx\", (string) The hash of the final sapling root  \"transactions\" : [         (array) contents of non-coinbase transactions that should be included in the next block    {     \"data\" : \"xxxx\",     (string) transaction data encoded in hexadecimal (byte-for-byte)     \"hash\" : \"xxxx\",     (string) hash/id encoded in little-endian hexadecimal     \"depends\" : [       (array) array of numbers        n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is       ,...     ],     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block    } ",
    "./raw_text_input_api_text/getblocktemplate"
]