[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to help with any questions you have about Verus. What's on your mind today?\n\n**User:**\nI'm trying to understand the `sendcurrency` command in Verus. Can you tell me what it's used for?\n\n**AI Assistant:**\nThe `sendcurrency` command is used to send one or multiple Verus outputs to one or multiple addresses on the same or another chain. It's a powerful tool for managing your assets across different chains.\n\n**User:**\nThat sounds useful. What are the required arguments for the `sendcurrency` command?\n\n**AI Assistant:**\nThe required arguments for the `sendcurrency` command are `fromaddress` and `outputs`. The `fromaddress` is a string representing the Sapling, VerusID, or wildcard address to send funds from, and `outputs` is an array of JSON objects representing currencies, amounts, and destinations to send.\n\n**User:**\nCan you explain the purpose of the `fromaddress` argument in the `sendcurrency` command?\n\n**AI Assistant:**\nThe `fromaddress` argument specifies the address from which to source the funds for the transaction. If specified, all funds will be taken from that address. If not specified, funds may come from any source set of UTXOs controlled by the wallet.\n\n**User:**\nAnd what about the `outputs` argument? What's its purpose?\n\n**AI Assistant:**\nThe `outputs` argument is an array of JSON objects that represent the currencies, amounts, and destinations to send. Each object in the array specifies the details of a single output, including the currency, amount, and destination address.\n\n**User:**\nAre there any optional arguments that can be specified in the `outputs` array?\n\n**AI Assistant:**\nYes, there are several optional arguments that can be specified in the `outputs` array. These include `convertto`, `addconversionfees`, `exportto`, `exportid`, `exportcurrency`, `feecurrency`, `via`, `refundto`, `memo`, and `data`. These arguments allow for more advanced functionality, such as cross-chain transactions and conversion of currencies.\n\n**User:**\nWhat's the purpose of the `exportto` argument in the `outputs` array?\n\n**AI Assistant:**\nThe `exportto` argument specifies the chain or system to export to. This is used for cross-chain transactions, where funds are sent from one chain to another.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `sendcurrency` command in Verus?",
            "The `sendcurrency` command is used to send one or multiple Verus outputs to one or multiple addresses on the same or another chain.",
            "sendcurrency \"fromaddress\" '[{\"address\":... ,\"amount\":...},...]' (minconfs) (feeamount) (returntxtemplate) This sends one or many Verus outputs to one or many addresses on the same or another chain. Funds are sourced automatically from the current wallet, which must be present, as in sendtoaddress. If \"fromaddress\" is specified, all funds will be taken from that address, otherwise funds may come from any source set of UTXOs controlled by the wallet. Arguments 1. \"fromaddress\"       (string, required) The Sapling, VerusID, or wildcard address to send funds from. \"*\", \"R*\", or \"i*\" are valid wildcards 2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.   [{    \"currency\": \"name\"  (string, required) Name of the source currency to send in this output, defaults to native of chain    \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency    \"convertto\":\"name\", (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional    \"addconversionfees\":\"false\", (bool, optional) Calculate additional conversion fees to convert the full amount specified after fees    \"exportto\":\"name\",  (string, optional) Valid chain or system name or ID to export to    \"exportid\":\"false\", (bool, optional) if cross-chain export, export the full ID to the destination chain (will cost to export)    \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)    \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee    \"via\":\"name\",    (string, optional) If source and destination currency are reserves, via is a common fractional to convert through    \"address\":\"dest\"   (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"  (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"data\":\"dataobject\", (object, optional) (for data-only outputs with no other function) stores large, optionally signed dat",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "What are the required arguments for the `sendcurrency` command?",
            "The required arguments for the `sendcurrency` command are:\n\n1. `fromaddress` (string, required): The Sapling, VerusID, or wildcard address to send funds from.\n2. `outputs` (array, required): An array of JSON objects representing currencies, amounts, and destinations to send.",
            "sendcurrency \"fromaddress\" '[{\"address\":... ,\"amount\":...},...]' (minconfs) (feeamount) (returntxtemplate) This sends one or many Verus outputs to one or many addresses on the same or another chain. Funds are sourced automatically from the current wallet, which must be present, as in sendtoaddress. If \"fromaddress\" is specified, all funds will be taken from that address, otherwise funds may come from any source set of UTXOs controlled by the wallet. Arguments 1. \"fromaddress\"       (string, required) The Sapling, VerusID, or wildcard address to send funds from. \"*\", \"R*\", or \"i*\" are valid wildcards 2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.   [{    \"currency\": \"name\"  (string, required) Name of the source currency to send in this output, defaults to native of chain    \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency    \"convertto\":\"name\", (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional    \"addconversionfees\":\"false\", (bool, optional) Calculate additional conversion fees to convert the full amount specified after fees    \"exportto\":\"name\",  (string, optional) Valid chain or system name or ID to export to    \"exportid\":\"false\", (bool, optional) if cross-chain export, export the full ID to the destination chain (will cost to export)    \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)    \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee    \"via\":\"name\",    (string, optional) If source and destination currency are reserves, via is a common fractional to convert through    \"address\":\"dest\"   (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"  (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"data\":\"dataobject\", (object, optional) (for data-only outputs with no other function) stores large, optionally signed dat",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "What is the purpose of the `fromaddress` argument in the `sendcurrency` command?",
            "The `fromaddress` argument specifies the address from which to source the funds for the transaction. If specified, all funds will be taken from that address. If not specified, funds may come from any source set of UTXOs controlled by the wallet.",
            "sendcurrency \"fromaddress\" '[{\"address\":... ,\"amount\":...},...]' (minconfs) (feeamount) (returntxtemplate) This sends one or many Verus outputs to one or many addresses on the same or another chain. Funds are sourced automatically from the current wallet, which must be present, as in sendtoaddress. If \"fromaddress\" is specified, all funds will be taken from that address, otherwise funds may come from any source set of UTXOs controlled by the wallet. Arguments 1. \"fromaddress\"       (string, required) The Sapling, VerusID, or wildcard address to send funds from. \"*\", \"R*\", or \"i*\" are valid wildcards 2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.   [{    \"currency\": \"name\"  (string, required) Name of the source currency to send in this output, defaults to native of chain    \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency    \"convertto\":\"name\", (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional    \"addconversionfees\":\"false\", (bool, optional) Calculate additional conversion fees to convert the full amount specified after fees    \"exportto\":\"name\",  (string, optional) Valid chain or system name or ID to export to    \"exportid\":\"false\", (bool, optional) if cross-chain export, export the full ID to the destination chain (will cost to export)    \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)    \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee    \"via\":\"name\",    (string, optional) If source and destination currency are reserves, via is a common fractional to convert through    \"address\":\"dest\"   (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"  (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"data\":\"dataobject\", (object, optional) (for data-only outputs with no other function) stores large, optionally signed dat",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "What is the purpose of the `outputs` argument in the `sendcurrency` command?",
            "The `outputs` argument is an array of JSON objects that represent the currencies, amounts, and destinations to send. Each object in the array specifies the details of a single output, including the currency, amount, and destination address.",
            "sendcurrency \"fromaddress\" '[{\"address\":... ,\"amount\":...},...]' (minconfs) (feeamount) (returntxtemplate) This sends one or many Verus outputs to one or many addresses on the same or another chain. Funds are sourced automatically from the current wallet, which must be present, as in sendtoaddress. If \"fromaddress\" is specified, all funds will be taken from that address, otherwise funds may come from any source set of UTXOs controlled by the wallet. Arguments 1. \"fromaddress\"       (string, required) The Sapling, VerusID, or wildcard address to send funds from. \"*\", \"R*\", or \"i*\" are valid wildcards 2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.   [{    \"currency\": \"name\"  (string, required) Name of the source currency to send in this output, defaults to native of chain    \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency    \"convertto\":\"name\", (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional    \"addconversionfees\":\"false\", (bool, optional) Calculate additional conversion fees to convert the full amount specified after fees    \"exportto\":\"name\",  (string, optional) Valid chain or system name or ID to export to    \"exportid\":\"false\", (bool, optional) if cross-chain export, export the full ID to the destination chain (will cost to export)    \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)    \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee    \"via\":\"name\",    (string, optional) If source and destination currency are reserves, via is a common fractional to convert through    \"address\":\"dest\"   (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"  (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"data\":\"dataobject\", (object, optional) (for data-only outputs with no other function) stores large, optionally signed dat",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "What are some optional arguments that can be specified in the `outputs` array of the `sendcurrency` command?",
            "Some optional arguments that can be specified in the `outputs` array of the `sendcurrency` command include:\n\n* `convertto`: The currency to convert to.\n* `addconversionfees`: A boolean to calculate additional conversion fees.\n* `exportto`: The chain or system to export to.\n* `exportid`: A boolean to export the full ID to the destination chain.\n* `exportcurrency`: A boolean to export the currency definition.\n* `feecurrency`: The currency to use for paying fees.\n* `via`: A common fractional to convert through.\n* `refundto`: The address to send refunds to.\n* `memo`: A string message to include.\n* `data`: A data object to store large, optionally signed data.",
            "sendcurrency \"fromaddress\" '[{\"address\":... ,\"amount\":...},...]' (minconfs) (feeamount) (returntxtemplate) This sends one or many Verus outputs to one or many addresses on the same or another chain. Funds are sourced automatically from the current wallet, which must be present, as in sendtoaddress. If \"fromaddress\" is specified, all funds will be taken from that address, otherwise funds may come from any source set of UTXOs controlled by the wallet. Arguments 1. \"fromaddress\"       (string, required) The Sapling, VerusID, or wildcard address to send funds from. \"*\", \"R*\", or \"i*\" are valid wildcards 2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.   [{    \"currency\": \"name\"  (string, required) Name of the source currency to send in this output, defaults to native of chain    \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency    \"convertto\":\"name\", (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional    \"addconversionfees\":\"false\", (bool, optional) Calculate additional conversion fees to convert the full amount specified after fees    \"exportto\":\"name\",  (string, optional) Valid chain or system name or ID to export to    \"exportid\":\"false\", (bool, optional) if cross-chain export, export the full ID to the destination chain (will cost to export)    \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)    \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee    \"via\":\"name\",    (string, optional) If source and destination currency are reserves, via is a common fractional to convert through    \"address\":\"dest\"   (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"  (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"data\":\"dataobject\", (object, optional) (for data-only outputs with no other function) stores large, optionally signed dat",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "What is the purpose of the `exportto` argument in the `outputs` array of the `sendcurrency` command?",
            "The `exportto` argument specifies the chain or system to export to. This is used for cross-chain transactions, where funds are sent from one chain to another.",
            "sendcurrency \"fromaddress\" '[{\"address\":... ,\"amount\":...},...]' (minconfs) (feeamount) (returntxtemplate) This sends one or many Verus outputs to one or many addresses on the same or another chain. Funds are sourced automatically from the current wallet, which must be present, as in sendtoaddress. If \"fromaddress\" is specified, all funds will be taken from that address, otherwise funds may come from any source set of UTXOs controlled by the wallet. Arguments 1. \"fromaddress\"       (string, required) The Sapling, VerusID, or wildcard address to send funds from. \"*\", \"R*\", or \"i*\" are valid wildcards 2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.   [{    \"currency\": \"name\"  (string, required) Name of the source currency to send in this output, defaults to native of chain    \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency    \"convertto\":\"name\", (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional    \"addconversionfees\":\"false\", (bool, optional) Calculate additional conversion fees to convert the full amount specified after fees    \"exportto\":\"name\",  (string, optional) Valid chain or system name or ID to export to    \"exportid\":\"false\", (bool, optional) if cross-chain export, export the full ID to the destination chain (will cost to export)    \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)    \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee    \"via\":\"name\",    (string, optional) If source and destination currency are reserves, via is a common fractional to convert through    \"address\":\"dest\"   (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"  (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"data\":\"dataobject\", (object, optional) (for data-only outputs with no other function) stores large, optionally signed dat",
            "./raw_text_input_api_text/sendcurrency"
        ]
    ]
]