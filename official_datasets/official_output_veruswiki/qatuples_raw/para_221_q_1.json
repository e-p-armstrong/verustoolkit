[
    "How do I sign a transaction using Verus?",
    "You can sign a transaction using Verus by running the `signrawtransaction` command, followed by the hex-encoded transaction string. For example:\n```\n> verus signrawtransaction \"myhex\"\n```\nThis command signs the transaction and returns the signed hex string.",
    "Create a transaction\n```bash\n> verus createrawtransaction \"[{\\\"txid\\\" : \\\"mytxid\\\",\\\"vout\\\":0}]\" \"{\\\"myaddress\\\":0.01}\"\n```\nSign the transaction, and get back the hex\n```bash\n> verus signrawtransaction \"myhex\"\n```\nSend the transaction (signed hex)\n```bash\n> verus sendrawtransaction \"signedhex\"\n```\nAs a json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendrawtransaction\", \"params\": [\"signedhex\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )`\nSign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that this transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private keys that, if given, will be the only keys used to sign the transaction.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]