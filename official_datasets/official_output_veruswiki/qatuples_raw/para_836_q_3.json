[
    "How can I create a token in Verus that offers utility or product value to its holders, similar to a Kickstarter?",
    "To create a token in Verus that offers utility or product value to its holders, similar to a Kickstarter, you would need to define the token using the `definecurrency` command. This command would specify the properties of the token, including its name, options, currencies it can be converted to, conversion rates, and preallocations. You would also need to define the conditions under which the token offers utility or product value, such as a minimum purchase amount. For example, you could create a token called \"mycoin\" that offers utility or product value if the purchase exceeds a certain level.",
    "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
    "./raw_text_input_wiki/release_notes.md"
]