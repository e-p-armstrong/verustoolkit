[
    "What is the purpose of the `getpeerinfo` command in Verus?",
    "The `getpeerinfo` command returns data about each connected network node as a JSON array of objects. This allows you to get information about the nodes that your Verus node is connected to.",
    "#### Result:\n```json\n{\n \"version\": xxxxx,           (numeric) the server version\n \"subversion\": \"/MagicBean:x.y.z[-v]/\", (string) the server subversion string\n \"protocolversion\": xxxxx,       (numeric) the protocol version\n \"localservices\": \"xxxxxxxxxxxxxxxx\",  (string) the services we offer to the network\n \"timeoffset\": xxxxx,          (numeric) the time offset\n \"connections\": xxxxx,         (numeric) the number of connections\n \"networks\": [             (array) information per network\n {\n  \"name\": \"xxx\",            (string) network (ipv4, ipv6 or onion)\n  \"limited\": true|false,        (boolean) is the network limited using -onlynet?\n  \"reachable\": true|false,       (boolean) is the network reachable?\n  \"proxy\": \"host:port\"         (string) the proxy that is used for this network, or empty if none\n }\n ,...\n ],\n \"relayfee\": x.xxxxxxxx,        (numeric) minimum relay fee for non-free transactions in VRSC/kB\n \"localaddresses\": [          (array) list of local addresses\n {\n  \"address\": \"xxxx\",          (string) network address\n  \"port\": xxx,             (numeric) network port\n  \"score\": xxx             (numeric) relative score\n }\n ,...\n ]\n \"warnings\": \"...\"           (string) any network warnings (such as alert messages)\n}\n```\nExamples:\n```bash\n> verus getnetworkinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getpeerinfo`\nReturns data about each connected network node as a json array of objects.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]