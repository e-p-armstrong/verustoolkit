[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I have a few questions about working with VerusIDs. How do I sign transactions from multi-signature IDs on Verus?\n\n**AI Assistant:**\nTo sign transactions from multi-signature IDs on Verus, you need to follow these steps:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency` and `verus z_getoperationstatus`.\n2. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n3. Use `verus signrawtransaction` to sign the transaction with each additional wallet.\n4. After the last necessary signature is applied, broadcast the transaction on the network using `verus sendrawtransaction`.\n\nDo you have any questions about these steps, or would you like to know more about working with multi-signature IDs on Verus?\n\n**User:**\nActually, I have another question. How do I create an identity with a fractional currency as its parent on Verus?\n\n**AI Assistant:**\nTo create an identity with a fractional currency as its parent on Verus, you need to use the `registernamecommitment` command with two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and `z_addresses` to fund the name commitment and identity registration.\n\nWould you like an example of how to use the `registernamecommitment` command, or do you have any other questions about creating identities on Verus?\n\n**User:**\nThat makes sense. But what is the purpose of the `registernamecommitment` command on Verus?\n\n**AI Assistant:**\nThe `registernamecommitment` command on Verus is used to create a new identity with a specified currency parent and funding address. This allows users to create identities with fractional currencies as their parent, enabling more complex and flexible identity management on the Verus network. Does that clarify the purpose of the `registernamecommitment` command?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I sign transactions from multi-signature IDs on Verus?",
            "To sign transactions from multi-signature IDs on Verus, you need to follow these steps:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency` and `verus z_getoperationstatus`.\n2. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n3. Use `verus signrawtransaction` to sign the transaction with each additional wallet.\n4. After the last necessary signature is applied, broadcast the transaction on the network using `verus sendrawtransaction`.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I create an identity with a fractional currency as its parent on Verus?",
            "To create an identity with a fractional currency as its parent on Verus, you need to use the `registernamecommitment` command with two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and `z_addresses` to fund the name commitment and identity registration.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the `registernamecommitment` command on Verus?",
            "The `registernamecommitment` command on Verus is used to create a new identity with a specified currency parent and funding address. This allows users to create identities with fractional currencies as their parent, enabling more complex and flexible identity management on the Verus network.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]