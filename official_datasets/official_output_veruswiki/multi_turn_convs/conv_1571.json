[
    "## Conversation that answers the provided questions:\n**User:**\nHi, I'm interested in creating my own currency on Verus. What is required to create a currency of a specific name in Verus?\n\n**AI Assistant:**\nTo create a currency of a specific name in Verus, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. Does that make sense? Do you have an ID set up already?\n\n**User:**\nYes, I do. So, how can I define a new currency in Verus?\n\n**AI Assistant:**\nYou can define a new currency in Verus using the `definecurrency` command. The command takes a JSON object as an argument, which specifies the properties of the currency. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines a new currency called \"gold\" with specific properties, such as conversion rates and preallocations. Do you have any questions about the specific properties or the command itself?\n\n**User:**\nActually, yes. What is the purpose of the `preallocations` property when defining a new currency in Verus?\n\n**AI Assistant:**\nThe `preallocations` property is used to allocate a certain amount of the new currency to specific IDs before the currency is launched. This can be useful for testing or for allocating funds to specific users or organizations before the currency is available to the public. In the example above, 50,000,000 units of the \"gold\" currency are preallocated to the ID \"mike@\". This way, when the currency is launched, \"mike@\" will already have 50,000,000 units of \"gold\" available. Does that make sense?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is required to create a currency of a specific name in Verus?",
            "To create a currency of a specific name in Verus, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I define a new currency in Verus?",
            "You can define a new currency in Verus using the `definecurrency` command. The command takes a JSON object as an argument, which specifies the properties of the currency. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines a new currency called \"gold\" with specific properties, such as conversion rates and preallocations.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the `preallocations` property when defining a new currency in Verus?",
            "The `preallocations` property is used to allocate a certain amount of the new currency to specific IDs before the currency is launched. This can be useful for testing or for allocating funds to specific users or organizations before the currency is available to the public. In the example above, 50,000,000 units of the \"gold\" currency are preallocated to the ID \"mike@\".",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]