[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I've been exploring Verus and I was wondering, what is required to create a currency of a specific name on Verus?\n\n**AI Assistant:**\nTo create a currency of a specific name on Verus, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. Does that make sense? Do you have any further questions about creating currencies on Verus?\n\n**User:**\nYes, actually. How can I define a currency on Verus, and what are some of the properties I can set when doing so?\n\n**AI Assistant:**\nTo define a currency on Verus, you can use the `definecurrency` command with a JSON object specifying the currency's properties. Some of the properties you can set include:\n* `name`: the name of the currency\n* `options`: an integer specifying options for the currency\n* `currencies`: an array of currencies that the new currency can be converted to\n* `conversions`: an array of conversion ratios between the new currency and the currencies specified in `currencies`\n* `minpreconversion`: the minimum amount of the new currency required for conversion\n* `preallocations`: an array of pre-allocations of the currency to specific IDs\n\nHere's an example of defining a currency called \"gold\":\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nDoes that help clarify how to define a currency on Verus?\n\n**User:**\nOne of the properties you mentioned was `preallocations`. What is the purpose of that property when defining a currency on Verus?\n\n**AI Assistant:**\nThe `preallocations` property is used to specify an initial allocation of the currency to specific IDs. This can be useful for distributing the currency to users or for setting up an initial supply of the currency. In the example above, 50,000,000 units of the \"gold\" currency are allocated to the ID \"mike@\". This allows the creator of the currency to determine who should receive the initial allocation of the currency.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is required to create a currency of a specific name on Verus?",
            "To create a currency of a specific name on Verus, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the curre",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I define a currency on Verus, and what are some of the properties I can set when doing so?",
            "To define a currency on Verus, you can use the `definecurrency` command with a JSON object specifying the currency's properties. Some of the properties you can set include:\n* `name`: the name of the currency\n* `options`: an integer specifying options for the currency\n* `currencies`: an array of currencies that the new currency can be converted to\n* `conversions`: an array of conversion ratios between the new currency and the currencies specified in `currencies`\n* `minpreconversion`: the minimum amount of the new currency required for conversion\n* `preallocations`: an array of pre-allocations of the currency to specific IDs\n\nHere's an example of defining a currency called \"gold\":\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the curre",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the `preallocations` property when defining a currency on Verus?",
            "The `preallocations` property is used to specify an initial allocation of the currency to specific IDs. This can be useful for distributing the currency to users or for setting up a initial supply of the currency. In the example above, 50,000,000 units of the \"gold\" currency are allocated to the ID \"mike@\".",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the curre",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]