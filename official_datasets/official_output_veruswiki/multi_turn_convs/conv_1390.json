[
    "## Conversation that answers the provided questions:\n**User:**\nI have some questions about tokenizing ID control in Verus. What are the flags used in a currency definition to tokenize ID control, and what is the maximum supply of such a token?\n\n**AI Assistant:**\nThe flags used in a currency definition to tokenize ID control are OPTION_NFT_TOKEN and OPTION_TOKEN. The maximum supply of such a token is 1 satoshi.\n\n**User:**\nThat helps! Now, how do I create a token with a pre-allocated control token recipient using Verus?\n\n**AI Assistant:**\nYou can create a token with a pre-allocated control token recipient using the `definecurrency` command. Here's an example:\n\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nJust replace the placeholders with your own values.\n\n**User:**\nWhat about creating an identity with a fractional currency as its parent? How do I do that?\n\n**AI Assistant:**\nYou can create an identity with a fractional currency as its parent using the `registernamecommitment` and `registeridentity` commands. Here's an example:\n\nFirst, run the `registernamecommitment` command to specify the parent currency and funding address:\n\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nThen, specify the parent in the identity definition and run the `registeridentity` command to sign and submit the ID registration:\n\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\nAgain, replace the placeholders with your own values.\n\n**User:**\nI'm not entirely sure what those commands do. Can you explain the purpose of the `registernamecommitment` and `registeridentity` commands in Verus?\n\n**AI Assistant:**\nThe `registernamecommitment` command is used to specify a currency parent and a funding address when creating an identity. The `registeridentity` command is used to sign and submit the ID registration, specifying the parent currency and funding address. These commands are used together to create an identity with a fractional currency as its parent.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the flags used in a currency definition to tokenize ID control, and what is the maximum supply of such a token?",
            "The flags used in a currency definition to tokenize ID control are OPTION_NFT_TOKEN and OPTION_TOKEN. The maximum supply of such a token is 1 satoshi.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I create a token with a pre-allocated control token recipient using Verus?",
            "You can create a token with a pre-allocated control token recipient using the `definecurrency` command. Here's an example:\n\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I create an identity with a fractional currency as its parent using Verus?",
            "You can create an identity with a fractional currency as its parent using the `registernamecommitment` and `registeridentity` commands. Here's an example:\n\nFirst, run the `registernamecommitment` command to specify the parent currency and funding address:\n\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nThen, specify the parent in the identity definition and run the `registeridentity` command to sign and submit the ID registration:\n\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the `registernamecommitment` and `registeridentity` commands in Verus?",
            "The `registernamecommitment` command is used to specify a currency parent and a funding address when creating an identity. The `registeridentity` command is used to sign and submit the ID registration, specifying the parent currency and funding address. These commands are used together to create an identity with a fractional currency as its parent.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]