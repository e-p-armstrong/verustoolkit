[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to create a new currency in Verus and I'm not sure about the `proofprotocol` setting. What does it do?\n\n**AI Assistant:**\nThe `proofprotocol` setting determines the proof protocol used for the currency. For example, if you set `proofprotocol` to 2, it corresponds to PROOF_CHAINID. This means that the controller of the chain ID has the ability to mint new coins. Do you have any idea what kind of proof protocol you want to use for your currency?\n\n**User:**\nActually, I think I want to use PROOF_CHAINID. What's the implication of setting `proofprotocol` to PROOF_CHAINID when defining a new currency in Verus?\n\n**AI Assistant:**\nWhen `proofprotocol` is set to PROOF_CHAINID, the controller of the chain ID gains the ability to mint new coins. This allows them to create new coins and add them to the circulating supply. So, in essence, you'll have control over the creation of new coins for your currency.\n\n**User:**\nThat sounds great! Now that I've set `proofprotocol` to PROOF_CHAINID, how can I mint new coins for my currency?\n\n**AI Assistant:**\nTo mint new coins, you can use the `sendcurrency` command with the `mintnew` option. Here's an example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command would mint 10,000 new coins of the \"mycoin\" currency and send them to the address \"mike@\". Just replace the values with your own currency and address, and you're good to go!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does the `proofprotocol` setting do when defining a new currency in Verus?",
            "The `proofprotocol` setting determines the proof protocol used for the currency. In the example, `proofprotocol` is set to 2, which corresponds to PROOF_CHAINID. This means that the controller of the chain ID has the ability to mint new coins.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the implication of setting `proofprotocol` to PROOF_CHAINID when defining a new currency in Verus?",
            "When `proofprotocol` is set to PROOF_CHAINID, the controller of the chain ID gains the ability to mint new coins. This allows them to create new coins and add them to the circulating supply.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I mint new coins for a currency I've created in Verus, if I've set the `proofprotocol` to PROOF_CHAINID?",
            "To mint new coins, you can use the `sendcurrency` command with the `mintnew` option. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command would mint 10,000 new coins of the \"mycoin\" currency and send them to the address \"mike@\".",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]