[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I've got a question about creating a new currency in Verus. What does it mean to set `proofprotocol` to 2 when defining a new currency?\n\n**AI Assistant:**\nWhen `proofprotocol` is set to 2 when defining a new currency, it means that the proof protocol is set to PROOF_CHAINID. This allows the controller of the chain ID to mint new coins. This setting gives the controller of the chain ID the power to control the supply of the currency.\n\n**User:**\nThat's really interesting. How can I mint new coins of a currency that has `proofprotocol` set to PROOF_CHAINID?\n\n**AI Assistant:**\nTo mint new coins of a currency with `proofprotocol` set to PROOF_CHAINID, you can use the `sendcurrency` command. The format of the command is:\n```\n./verus -chain=<chain_name> sendcurrency \"<currency_id>\" '[{\"address\":\"<recipient_address>\",\"currency\":\"<currency_name>\",\"mintnew\":1,\"amount\":<amount}]'\n```\nReplace `<chain_name>` with the name of the chain, `<currency_id>` with the ID of the currency, `<recipient_address>` with the address of the recipient, `<currency_name>` with the name of the currency, and `<amount>` with the amount of coins to mint. This command will allow you to mint new coins of the specified currency and send them to the specified recipient.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does it mean to set `proofprotocol` to 2 when defining a new currency in Verus?",
            "When `proofprotocol` is set to 2 when defining a new currency, it means that the proof protocol is set to PROOF_CHAINID. This allows the controller of the chain ID to mint new coins.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I mint new coins of a currency that has `proofprotocol` set to PROOF_CHAINID?",
            "To mint new coins of a currency with `proofprotocol` set to PROOF_CHAINID, you can use the `sendcurrency` command. The format of the command is:\n```\n./verus -chain=<chain_name> sendcurrency \"<currency_id>\" '[{\"address\":\"<recipient_address>\",\"currency\":\"<currency_name>\",\"mintnew\":1,\"amount\":<amount}]'\n```\nReplace `<chain_name>` with the name of the chain, `<currency_id>` with the ID of the currency, `<recipient_address>` with the address of the recipient, `<currency_name>` with the name of the currency, and `<amount>` with the amount of coins to mint.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]