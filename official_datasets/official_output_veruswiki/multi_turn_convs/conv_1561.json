[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I have a question about locking IDs in Verus. How do I lock an ID, and what is the purpose of the \"timelock\" parameter?\n\n**AI Assistant:**\nTo lock an ID in Verus, you can use the `updateidentity` command with the \"timelock\" parameter. The \"timelock\" parameter defines the unlock height of the identity, which is the block height at which the ID will be unlocked.\n\nFor example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nThe `timelock` parameter is used to specify the block height at which the ID will be unlocked. Does that make sense?\n\n**User:**\nThat helps. I also had a question about time locks and time delays in Verus. What's the difference between them, and how do they affect an ID's unlock status?\n\n**AI Assistant:**\nA \"time lock\" defines the unlock height of an ID, while a \"time delay\" defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. The main difference is that a time lock sets a specific block height for unlock, while a time delay sets a delay period before the ID can be unlocked.\n\nThink of it like this: a time lock is like setting a specific date and time for something to unlock, while a time delay is like setting a countdown timer before it can be unlocked. Does that clarify the difference?\n\n**User:**\nGot it. What happens to a locked ID if it is revoked in Verus?\n\n**AI Assistant:**\nIf a locked ID is revoked in Verus, its locked status is cleared, regardless of any time delay or unlock height. However, a locked identity cannot revoke itself. So, if you need to revoke a locked ID, someone with the revocation authority will need to do it.\n\n**User:**\nMoving on to a different topic, how do I retrieve all currencies that have at least 1000 VRSC in reserve and meet certain reserve ratio and listed currency requirements using the Verus API?\n\n**AI Assistant:**\nYou can use the `getcurrencyconverters` API to retrieve all currencies that meet the specified requirements. For example, to retrieve currencies with BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. Does that help?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I lock an ID in Verus, and what is the purpose of the \"timelock\" parameter?",
            "To lock an ID in Verus, you can use the `updateidentity` command with the \"timelock\" parameter. The \"timelock\" parameter defines the unlock height of the identity, which is the block height at which the ID will be unlocked.\n\nFor example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the difference between a \"time lock\" and a \"time delay\" in Verus, and how do they affect an ID's unlock status?",
            "A \"time lock\" defines the unlock height of an ID, while a \"time delay\" defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. The main difference is that a time lock sets a specific block height for unlock, while a time delay sets a delay period before the ID can be unlocked.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What happens to a locked ID if it is revoked in Verus?",
            "If a locked ID is revoked in Verus, its locked status is cleared, regardless of any time delay or unlock height. However, a locked identity cannot revoke itself.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I retrieve all currencies that have at least 1000 VRSC in reserve and meet certain reserve ratio and listed currency requirements using the Verus API?",
            "You can use the `getcurrencyconverters` API to retrieve all currencies that meet the specified requirements. For example, to retrieve currencies with BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]