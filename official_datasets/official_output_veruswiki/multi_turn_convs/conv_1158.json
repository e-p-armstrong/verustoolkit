[
    "## Conversation that answers the provided questions:\n**User:**\nI'm interested in learning more about the Verus network. What kind of blockchains can be set up on it, and what are their benefits?\n\n**AI Assistant:**\nOn the Verus network, you can set up private, internal blockchains that are easy to set up and bridge with public currencies. These blockchains offer all the features and currencies of the public chain, but with restricted access. There is no limit to the number of blockchains that can operate and interoperate on the Verus network, allowing for a fractal model of unlimited, simultaneously operating, and interoperable blockchains. This provides a high degree of flexibility and customization for different use cases. Do you have any more questions about blockchains on Verus?\n\n**User:**\nActually, yes. I've heard about locking IDs on Verus. How can I lock an ID on the Verus network, and what are the different types of locks available?\n\n**AI Assistant:**\nYou can lock an ID on the Verus network using the `updateidentity` command with the `timelock` parameter. There are two types of locks available: Time Lock and Time Delay. A Time Lock sets the unlock height of the identity, while a Time Delay defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. Note that revoking an identity will clear its locked status, regardless of time delay or unlock height, and a locked identity cannot revoke itself. Locking an ID can add an extra layer of security to your identity management. Do you have any more questions about ID locks on Verus?\n\n**User:**\nI've seen some API calls in the Verus documentation, and I'm not sure what they do. What is the `getcurrencyconverters` API used for, and how do I use it?\n\n**AI Assistant:**\nThe `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API by running a command like `verus -chain=VRSCTEST getcurrencyconverters <currency1> <currency2>`, which will return all currencies that have markets for the specified currencies at or above the liquidity threshold. This can be useful for finding currencies with high liquidity and reserve ratios. Do you have any more questions about Verus APIs?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What kind of blockchains can be set up on the Verus network, and what are their benefits?",
            "On the Verus network, you can set up private, internal blockchains that are easy to set up and bridge with public currencies. These blockchains offer all the features and currencies of the public chain, but with restricted access. There is no limit to the number of blockchains that can operate and interoperate on the Verus network, allowing for a fractal model of unlimited, simultaneously operating, and interoperable blockchains.",
            " private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I lock an ID on the Verus network, and what are the different types of locks available?",
            "You can lock an ID on the Verus network using the `updateidentity` command with the `timelock` parameter. There are two types of locks available: Time Lock and Time Delay. A Time Lock sets the unlock height of the identity, while a Time Delay defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. Note that revoking an identity will clear its locked status, regardless of time delay or unlock height, and a locked identity cannot revoke itself.",
            " private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the `getcurrencyconverters` API used for, and how do I use it?",
            "The `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API by running a command like `verus -chain=VRSCTEST getcurrencyconverters <currency1> <currency2>`, which will return all currencies that have markets for the specified currencies at or above the liquidity threshold.",
            " private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]