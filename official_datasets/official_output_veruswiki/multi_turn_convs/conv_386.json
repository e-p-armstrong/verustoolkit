[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to sign a transaction from a multi-signature ID on the Verus network, but I'm not sure how to do it. Can you walk me through the process?\n\n**AI Assistant:**\nSigning a transaction from a multi-signature ID on Verus involves a few steps. Here's what you need to do:\n\nTo sign a transaction from a multi-signature ID, you need to follow these steps:\n\n1. Create a transaction using `verus sendcurrency` and get the raw transaction data.\n2. Get the operation ID returned by `sendcurrency` and use it with `verus z_getoperationstatus` to get the raw hex transaction data.\n3. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n4. Use `verus signrawtransaction` to sign the raw hex transaction data in each wallet.\n5. After the last necessary signature is applied, broadcast the signed transaction on the network using `verus sendrawtransaction`.\n\nDoes that make sense? Do you have any questions about any of those steps?\n\n**User:**\nThat's really helpful, thanks! Another question I had was about creating an identity with a fractional currency as its parent on Verus. Can you tell me how to do that?\n\n**AI Assistant:**\nTo create an identity with a fractional currency as its parent on Verus, you can use the `registernamecommitment` command. This command now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and specify a parent currency and funding address as needed.\n\nJust use the `registernamecommitment` command with the necessary arguments, and you should be able to create an identity with a fractional currency as its parent. Do you have any other questions about Verus or VerusIDs?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I sign a transaction from a multi-signature ID on the Verus network?",
            "To sign a transaction from a multi-signature ID, you need to follow these steps:\n\n1. Create a transaction using `verus sendcurrency` and get the raw transaction data.\n2. Get the operation ID returned by `sendcurrency` and use it with `verus z_getoperationstatus` to get the raw hex transaction data.\n3. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n4. Use `verus signrawtransaction` to sign the raw hex transaction data in each wallet.\n5. After the last necessary signature is applied, broadcast the signed transaction on the network using `verus sendrawtransaction`.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I create an identity with a fractional currency as its parent on Verus?",
            "To create an identity with a fractional currency as its parent on Verus, you can use the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and specify a parent currency and funding address as needed.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]