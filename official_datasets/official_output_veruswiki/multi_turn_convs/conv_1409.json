[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm new to Verus and I'm trying to understand some of the commands. Can you explain what the `setgenerate` command does?\n\n**AI Assistant:**\nThe `setgenerate` command is used to turn mining/generation or minting/staking on or off in Verus. It takes two arguments: a boolean value to turn generation on or off, and an optional numeric value to set the processor limit when generation is on.\n\n**User:**\nOkay, that makes sense. How do I turn on mining/generation with a limited number of processors using the `setgenerate` command?\n\n**AI Assistant:**\nTo turn on mining/generation with a limited number of processors, you can use the `setgenerate` command with the following format:\n```\nverus setgenerate true <num_processors>\n```\nReplace `<num_processors>` with the number of processors you want to limit mining/generation to. For example, to limit to one processor, you would use:\n```\nverus setgenerate true 1\n```\n**User:**\nWhat about minting/staking? How do I turn that on using the `setgenerate` command?\n\n**AI Assistant:**\nTo turn on minting/staking, you can use the `setgenerate` command with the following format:\n```\nverus setgenerate true 0\n```\nThis will turn on minting/staking.\n\n**User:**\nIs there a way to check the current generation setting?\n\n**AI Assistant:**\nYes, you can use the `getgenerate` command with no arguments:\n```\nverus getgenerate\n```\nThis will return the current setting.\n\n**User:**\nFinally, how do I turn off generation and minting using the `setgenerate` command?\n\n**AI Assistant:**\nTo turn off generation and minting, you can use the `setgenerate` command with the following format:\n```\nverus setgenerate false\n```\nThis will turn off both generation and minting.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does the `setgenerate` command do in Verus?",
            "The `setgenerate` command is used to turn mining/generation or minting/staking on or off in Verus. It takes two arguments: a boolean value to turn generation on or off, and an optional numeric value to set the processor limit when generation is on.",
            "### `setgenerate generate ( genproclimit )`\nSet 'generate' true to turn either mining/generation or minting/staking on and false to turn both off.\nMining is limited to 'genproclimit' processors, -1 is unlimited, setgenerate true with 0 genproclimit turns on staking\nSee the getgenerate call for the current setting.#### Arguments:\n```\n1. generate     (boolean, required) Set to true to turn on generation, off to turn off.\n2. genproclimit   (numeric, optional) Set processor limit when generation is on. Can be -1 for unlimited, 0 to turn on staking.\n```\n####Examples:Set the generation on with a limit of one processor\n```bash\n> verus setgenerate true 1\n```\nTurn minting/staking on\n```bash\n> verus setgenerate true 0\n```\nCheck the setting\n```bash\n> verus getgenerate\n```\nTurn off generation and minting\n```bash\n> verus setgenerate false\n```\nUsing json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setgenerate\", \"params\": [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Identity### `getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How do I turn on mining/generation with a limited number of processors using the `setgenerate` command?",
            "To turn on mining/generation with a limited number of processors, you can use the `setgenerate` command with the following format:\n```\nverus setgenerate true <num_processors>\n```\nReplace `<num_processors>` with the number of processors you want to limit mining/generation to. For example, to limit to one processor, you would use:\n```\nverus setgenerate true 1\n```",
            "### `setgenerate generate ( genproclimit )`\nSet 'generate' true to turn either mining/generation or minting/staking on and false to turn both off.\nMining is limited to 'genproclimit' processors, -1 is unlimited, setgenerate true with 0 genproclimit turns on staking\nSee the getgenerate call for the current setting.#### Arguments:\n```\n1. generate     (boolean, required) Set to true to turn on generation, off to turn off.\n2. genproclimit   (numeric, optional) Set processor limit when generation is on. Can be -1 for unlimited, 0 to turn on staking.\n```\n####Examples:Set the generation on with a limit of one processor\n```bash\n> verus setgenerate true 1\n```\nTurn minting/staking on\n```bash\n> verus setgenerate true 0\n```\nCheck the setting\n```bash\n> verus getgenerate\n```\nTurn off generation and minting\n```bash\n> verus setgenerate false\n```\nUsing json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setgenerate\", \"params\": [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Identity### `getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How do I turn on minting/staking using the `setgenerate` command?",
            "To turn on minting/staking, you can use the `setgenerate` command with the following format:\n```\nverus setgenerate true 0\n```\nThis will turn on minting/staking.",
            "### `setgenerate generate ( genproclimit )`\nSet 'generate' true to turn either mining/generation or minting/staking on and false to turn both off.\nMining is limited to 'genproclimit' processors, -1 is unlimited, setgenerate true with 0 genproclimit turns on staking\nSee the getgenerate call for the current setting.#### Arguments:\n```\n1. generate     (boolean, required) Set to true to turn on generation, off to turn off.\n2. genproclimit   (numeric, optional) Set processor limit when generation is on. Can be -1 for unlimited, 0 to turn on staking.\n```\n####Examples:Set the generation on with a limit of one processor\n```bash\n> verus setgenerate true 1\n```\nTurn minting/staking on\n```bash\n> verus setgenerate true 0\n```\nCheck the setting\n```bash\n> verus getgenerate\n```\nTurn off generation and minting\n```bash\n> verus setgenerate false\n```\nUsing json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setgenerate\", \"params\": [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Identity### `getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How do I check the current generation setting using the `getgenerate` command?",
            "To check the current generation setting, you can use the `getgenerate` command with no arguments:\n```\nverus getgenerate\n```\nThis will return the current setting.",
            "### `setgenerate generate ( genproclimit )`\nSet 'generate' true to turn either mining/generation or minting/staking on and false to turn both off.\nMining is limited to 'genproclimit' processors, -1 is unlimited, setgenerate true with 0 genproclimit turns on staking\nSee the getgenerate call for the current setting.#### Arguments:\n```\n1. generate     (boolean, required) Set to true to turn on generation, off to turn off.\n2. genproclimit   (numeric, optional) Set processor limit when generation is on. Can be -1 for unlimited, 0 to turn on staking.\n```\n####Examples:Set the generation on with a limit of one processor\n```bash\n> verus setgenerate true 1\n```\nTurn minting/staking on\n```bash\n> verus setgenerate true 0\n```\nCheck the setting\n```bash\n> verus getgenerate\n```\nTurn off generation and minting\n```bash\n> verus setgenerate false\n```\nUsing json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setgenerate\", \"params\": [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Identity### `getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How do I turn off generation and minting using the `setgenerate` command?",
            "To turn off generation and minting, you can use the `setgenerate` command with the following format:\n```\nverus setgenerate false\n```\nThis will turn off both generation and minting.",
            "### `setgenerate generate ( genproclimit )`\nSet 'generate' true to turn either mining/generation or minting/staking on and false to turn both off.\nMining is limited to 'genproclimit' processors, -1 is unlimited, setgenerate true with 0 genproclimit turns on staking\nSee the getgenerate call for the current setting.#### Arguments:\n```\n1. generate     (boolean, required) Set to true to turn on generation, off to turn off.\n2. genproclimit   (numeric, optional) Set processor limit when generation is on. Can be -1 for unlimited, 0 to turn on staking.\n```\n####Examples:Set the generation on with a limit of one processor\n```bash\n> verus setgenerate true 1\n```\nTurn minting/staking on\n```bash\n> verus setgenerate true 0\n```\nCheck the setting\n```bash\n> verus getgenerate\n```\nTurn off generation and minting\n```bash\n> verus setgenerate false\n```\nUsing json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setgenerate\", \"params\": [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Identity### `getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]