[
    "## Conversation that answers the provided questions:\n**User:**\nI'm worried that I might miss the fork for a new version of Verus at the specified time. What should I do if that happens?\n\n**AI Assistant:**\nDon't worry! If you miss the fork for a new version of Verus at the specified time, you can get back on the correct chain by stopping Verus and deleting everything except your `wallet.dat` file in your data directory. That should get you back on track.\n\n**User:**\nOkay, got it. But, where is the data directory located for Verus, depending on my operating system?\n\n**AI Assistant:**\nThe data directory for Verus is located at:\n\n* `~/.Komodo/vrsctest` on Linux\n* `~/Library/Application Support/Komodo/vrsctest` on Mac OS\n* `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest` on Windows 10\n\nMake sure to delete everything except your `wallet.dat` file in that directory.\n\n**User:**\nI also need to know how to export an ID to a PBaaS chain using the command line and Verus. Can you help me with that?\n\n**AI Assistant:**\nYou can export an ID to a PBaaS chain using the following command:\n\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\n\nJust replace the placeholders with your actual values, and you should be good to go!\n\n**User:**\nAnother question: How can I sign transactions from a multi-signature ID on Verus?\n\n**AI Assistant:**\nTo sign transactions from a multi-signature ID on Verus, you need to:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency`.\n2. Get the operation ID returned by `sendcurrency` and use `verus z_getoperationstatus` to get the raw hex transaction data.\n3. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and use `verus signrawtransaction` to sign the transaction.\n4. After the last necessary signature is applied, broadcast the transaction on the network using `verus sendrawtransaction`.\n\nIt's a bit of a process, but it's doable!\n\n**User:**\nFinally, what are some features of the new Verus Multicurrency, Multichain, DeFi Enabled Testnet?\n\n**AI Assistant:**\nThe new Verus Multicurrency, Multichain, DeFi Enabled Testnet is really powerful. It offers an easy-to-use GUI for basic operations, as well as command-line support for more advanced functions. It allows users to create new identities, currencies, liquidity pools, and blockchains without programming knowledge. It also enables sending currencies worldwide on the same chain or across blockchains, and converting currencies to others on the network without an exchange. It's a game-changer!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What should I do if I miss the fork for a new version of Verus at the specified time?",
            "If you miss the fork for a new version of Verus at the specified time, you can get back on the correct chain by stopping Verus and deleting everything except your `wallet.dat` file in your data directory.",
            "If you miss the fork for this version at the above time you can get back on the correct chain by stopping Verus and deleting deleting everything other than your wallet.dat file in your data directory at:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Where is the data directory located for Verus, depending on my operating system?",
            "The data directory for Verus is located at:\n\n* `~/.Komodo/vrsctest` on Linux\n* `~/Library/Application Support/Komodo/vrsctest` on Mac OS\n* `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest` on Windows 10",
            "If you miss the fork for this version at the above time you can get back on the correct chain by stopping Verus and deleting deleting everything other than your wallet.dat file in your data directory at:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I export an ID to a PBaaS chain using the command line and Verus?",
            "You can export an ID to a PBaaS chain using the following command:\n\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```",
            "If you miss the fork for this version at the above time you can get back on the correct chain by stopping Verus and deleting deleting everything other than your wallet.dat file in your data directory at:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I sign transactions from a multi-signature ID on Verus?",
            "To sign transactions from a multi-signature ID on Verus, you need to:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency`.\n2. Get the operation ID returned by `sendcurrency` and use `verus z_getoperationstatus` to get the raw hex transaction data.\n3. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and use `verus signrawtransaction` to sign the transaction.\n4. After the last necessary signature is applied, broadcast the transaction on the network using `verus sendrawtransaction`.",
            "If you miss the fork for this version at the above time you can get back on the correct chain by stopping Verus and deleting deleting everything other than your wallet.dat file in your data directory at:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What are some features of the new Verus Multicurrency, Multichain, DeFi Enabled Testnet?",
            "The new Verus Multicurrency, Multichain, DeFi Enabled Testnet offers an easy-to-use GUI for basic operations, as well as command-line support for more advanced functions. It allows users to create new identities, currencies, liquidity pools, and blockchains without programming knowledge. It also enables sending currencies worldwide on the same chain or across blockchains, and converting currencies to others on the network without an exchange.",
            "If you miss the fork for this version at the above time you can get back on the correct chain by stopping Verus and deleting deleting everything other than your wallet.dat file in your data directory at:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]