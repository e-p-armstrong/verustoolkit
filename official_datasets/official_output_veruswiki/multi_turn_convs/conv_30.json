[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to set up my Verus network and I need some help. How can I add a new node to my Verus network using the command line?\n\n**AI Assistant:**\nYou can add a new node to your Verus network using the `addnode` command. The syntax for this command is `verus addnode \"node_ip:port\" \"node_alias\"`. For example, to add a node with IP address `192.168.0.6` and port `8233` with the alias `onetry`, you would use the command `verus addnode \"192.168.0.6:8233\" \"onetry\"`.\n\nAlternatively, you can use the JSON-RPC API to add a node. The equivalent command would be `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.\n\n**User:**\nThat's really helpful! Thanks. I also need to clear all banned IPs from my Verus network. How can I do that?\n\n**AI Assistant:**\nYou can clear all banned IPs from your Verus network using the `clearbanned` command. The syntax for this command is `verus clearbanned`. Alternatively, you can use the JSON-RPC API to clear banned IPs. The equivalent command would be `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.\n\n**User:**\nAnother question: how can I disconnect from a specific node in my Verus network?\n\n**AI Assistant:**\nYou can disconnect from a specific node in your Verus network using the `disconnectnode` command. The syntax for this command is `verus disconnectnode \"node_ip:port\"`. For example, to disconnect from a node with IP address `192.168.0.6` and port `8233`, you would use the command `verus disconnectnode \"192.168.0.6:8233\"`.\n\nAlternatively, you can use the JSON-RPC API to disconnect from a node. The equivalent command would be `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.\n\n**User:**\nLastly, how can I get information about the nodes in my Verus network?\n\n**AI Assistant:**\nYou can get information about the nodes in your Verus network using the `getaddednodeinfo` command. The syntax for this command is `verus getaddednodeinfo dns [\"node\"]`. The `dns` parameter determines whether to include connected information in the output. If `dns` is set to `false`, only a list of added nodes will be provided. If `dns` is set to `true`, connected information will also be available. The `\"node\"` parameter is optional and specifies the node for which to return information. If it is not provided, information about all nodes will be returned. Does that help?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How can I add a new node to my Verus network using the command line?",
            "You can add a new node to your Verus network using the `addnode` command. The syntax for this command is `verus addnode \"node_ip:port\" \"node_alias\"`. For example, to add a node with IP address `192.168.0.6` and port `8233` with the alias `onetry`, you would use the command `verus addnode \"192.168.0.6:8233\" \"onetry\"`.\n\nAlternatively, you can use the JSON-RPC API to add a node. The equivalent command would be `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I clear all banned IPs from my Verus network?",
            "You can clear all banned IPs from your Verus network using the `clearbanned` command. The syntax for this command is `verus clearbanned`. Alternatively, you can use the JSON-RPC API to clear banned IPs. The equivalent command would be `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I disconnect from a specific node in my Verus network?",
            "You can disconnect from a specific node in your Verus network using the `disconnectnode` command. The syntax for this command is `verus disconnectnode \"node_ip:port\"`. For example, to disconnect from a node with IP address `192.168.0.6` and port `8233`, you would use the command `verus disconnectnode \"192.168.0.6:8233\"`.\n\nAlternatively, you can use the JSON-RPC API to disconnect from a node. The equivalent command would be `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I get information about the nodes in my Verus network?",
            "You can get information about the nodes in your Verus network using the `getaddednodeinfo` command. The syntax for this command is `verus getaddednodeinfo dns [\"node\"]`. The `dns` parameter determines whether to include connected information in the output. If `dns` is set to `false`, only a list of added nodes will be provided. If `dns` is set to `true`, connected information will also be available. The `\"node\"` parameter is optional and specifies the node for which to return information. If it is not provided, information about all nodes will be returned.",
            "Examples:\n```bash\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `clearbanned`\nClear all banned IPs.Examples:\n```bash\n> verus clearbanned\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"clearbanned\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `disconnectnode \"node\"`\nImmediately disconnects from the specified node.#### Arguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)Examples:\n```bash\n> verus disconnectnode \"192.168.0.6:8233\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"disconnectnode\", \"params\": [\"192.168.0.6:8233\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddednodeinfo dns ( \"node\" )`\nReturns information about the given added node, or all added nodes (note that onetry addnodes are not listed here)\nIf dns is false, only a list of added nodes will be provided, otherwise connected information will also be available.#### Arguments:\n1. dns    (boolean, required) If false, only a list of added nodes will be provided, otherwise connected information will also be available.\n2. \"node\"  (string, optional) If provided, return information about this specific node, otherwise all nodes are returned.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]