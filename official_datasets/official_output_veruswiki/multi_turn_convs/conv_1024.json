[
    "## Conversation that answers the provided questions:\n**User:**\nI was wondering, what does it mean for a VerusID to be recoverable?\n\n**AI Assistant:**\nA VerusID is recoverable because it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority. Does that make sense? Do you have any more questions about VerusIDs?\n\n**User:**\nYeah, that helps. Another thing I'm curious about is how a VerusID maintains privacy.\n\n**AI Assistant:**\nA VerusID maintains privacy through the use of zero-knowledge private addresses, which can be used for various purposes such as messaging, financial transactions, or voting. Additionally, each ID contains a content map of key-value hashes, which allows for private yet selectively provable claims and attestations, and can be used to create a strong, quantum-secure digital identity. This way, VerusIDs can protect your personal information while still allowing you to prove who you are when needed.\n\n**User:**\nI've heard of VerusHash 2.1, but I'm not really sure what it is. Can you tell me more?\n\n**AI Assistant:**\nVerusHash 2.1 is an algorithm designed to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and modern CPUs on the Verus network. It aims to provide a fair and balanced environment for both FPGAs and CPUs to operate, allowing for efficient mining and staking on the network.\n\n**User:**\nThat makes sense. But why did the Verus developers create VerusHash 2.1 in the first place?\n\n**AI Assistant:**\nThe Verus developers created VerusHash 2.1 to further equalize the performance of FPGAs and modern CPUs on the Verus network, with the goal of promoting a fair and balanced environment for all participants. By doing so, they aim to enable efficient mining and staking on the network, and to provide a strong foundation for the Verus economy. This way, everyone has an equal opportunity to participate and contribute to the network, regardless of the hardware they use.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does it mean for a VerusID to be recoverable?",
            "A VerusID is recoverable because it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How does a VerusID maintain privacy?",
            "A VerusID maintains privacy through the use of zero-knowledge private addresses, which can be used for various purposes such as messaging, financial transactions, or voting. Additionally, each ID contains a content map of key-value hashes, which allows for private yet selectively provable claims and attestations, and can be used to create a strong, quantum-secure digital identity.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of VerusHash 2.1?",
            "VerusHash 2.1 is an algorithm designed to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and modern CPUs on the Verus network. It aims to provide a fair and balanced environment for both FPGAs and CPUs to operate, allowing for efficient mining and staking on the network.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Why did the Verus developers create VerusHash 2.1?",
            "The Verus developers created VerusHash 2.1 to further equalize the performance of FPGAs and modern CPUs on the Verus network, with the goal of promoting a fair and balanced environment for all participants. By doing so, they aim to enable efficient mining and staking on the network, and to provide a strong foundation for the Verus economy.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]