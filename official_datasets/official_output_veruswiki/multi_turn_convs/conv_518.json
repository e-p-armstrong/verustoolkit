[
    "## Conversation that answers the provided questions:\n**User:**\nI'm interested in creating my own currency on Verus. What's required to create a currency of a specific name on Verus?\n\n**AI Assistant:**\nTo create a currency of a specific name on Verus, you need an ID of the same name, and the controller of that ID is the only one who can create a currency of that name. Additionally, each ID can only be used to create a currency of that name once. So, if you want to create a currency called \"MyCoin\", you would need to have an ID named \"mycoin@\".\n\n**User:**\nThat makes sense. How can I create a currency on Verus that is mapped to a specific, auditable store of value (like gold)?\n\n**AI Assistant:**\nTo create a currency on Verus that is mapped to a specific, auditable store of value (like gold), you would need to define the currency with a name that matches the name of the ID you control. For example, if you want to create a currency called \"gold\", you would need to have an ID named \"gold@\". Then, you can use the `definecurrency` command to define the currency, specifying the name, options, currencies, conversions, and other properties as needed.\n\n**User:**\nI see. What is the purpose of the `preallocations` field when defining a currency on Verus?\n\n**AI Assistant:**\nThe `preallocations` field in the `definecurrency` command allows you to pre-allocate a certain amount of the new currency to specific IDs. This can be useful for initial distributions or for sending some currency to yourself to start with, as in the example provided.\n\n**User:**\nFinally, can I create multiple currencies with the same name on Verus?\n\n**AI Assistant:**\nNo, each ID can only be used to create a currency of that name once. If you try to create a currency with a name that already exists, it will not be allowed. This ensures that there can only be one currency with a given name, which helps to prevent confusion and maintain the integrity of the system.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is required to create a currency of a specific name on Verus?",
            "To create a currency of a specific name on Verus, you need an ID of the same name, and the controller of that ID is the only one who can create a currency of that name. Additionally, each ID can only be used to create a currency of that name once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I create a currency on Verus that is mapped to a specific, auditable store of value (like gold)?",
            "To create a currency on Verus that is mapped to a specific, auditable store of value (like gold), you would need to define the currency with a name that matches the name of the ID you control. For example, if you want to create a currency called \"gold\", you would need to have an ID named \"gold@\". Then, you can use the `definecurrency` command to define the currency, specifying the name, options, currencies, conversions, and other properties as needed.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the `preallocations` field when defining a currency on Verus?",
            "The `preallocations` field in the `definecurrency` command allows you to pre-allocate a certain amount of the new currency to specific IDs. This can be useful for initial distributions or for sending some currency to yourself to start with, as in the example provided.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Can I create multiple currencies with the same name on Verus?",
            "No, each ID can only be used to create a currency of that name once. If you try to create a currency with a name that already exists, it will not be allowed.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]