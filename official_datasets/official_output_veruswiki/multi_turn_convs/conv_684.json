[
    "## Conversation that answers the provided questions:\n**User:**\nI have a few more questions about VerusIDs. What does it mean for an ID to be recoverable on the Verus network?\n\n**AI Assistant:**\nOn the Verus network, an ID is recoverable if it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state or vice versa, unless they are both controlled by the same underlying authority. Does that make sense?\n\n**User:**\nYeah, that helps. What kind of privacy features does an ID on the Verus network have?\n\n**AI Assistant:**\nEach ID on the Verus network contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints. Additionally, each ID has a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations, or selectively provable components of a strong identity, attested to with a quantum secure signature when available. This allows for a high level of control over your personal data and identity.\n\n**User:**\nI've heard of the VerusHash 2.1 algorithm. What is its purpose?\n\n**AI Assistant:**\nThe VerusHash 2.1 algorithm is designed to equalize the performance of Field-Programmable Gate Arrays (FPGAs) and modern Central Processing Units (CPUs) on the Verus network. It builds upon the VerusHash 2.0 algorithm, which was the first to significantly equalize FPGAs and CPUs, and is intended to tilt the balance more favorably towards CPUs while still allowing FPGAs to operate on the hash algorithm with minor modifications.\n\n**User:**\nThat's interesting. Why did the Verus developers reach out to FPGA manufacturers and make the new VerusHash 2.1 algorithm available to them?\n\n**AI Assistant:**\nThe Verus developers reached out to FPGA manufacturers and made the new VerusHash 2.1 algorithm available to them so that everyone would have an opportunity to mine and stake on the Verus network when it starts to roll out, and identity rewards begin streaming from the network. This ensures that both CPU and FPGA miners can participate in the network and contribute to its security and decentralization.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does it mean for an ID to be recoverable on the Verus network?",
            "On the Verus network, an ID is recoverable if it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state or vice versa, unless they are both controlled by the same underlying authority.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What kind of privacy features does an ID on the Verus network have?",
            "Each ID on the Verus network contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints. Additionally, each ID has a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations, or selectively provable components of a strong identity, attested to with a quantum secure signature when available.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the VerusHash 2.1 algorithm?",
            "The VerusHash 2.1 algorithm is designed to equalize the performance of Field-Programmable Gate Arrays (FPGAs) and modern Central Processing Units (CPUs) on the Verus network. It builds upon the VerusHash 2.0 algorithm, which was the first to significantly equalize FPGAs and CPUs, and is intended to tilt the balance more favorably towards CPUs while still allowing FPGAs to operate on the hash algorithm with minor modifications.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Why did the Verus developers reach out to FPGA manufacturers and make the new VerusHash 2.1 algorithm available to them?",
            "The Verus developers reached out to FPGA manufacturers and made the new VerusHash 2.1 algorithm available to them so that everyone would have an opportunity to mine and stake on the Verus network when it starts to roll out, and identity rewards begin streaming from the network. This ensures that both CPU and FPGA miners can participate in the network and contribute to its security and decentralization.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]