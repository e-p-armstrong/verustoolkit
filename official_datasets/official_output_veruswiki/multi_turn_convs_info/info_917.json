[
    [
        [
            "How can I define a new currency using the Verus command line tool?",
            "You can define a new currency using the `definecurrency` command with a JSON definition. For example:\n```\nverus definecurrency jsondefinition\n```\nAlternatively, you can use `curl` to send a JSON-RPC request to the Verus server:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"definecurrency\", \"params\": [jsondefinition] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "Examples:\n```bash\n> verus definecurrency jsondefinition\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"definecurrency\", \"params\": [jsondefinition] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `estimateconversion '{\"currency\":\"name\",\"convertto\":\"name\",\"amount\":n}'`\nThis estimates conversion from one currency to another, taking into account pending conversions, fees and slippage.#### Arguments\n```json\n{\n \"currency\": \"name\"    (string, required) Name of the source currency to send in this output, defaults to\n                        native of chain\n \"amount\":amount     (numeric, required) The numeric amount of currency, denominated in source currency\n \"convertto\":\"name\",   (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n \"preconvert\":\"false\",  (bool, optional)  Convert to currency at market price (default=false), only works if\n                        transaction is mined before start of currency\n \"via\":\"name\",      (string, optional) If source and destination currency are reserves, via is a common fractional\n                        to convert through\n}\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `estimateconversion` command do in Verus, and what arguments does it take?",
            "The `estimateconversion` command in Verus estimates the conversion from one currency to another, taking into account pending conversions, fees, and slippage. It takes the following arguments:\n\n* `currency`: The name of the source currency to send (string, required).\n* `amount`: The numeric amount of currency to convert (numeric, required).\n* `convertto`: The valid currency to convert to (string, optional).\n* `preconvert`: A boolean indicating whether to convert to the currency at market price (optional, default=false).\n* `via`: A common fractional currency to convert through, if the source and destination currencies are reserves (string, optional).\n\nThese arguments are passed as a JSON object, for example:\n```json\n{\n  \"currency\": \"name\",\n  \"amount\": n,\n  \"convertto\": \"name\",\n  \"preconvert\": false,\n  \"via\": \"name\"\n}\n```",
            "Examples:\n```bash\n> verus definecurrency jsondefinition\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"definecurrency\", \"params\": [jsondefinition] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `estimateconversion '{\"currency\":\"name\",\"convertto\":\"name\",\"amount\":n}'`\nThis estimates conversion from one currency to another, taking into account pending conversions, fees and slippage.#### Arguments\n```json\n{\n \"currency\": \"name\"    (string, required) Name of the source currency to send in this output, defaults to\n                        native of chain\n \"amount\":amount     (numeric, required) The numeric amount of currency, denominated in source currency\n \"convertto\":\"name\",   (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n \"preconvert\":\"false\",  (bool, optional)  Convert to currency at market price (default=false), only works if\n                        transaction is mined before start of currency\n \"via\":\"name\",      (string, optional) If source and destination currency are reserves, via is a common fractional\n                        to convert through\n}\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `preconvert` argument in the `estimateconversion` command?",
            "The `preconvert` argument in the `estimateconversion` command indicates whether to convert to the destination currency at market price. If set to `true`, the conversion will occur at the current market price. However, this only works if the transaction is mined before the start of the currency. If not specified, it defaults to `false`.",
            "Examples:\n```bash\n> verus definecurrency jsondefinition\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"definecurrency\", \"params\": [jsondefinition] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `estimateconversion '{\"currency\":\"name\",\"convertto\":\"name\",\"amount\":n}'`\nThis estimates conversion from one currency to another, taking into account pending conversions, fees and slippage.#### Arguments\n```json\n{\n \"currency\": \"name\"    (string, required) Name of the source currency to send in this output, defaults to\n                        native of chain\n \"amount\":amount     (numeric, required) The numeric amount of currency, denominated in source currency\n \"convertto\":\"name\",   (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n \"preconvert\":\"false\",  (bool, optional)  Convert to currency at market price (default=false), only works if\n                        transaction is mined before start of currency\n \"via\":\"name\",      (string, optional) If source and destination currency are reserves, via is a common fractional\n                        to convert through\n}\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c1703237-6207-4cc9-9e14-a56bf0524833"
]