[
    [
        [
            "What is the \"currencyidhex\" property in a Verus currency definition?",
            "The \"currencyidhex\" property is a string that represents the hex representation of the currency ID. This hex representation can be used with the getcurrency API by prefixing it with \"hex:\", for example, \"hex:currencyidhex\".",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the \"notarizationprotocol\" property in a Verus currency definition?",
            "The \"notarizationprotocol\" property is an integer that determines the protocol number for cross-chain or bridged notarizations. This protocol number specifies the variations in notarization processes used for cross-chain or bridged currencies.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"startblock\" property used for in a Verus currency definition?",
            "The \"startblock\" property is an integer that specifies the block number on the current chain that must be notarized into block one of the chain. This property is used to define the starting point for the currency's useful life on the chain.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"currencies\" property used for in a Verus currency definition?",
            "The \"currencies\" property is a string array that lists the currencies that can be converted to the current currency at launch or that make up a liquidity basket. This property is used to define the currencies that are compatible with the current currency.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"weights\" property used for in a Verus currency definition?",
            "The \"weights\" property is a number array that specifies the relative currency weights. This property is only returned for a liquidity basket and is used to define the relative importance of each currency in the basket.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"conversions\" property used for in a Verus currency definition?",
            "The \"conversions\" property is a number array that specifies the pre-launch conversion rates for non-fractional currencies. This property is used to define the conversion rates between currencies before the launch of the currency.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"minpreconversion\" property used for in a Verus currency definition?",
            "The \"minpreconversion\" property is a number array that specifies the minimum amounts required in pre-conversions for the currency to launch. This property is used to define the minimum amounts of each currency required to launch the new currency.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"currencynames\" property used for in a Verus currency definition?",
            "The \"currencynames\" property is an object that maps i-addresses to fully qualified names of all sub-currencies. This property is used to define the names of the sub-currencies associated with the current currency.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"initialsupply\" property used for in a Verus currency definition?",
            "The \"initialsupply\" property is a number that specifies the initial currency supply for fractional currencies before preallocation or issuance. This property is used to define the initial amount of the currency available before it is allocated or issued to users.",
            "he currency ID, same as the ID behind the currency\n \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"\n \"parent\" : \"i-address\",        (string) parent blockchain ID\n \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run\n \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched\n \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations\n \"proofprotocol\" : n          (int) protocol number that determines variations in cross-chain or bridged proofs\n \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain\n \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)\n \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies\n \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch\n \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket\n \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies\n \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance\n \"prelaunchcarveout\" : n,        (number) pre-launc",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d5487072-ba5a-48e0-a4da-6576f71378c9"
]