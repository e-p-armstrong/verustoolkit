[
    [
        [
            "What are the required arguments for the `registernamecommitment` function?",
            "The required arguments for the `registernamecommitment` function are `name` and `controladdress`. The `name` argument is a unique string, and the `controladdress` argument is the address that will control this commitment.",
            "#### Arguments:\n```\n\"name\"              (string, required) the unique name to commit to. creating a name commitment is not a\n                            registration, and if one is created for a name that exists, it may\n                            succeed, but will never be able to be used.\n\"controladdress\"         (address, required) address that will control this commitment\n\"referralidentity\"        (identity, optional)friendly name or identity address that is provided as a referral mechanism and to lower network cost of the ID\n\"parentnameorid-pbaasonly\"    (currency, optional)friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules & pricing\n\"sourceoffunds\"         (addressorid, optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used\n```\n#### Result: obj\n```json\n{\n  \"txid\" : \"hexid\"\n  \"namereservation\" :\n  {\n    \"name\"  : \"namestr\",   (string) the unique name in this commitment\n    \"salt\"  : \"hexstr\",   (hex)  salt used to hide the commitment\n    \"referral\": \"identityaddress\", (base58) address of the referring identity if there is one\n    \"parent\" : \"namestr\",  (string) name of the parent if not Verus or Verus test\n    \"nameid\" : \"address\",  (base58) identity address for this identity if it is created\n  }\n}\n```\nExamples:\n```bash\n> verus registernamecommitment \"name\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registernamecommitment\", \"params\": [\"name\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `referralidentity` argument in the `registernamecommitment` function?",
            "The `referralidentity` argument is an optional friendly name or identity address that serves as a referral mechanism to lower the network cost of the ID.",
            "#### Arguments:\n```\n\"name\"              (string, required) the unique name to commit to. creating a name commitment is not a\n                            registration, and if one is created for a name that exists, it may\n                            succeed, but will never be able to be used.\n\"controladdress\"         (address, required) address that will control this commitment\n\"referralidentity\"        (identity, optional)friendly name or identity address that is provided as a referral mechanism and to lower network cost of the ID\n\"parentnameorid-pbaasonly\"    (currency, optional)friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules & pricing\n\"sourceoffunds\"         (addressorid, optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used\n```\n#### Result: obj\n```json\n{\n  \"txid\" : \"hexid\"\n  \"namereservation\" :\n  {\n    \"name\"  : \"namestr\",   (string) the unique name in this commitment\n    \"salt\"  : \"hexstr\",   (hex)  salt used to hide the commitment\n    \"referral\": \"identityaddress\", (base58) address of the referring identity if there is one\n    \"parent\" : \"namestr\",  (string) name of the parent if not Verus or Verus test\n    \"nameid\" : \"address\",  (base58) identity address for this identity if it is created\n  }\n}\n```\nExamples:\n```bash\n> verus registernamecommitment \"name\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registernamecommitment\", \"params\": [\"name\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What information is returned by the `registernamecommitment` function?",
            "The `registernamecommitment` function returns an object with a `txid` and a `namereservation` object. The `namereservation` object contains information about the commitment, including the unique `name`, a `salt` used to hide the commitment, a `referral` address if specified, a `parent` name if not Verus or Verus test, and a `nameid` identity address for this identity if it is created.",
            "#### Arguments:\n```\n\"name\"              (string, required) the unique name to commit to. creating a name commitment is not a\n                            registration, and if one is created for a name that exists, it may\n                            succeed, but will never be able to be used.\n\"controladdress\"         (address, required) address that will control this commitment\n\"referralidentity\"        (identity, optional)friendly name or identity address that is provided as a referral mechanism and to lower network cost of the ID\n\"parentnameorid-pbaasonly\"    (currency, optional)friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules & pricing\n\"sourceoffunds\"         (addressorid, optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used\n```\n#### Result: obj\n```json\n{\n  \"txid\" : \"hexid\"\n  \"namereservation\" :\n  {\n    \"name\"  : \"namestr\",   (string) the unique name in this commitment\n    \"salt\"  : \"hexstr\",   (hex)  salt used to hide the commitment\n    \"referral\": \"identityaddress\", (base58) address of the referring identity if there is one\n    \"parent\" : \"namestr\",  (string) name of the parent if not Verus or Verus test\n    \"nameid\" : \"address\",  (base58) identity address for this identity if it is created\n  }\n}\n```\nExamples:\n```bash\n> verus registernamecommitment \"name\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registernamecommitment\", \"params\": [\"name\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `registernamecommitment` function in Verus?",
            "You can use the `registernamecommitment` function in Verus by running a command like `verus registernamecommitment \"name\"` or by making a JSON-RPC request with the `registernamecommitment` method and the required arguments.",
            "#### Arguments:\n```\n\"name\"              (string, required) the unique name to commit to. creating a name commitment is not a\n                            registration, and if one is created for a name that exists, it may\n                            succeed, but will never be able to be used.\n\"controladdress\"         (address, required) address that will control this commitment\n\"referralidentity\"        (identity, optional)friendly name or identity address that is provided as a referral mechanism and to lower network cost of the ID\n\"parentnameorid-pbaasonly\"    (currency, optional)friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules & pricing\n\"sourceoffunds\"         (addressorid, optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used\n```\n#### Result: obj\n```json\n{\n  \"txid\" : \"hexid\"\n  \"namereservation\" :\n  {\n    \"name\"  : \"namestr\",   (string) the unique name in this commitment\n    \"salt\"  : \"hexstr\",   (hex)  salt used to hide the commitment\n    \"referral\": \"identityaddress\", (base58) address of the referring identity if there is one\n    \"parent\" : \"namestr\",  (string) name of the parent if not Verus or Verus test\n    \"nameid\" : \"address\",  (base58) identity address for this identity if it is created\n  }\n}\n```\nExamples:\n```bash\n> verus registernamecommitment \"name\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registernamecommitment\", \"params\": [\"name\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "42041949-e546-4a78-b88a-6e42c481e9b4"
]