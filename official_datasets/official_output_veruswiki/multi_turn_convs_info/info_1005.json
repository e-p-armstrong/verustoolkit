[
    [
        [
            "What is the main purpose of the Verus Vault use case?",
            "The main purpose of the Verus Vault use case is to provide an additional layer of security to protect funds controlled by an ID. It allows users to timelock an ID, preventing any spending of funds while still allowing the ID to be used for staking.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How does the Verus Vault use case protect against theft?",
            "The Verus Vault use case protects against theft by allowing users to timelock an ID, which prevents anyone, including thieves who may have compromised the private keys, from spending the funds controlled by that ID. Even if a thief unlocks the ID, they will have to wait for the timelock period to expire before they can access the funds. This gives the original owner time to notice the unauthorized unlock and revoke and recover their ID before any funds are lost.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is an additional measure of security that can be taken to protect against theft when using the Verus Vault use case?",
            "An additional measure of security that can be taken is to modify the controlling private keys of an ID before unlocking it. This ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys, providing an extra layer of protection against theft.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How does Verus describe the security provided by the Verus Vault use case?",
            "Verus describes the security provided by the Verus Vault use case as \"theft-resistant\", rather than \"theft-proof\". This is because, while the technology provides a high level of security, there is no guarantee that it can prevent all possible forms of theft or exploitation. As part of the \"experimental software\" disclaimer, Verus disclaims all guarantees of fitness for any particular purpose.",
            "The Verus Vault use case, which was originally described in the conception of the feature, is the ability to timelock an ID, which would prevent any spending of any funds controlled by that ID, while still allowing the ID and all its funds to be used for staking. If the timelock was set for one day when locked, the unlock operation itself will require a waiting period of one day, which can only be circumvented by a revocation followed by recovery operation. In practice, this means that even if someone compromises your private keys while an ID is locked, they cannot spend any of the funds (though they could stake them and delegate rewards to another address, which you could immediately see) unless they unlock the ID first and wait one day. If you notice that your ID has been unlocked by someone other than you, you can revoke and recover before any funds are lost at all. If you wanted to get extremely secure, to the point of covering a case where someone may steal your private keys without you knowing and then lay in wait until you unlock your identity, so they can pounce on your funds before you lock it again, you can actually modify the controlling private keys of an identity before unlocking it, which ensures that the unlocked funds become usable again under the control of freshly made, uncompromised keys. While we believe this unique Verus technology actually provides for fully theft-proof workflows and protection of all assets on the network under the control of an ID, we will generally refer to the technology as \"theft-resistant\" and disclaim all guarantees of fitness for any particular purpose as part of the \"experimental software\" disclaimer.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "55e97086-277f-46e2-934c-f62c3e228745"
]