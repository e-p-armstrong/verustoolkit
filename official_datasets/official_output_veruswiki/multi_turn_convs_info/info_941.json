[
    [
        [
            "What does the \"depends\" field in a transaction object represent in a Verus block template?",
            "The \"depends\" field in a transaction object in a Verus block template represents an array of numbers that specify the transactions that must be present in the final block if this one is. These are the transactions that this transaction depends on, and they are identified by their 1-based index in the 'transactions' list.",
            "tents of non-coinbase transactions that should be included in the next block\n   {\n     \"data\" : \"xxxx\",      (string) transaction data encoded in hexadecimal (byte-for-byte)\n     \"hash\" : \"xxxx\",      (string) hash/id encoded in little-endian hexadecimal\n     \"depends\" : [        (array) array of numbers\n       n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n       ,...\n     ],\n     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block\n   }\n   ,...\n ],\n \"coinbasetxn\" : { ... },      (json object) information for coinbase transaction\n \"target\" : \"xxxx\",         (string) The hash target\n \"mintime\" : xxx,          (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n \"mutable\" : [           (array of string) list of ways the block template may be changed\n   \"value\"             (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\n   ,...\n ],\n \"noncerange\" : \"00000000ffffffff\", (string) A range of valid nonces\n \"sigoplimit\" : n,         (numeric) limit of sigops in blocks\n \"sizeli",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the \"fee\" field in a transaction object in a Verus block template?",
            "The \"fee\" field in a transaction object in a Verus block template represents the difference in value between the transaction inputs and outputs, measured in Satoshis. For coinbase transactions, this is a negative number representing the total collected block fees (excluding the block subsidy). If this field is not present, the fee is unknown and clients should not assume there isn't one.",
            "tents of non-coinbase transactions that should be included in the next block\n   {\n     \"data\" : \"xxxx\",      (string) transaction data encoded in hexadecimal (byte-for-byte)\n     \"hash\" : \"xxxx\",      (string) hash/id encoded in little-endian hexadecimal\n     \"depends\" : [        (array) array of numbers\n       n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n       ,...\n     ],\n     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block\n   }\n   ,...\n ],\n \"coinbasetxn\" : { ... },      (json object) information for coinbase transaction\n \"target\" : \"xxxx\",         (string) The hash target\n \"mintime\" : xxx,          (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n \"mutable\" : [           (array of string) list of ways the block template may be changed\n   \"value\"             (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\n   ,...\n ],\n \"noncerange\" : \"00000000ffffffff\", (string) A range of valid nonces\n \"sigoplimit\" : n,         (numeric) limit of sigops in blocks\n \"sizeli",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What does the \"required\" field in a transaction object represent in a Verus block template?",
            "The \"required\" field in a transaction object in a Verus block template is a boolean that indicates whether this transaction must be included in the final block. If it is true, the transaction is required to be included.",
            "tents of non-coinbase transactions that should be included in the next block\n   {\n     \"data\" : \"xxxx\",      (string) transaction data encoded in hexadecimal (byte-for-byte)\n     \"hash\" : \"xxxx\",      (string) hash/id encoded in little-endian hexadecimal\n     \"depends\" : [        (array) array of numbers\n       n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n       ,...\n     ],\n     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block\n   }\n   ,...\n ],\n \"coinbasetxn\" : { ... },      (json object) information for coinbase transaction\n \"target\" : \"xxxx\",         (string) The hash target\n \"mintime\" : xxx,          (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n \"mutable\" : [           (array of string) list of ways the block template may be changed\n   \"value\"             (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\n   ,...\n ],\n \"noncerange\" : \"00000000ffffffff\", (string) A range of valid nonces\n \"sigoplimit\" : n,         (numeric) limit of sigops in blocks\n \"sizeli",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What does the \"target\" field in a Verus block template represent?",
            "The \"target\" field in a Verus block template represents the hash target, which is a string that specifies the target hash for the block.",
            "tents of non-coinbase transactions that should be included in the next block\n   {\n     \"data\" : \"xxxx\",      (string) transaction data encoded in hexadecimal (byte-for-byte)\n     \"hash\" : \"xxxx\",      (string) hash/id encoded in little-endian hexadecimal\n     \"depends\" : [        (array) array of numbers\n       n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n       ,...\n     ],\n     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block\n   }\n   ,...\n ],\n \"coinbasetxn\" : { ... },      (json object) information for coinbase transaction\n \"target\" : \"xxxx\",         (string) The hash target\n \"mintime\" : xxx,          (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n \"mutable\" : [           (array of string) list of ways the block template may be changed\n   \"value\"             (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\n   ,...\n ],\n \"noncerange\" : \"00000000ffffffff\", (string) A range of valid nonces\n \"sigoplimit\" : n,         (numeric) limit of sigops in blocks\n \"sizeli",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the \"mintime\" field in a Verus block template?",
            "The \"mintime\" field in a Verus block template represents the minimum timestamp appropriate for the next block time, measured in seconds since the epoch (January 1, 1970, GMT).",
            "tents of non-coinbase transactions that should be included in the next block\n   {\n     \"data\" : \"xxxx\",      (string) transaction data encoded in hexadecimal (byte-for-byte)\n     \"hash\" : \"xxxx\",      (string) hash/id encoded in little-endian hexadecimal\n     \"depends\" : [        (array) array of numbers\n       n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n       ,...\n     ],\n     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block\n   }\n   ,...\n ],\n \"coinbasetxn\" : { ... },      (json object) information for coinbase transaction\n \"target\" : \"xxxx\",         (string) The hash target\n \"mintime\" : xxx,          (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n \"mutable\" : [           (array of string) list of ways the block template may be changed\n   \"value\"             (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\n   ,...\n ],\n \"noncerange\" : \"00000000ffffffff\", (string) A range of valid nonces\n \"sigoplimit\" : n,         (numeric) limit of sigops in blocks\n \"sizeli",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What does the \"mutable\" field in a Verus block template represent?",
            "The \"mutable\" field in a Verus block template is an array of strings that specifies the ways in which the block template may be changed. Examples of ways the block template may be changed include 'time', 'transactions', and 'prevblock'.",
            "tents of non-coinbase transactions that should be included in the next block\n   {\n     \"data\" : \"xxxx\",      (string) transaction data encoded in hexadecimal (byte-for-byte)\n     \"hash\" : \"xxxx\",      (string) hash/id encoded in little-endian hexadecimal\n     \"depends\" : [        (array) array of numbers\n       n            (numeric) transactions before this one (by 1-based index in 'transactions' list) that must be present in the final block if this one is\n       ,...\n     ],\n     \"fee\": n,          (numeric) difference in value between transaction inputs and outputs (in Satoshis); for coinbase transactions, this is a negative Number of the total collected block fees (ie, not including the block subsidy); if key is not present, fee is unknown and clients MUST NOT assume there isn't one\n     \"sigops\" : n,        (numeric) total number of SigOps, as counted for purposes of block limits; if key is not present, sigop count is unknown and clients MUST NOT assume there aren't any\n     \"required\" : true|false   (boolean) if provided and true, this transaction must be in the final block\n   }\n   ,...\n ],\n \"coinbasetxn\" : { ... },      (json object) information for coinbase transaction\n \"target\" : \"xxxx\",         (string) The hash target\n \"mintime\" : xxx,          (numeric) The minimum timestamp appropriate for next block time in seconds since epoch (Jan 1 1970 GMT)\n \"mutable\" : [           (array of string) list of ways the block template may be changed\n   \"value\"             (string) A way the block template may be changed, e.g. 'time', 'transactions', 'prevblock'\n   ,...\n ],\n \"noncerange\" : \"00000000ffffffff\", (string) A range of valid nonces\n \"sigoplimit\" : n,         (numeric) limit of sigops in blocks\n \"sizeli",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "640ec0b9-ca00-41b6-9fd9-17c0d32b99ee"
]