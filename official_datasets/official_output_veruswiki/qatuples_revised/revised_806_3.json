[
    "How do I check the current generation setting using the `getgenerate` command?",
    "To check the current generation setting, you can use the `getgenerate` command with no arguments:\n```\nverus getgenerate\n```\nThis will return the current setting.",
    "### `setgenerate generate ( genproclimit )`\nSet 'generate' true to turn either mining/generation or minting/staking on and false to turn both off.\nMining is limited to 'genproclimit' processors, -1 is unlimited, setgenerate true with 0 genproclimit turns on staking\nSee the getgenerate call for the current setting.#### Arguments:\n```\n1. generate     (boolean, required) Set to true to turn on generation, off to turn off.\n2. genproclimit   (numeric, optional) Set processor limit when generation is on. Can be -1 for unlimited, 0 to turn on staking.\n```\n####Examples:Set the generation on with a limit of one processor\n```bash\n> verus setgenerate true 1\n```\nTurn minting/staking on\n```bash\n> verus setgenerate true 0\n```\nCheck the setting\n```bash\n> verus getgenerate\n```\nTurn off generation and minting\n```bash\n> verus setgenerate false\n```\nUsing json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setgenerate\", \"params\": [true, 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Identity### `getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'`",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]