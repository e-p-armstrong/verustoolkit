[
    "## Conversation that answers the provided questions:\n**User:**\nI'm curious about the business side of things. How do venture capitalists and investors benefit from the Verus protocol, software, and network?\n\n**AI Assistant:**\nActually, venture capitalists and investors don't benefit from the Verus protocol, software, and network. In fact, no venture capitalists or investors have been involved in its financing or development. This means that there is no need to extract rent or payment from users to pay back investors, making it rent-free technology. The only payments necessary are network fees to provide sufficient incentive for outsiders to provide their compute resources to power the network.\n\n**User:**\nThat's great to hear. I've also been wondering about smart contracts. Are they required to use the Verus protocol?\n\n**AI Assistant:**\nNo, smart contracts are not required to use the Verus protocol. In fact, Verus does not use smart contracts at all. Instead, it is based on more traditional and longstanding distributed computing paradigms. Users access the software for basic primitives, which they then put into use and combine however they see fit. No contract programming or special blockchain engineering skill is required to carry out sophisticated actions. Does that clarify things for you?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do venture capitalists and investors benefit from the Verus protocol, software, and network?",
            "Venture capitalists and investors do not benefit from the Verus protocol, software, and network. In fact, no venture capitalists or investors have been involved in its financing or development. This means that there is no need to extract rent or payment from users to pay back investors, making it rent-free technology. The only payments necessary are network fees to provide sufficient incentive for outsiders to provide their compute resources to power the network.",
            "cly available, including the ability to run advanced Community Currency experiments that are virtually risk-free for communities, can be carried out at low cost, and have several elements that will make them attractive and safe for broad community use.\nTwo key points to note about the Verus protocols, software and network are:\nno venture capitalists or investors have been involved in its financing or development, so there is no need to extract rent or payment from users to pay back investors \u2014 it is rent-free technology, the only payments necessary are network fees to provide sufficient incentive for outsiders to provide their compute resources to power the network; and\nVerus does not use smart contracts \u2014 it is based on more traditional and longstanding distributed computing paradigms, and users access the software for basic primitives, which they then put into use and combine however they see fit. No contract programming or special blockchain engineering skill is required to carry out sophisticated actions. Recently, on the Verus testnet, one community member (a non-programmer) implemented a powerful community currency example in less than ten minutes with a few simple commands.\nCurrency Reserves \u2014 Convertibility\nVerus provides the ability to define new tokens/currencies at will, without programming. Various options are available, as tokens carry a multitude of possible uses, from voting to tickets to currencies. For community currency experiments, one of the key options is to lock in reserves that are attached to, and back the value of, the newly issued currency. And, since Verus is bridgeable to and from the Ethereum network, you could back a new currency with ethereum or USDC or any other valuable currency from that network.\nIf a CommCurr is defined with reserves backing it, then users can freely mint new currency by converting their USDC, for example, directly t",
            "./raw_text_input_medium/Community Currencies_ A Case Study to Explore New Technical Possibilities-2022-05-26 18:19:48"
        ],
        [
            "Why are smart contracts required to use the Verus protocol?",
            "Smart contracts are not required to use the Verus protocol. In fact, Verus does not use smart contracts at all. Instead, it is based on more traditional and longstanding distributed computing paradigms. Users access the software for basic primitives, which they then put into use and combine however they see fit. No contract programming or special blockchain engineering skill is required to carry out sophisticated actions.",
            "cly available, including the ability to run advanced Community Currency experiments that are virtually risk-free for communities, can be carried out at low cost, and have several elements that will make them attractive and safe for broad community use.\nTwo key points to note about the Verus protocols, software and network are:\nno venture capitalists or investors have been involved in its financing or development, so there is no need to extract rent or payment from users to pay back investors \u2014 it is rent-free technology, the only payments necessary are network fees to provide sufficient incentive for outsiders to provide their compute resources to power the network; and\nVerus does not use smart contracts \u2014 it is based on more traditional and longstanding distributed computing paradigms, and users access the software for basic primitives, which they then put into use and combine however they see fit. No contract programming or special blockchain engineering skill is required to carry out sophisticated actions. Recently, on the Verus testnet, one community member (a non-programmer) implemented a powerful community currency example in less than ten minutes with a few simple commands.\nCurrency Reserves \u2014 Convertibility\nVerus provides the ability to define new tokens/currencies at will, without programming. Various options are available, as tokens carry a multitude of possible uses, from voting to tickets to currencies. For community currency experiments, one of the key options is to lock in reserves that are attached to, and back the value of, the newly issued currency. And, since Verus is bridgeable to and from the Ethereum network, you could back a new currency with ethereum or USDC or any other valuable currency from that network.\nIf a CommCurr is defined with reserves backing it, then users can freely mint new currency by converting their USDC, for example, directly t",
            "./raw_text_input_medium/Community Currencies_ A Case Study to Explore New Technical Possibilities-2022-05-26 18:19:48"
        ]
    ]
]