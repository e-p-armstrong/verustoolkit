[
    "Is VerusHash a closed-source algorithm, and can other projects use it?",
    "No, VerusHash is an open-source algorithm, and other projects can adopt it. Verus' commitment to decentralization, integrity, and security led to the development of VerusHash as an open-source innovation, making it available for other projects to use and build upon.",
    "active the greatest number of miners by creating a hashing algorithm that worked hard to balance potential contributions from CPU and FPGA miners without putting useful hash power beyond the reach of GPUs. It\u2019s a real testament to the forward looking and long-term commitments to decentralization, integrity, and security that the project began by innovating at this fundamental level. (And of course, in the spirit of the larger cryptocurrency movement, Verus\u2019 innovations, including VerusHash, are open source \u2014 other projects can adopt them.)\nIn addition to VerusHash, Verus added Proof of Power \u2014 a hybrid Proof of Work/Proof of Stake consensus mechanism that provides the best of both worlds by aggregating the protections of each and, importantly, the project published a paper describing how Proof of Power protects against a long term plague on crypto, the Sybil attack. Verus also created its \u2018cheat catcher\u2019 tech to protect against specific mining attacks. VerusHash, Proof of Power, cheat catching \u2014 that\u2019s an excellent start, but the project also extends the lineage of Komodo (KMD) and takes advantage of Komodo\u2019s notarization mechanism. Komodo recruits all of Bitcoin\u2019s proof of power history \u2014 the most substantial in the world \u2014 as added protection against forgeries.\nAs for useful tech that will be immediately available to the \u201cearly adopter\u201d end users, Verus was the first project to port ZCash\u2019s (ZEC) Sapling technology. Sapling made Z transactions (a very effective kind of privacy transaction) efficient enough to be much more practical for exchanges and much more useable in wallets. And Verus didn\u2019t just port Sapling for itself. Komodo commissioned Verus developers to contribute Sapling code to the entire Komodo ecosystem, which made projects like Pirate (ARRR) much more efficient, and made Pirate\u2019s pitch that exchanges should support Z to Z transactions \u2014 totally priva",
    "./raw_text_input_medium/What Verus Did (and What It\u2019s Doing)-2020-08-29 19:24:56"
]