[
    "What happens to the subID registration fees in a centralized token currency like PremiumAccess?",
    "In a centralized token currency like PremiumAccess, the subID registration fees go to the rootID. This is because the currency is controlled by a central authority, which in this case is the owner of the rootID.",
    "### **\"idreferrallevels\"** ![image-referralsID](/images/referralsID2.png) Use this parameter to change the levels of referrals used when registering subIDs. The image above shows the division and distribution of subID registration fees, depending on the chosen level. Minimum is 0 levels, maximum is 5. The default is `3` levels.To enable referrals, add `\"options\":8` to the currency definition.Example currency: ``` json ./verus -chain=VRSCTEST definecurrency '{  \"name\":\"PremiumAccess\",  \"options\":40,  \"proofprotocol\":2,  \"preallocations\":[{\"Klaus@\":2000}],  \"idregistrationfees\":300,  \"idreferrallevels\":1 }' ``` \u261d\ufe0f This is a centralized simple token currency called PremiumAccess. The owner of the rootID can mint and burn tokens at will. It has referrals enabled. When the currency is launched 2000 PremiumAccess go to the Klaus@ VerusID. It costs a 300 PremiumAccess fee to register a subID. These fees go to the rootID because it is a centralized token currency. When someone registers a subID using a referral they pay 200 of which 100 goes to the referred subID, and 100 to the rootID.### **\"nativecurrencyid\"** Use this parameter for mapped ERC-20 tokens. The parameter includes the Ethereum contract address for the ERC-20. [Read more](/currencies/mapping-1:1-eth)::: warning Need help setting up a currency launch? \ud83e\udd14 [Go to the Verus Discord #pbaas-development channel. The community is happy to assist!](https://www.verus.io/discord) :::## How to launch Now you know how to create a currency definition with all its options and parameters. Next up: how to actually use the definition to launch a currency.Here we use the command-line interface. If you want to use the built-in terminal from Verus Desktop, just replace ``./verus -chain=VRSCTEST`` with ``run``.::: tip Use Verus Testnet first! \ud83d\udc77 Before launching your currency or token on Verus (or any other PBaaS-chain), it is highly recommended to try it out on testnet first. :::Let's use this example definition to launch the currency: ``` json ./verus -chain=VRSCTEST definecurrency '{  \"name\":\"MyBrand\",  \"options\":32,  \"proofprotocol\":2,  \"preallocations\":[{\"Influencer@\":100}] }' ```",
    "./raw_text_input_docs/launch-currency.md"
]