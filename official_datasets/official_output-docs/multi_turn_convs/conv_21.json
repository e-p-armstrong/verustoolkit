[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to assist you in understanding Verus. What's on your mind today?\n\n**User:**\nI'm trying to learn more about VerusIDs. What is a DelayLock on a VerusID, and how does it work?\n\n**AI Assistant:**\nA DelayLock on a VerusID is a feature that allows you to lock an identity and set a predetermined number of blocks that must pass before the identity can be unlocked and the funds can be spent again. This provides an additional layer of security and protection against unauthorized access to your funds.\n\n**User:**\nThat sounds like a great feature. How do I set a DelayLock on a VerusID?\n\n**AI Assistant:**\nTo set a DelayLock on a VerusID, you need to use the `setidentitytimelock` command with the `setunlockdelay` option. The `setunlockdelay` option specifies the number of blocks that must pass before the identity can be unlocked. For example, to set a DelayLock of 1 week (10,080 blocks), you can use the following command:\n\n```\njson run setidentitytimelock \"myid@\" '{ \"setunlockdelay\":10080 }'\n```\n\n**User:**\nWhat if I need to regain control of my identity? Can I revoke and recover a locked VerusID?\n\n**AI Assistant:**\nYes, you can always revoke and recover a locked VerusID. This provides an additional layer of security and flexibility in case you need to regain control of your identity.\n\n**User:**\nThat's great to know. How do I request an unlock of a DelayLocked VerusID?\n\n**AI Assistant:**\nTo request an unlock of a DelayLocked VerusID, you need to use the `setidentitytimelock` command with the `unlockatblock` option. The `unlockatblock` option specifies the block height at which the unlock should be processed. You can set `unlockatblock` to the current block height minus 1, or set it to 0 to request an unlock immediately. For example:\n\n```\njson run setidentitytimelock \"myid@\" '{ \"unlockatblock\":0 }'\n```\n\nNote that after requesting an unlock, you will need to wait for the predetermined number of blocks to pass before the identity is unlocked and the funds can be spent again.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is a DelayLock on a VerusID, and how does it work?",
            "A DelayLock on a VerusID is a feature that allows you to lock an identity and set a predetermined number of blocks that must pass before the identity can be unlocked and the funds can be spent again. This provides an additional layer of security and protection against unauthorized access to your funds.",
            "## Vault with DelayLock ![image-delaylock](/images/delaylock.png) Now let's put a DelayLock on a VerusID. This means that you lock the identity, and when you request the identity to be unlocked, a predetermined number of blocks have to pass before you can actually spend the funds again. ### Set the DelayLock Let's say you want to put a DelayLock of 1 week. 1 week is ``10,080`` blocks (1440x7). This will lock the identity, and when you request an unlock, it takes 1 week (or 10,080 blocks) before the funds can be spent again. - Under ``setunlockdelay`` you put ``10080`` - Change ``myid@`` with your own VerusID ``` json run setidentitytimelock \"myid@\" '{   \"setunlockdelay\":10080 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs. :::tip Revoke & Recover Remember: you can always revoke and recover a locked VerusID. ::: ### Request an unlock Above you locked a VerusID with a DelayLock. Now let's request an unlock. When an unlock has been requested you have to wait the predetermined number of blocks before you can spend the funds again. To request an unlock you need to know the blockheight of the blockchain. Under ``unlockatblock`` you can fill in whatever the current blockheight is minus 1. So if the blockheight is at 1,000,000 you can fill in ``999999`` or just ``0`` (recommended) to immediately request an unlock. ``` json run setidentitytimelock \"myid@\" '{   \"unlockatblock\":0 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs.",
            "./raw_text_input_docs/setup-vault-v2.md"
        ],
        [
            "How do I set a DelayLock on a VerusID?",
            "To set a DelayLock on a VerusID, you need to use the `setidentitytimelock` command with the `setunlockdelay` option. The `setunlockdelay` option specifies the number of blocks that must pass before the identity can be unlocked. For example, to set a DelayLock of 1 week (10,080 blocks), you can use the following command:\n\n```\njson run setidentitytimelock \"myid@\" '{ \"setunlockdelay\":10080 }'\n```",
            "## Vault with DelayLock ![image-delaylock](/images/delaylock.png) Now let's put a DelayLock on a VerusID. This means that you lock the identity, and when you request the identity to be unlocked, a predetermined number of blocks have to pass before you can actually spend the funds again. ### Set the DelayLock Let's say you want to put a DelayLock of 1 week. 1 week is ``10,080`` blocks (1440x7). This will lock the identity, and when you request an unlock, it takes 1 week (or 10,080 blocks) before the funds can be spent again. - Under ``setunlockdelay`` you put ``10080`` - Change ``myid@`` with your own VerusID ``` json run setidentitytimelock \"myid@\" '{   \"setunlockdelay\":10080 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs. :::tip Revoke & Recover Remember: you can always revoke and recover a locked VerusID. ::: ### Request an unlock Above you locked a VerusID with a DelayLock. Now let's request an unlock. When an unlock has been requested you have to wait the predetermined number of blocks before you can spend the funds again. To request an unlock you need to know the blockheight of the blockchain. Under ``unlockatblock`` you can fill in whatever the current blockheight is minus 1. So if the blockheight is at 1,000,000 you can fill in ``999999`` or just ``0`` (recommended) to immediately request an unlock. ``` json run setidentitytimelock \"myid@\" '{   \"unlockatblock\":0 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs.",
            "./raw_text_input_docs/setup-vault-v2.md"
        ],
        [
            "Can I revoke and recover a locked VerusID?",
            "Yes, you can always revoke and recover a locked VerusID. This provides an additional layer of security and flexibility in case you need to regain control of your identity.",
            "## Vault with DelayLock ![image-delaylock](/images/delaylock.png) Now let's put a DelayLock on a VerusID. This means that you lock the identity, and when you request the identity to be unlocked, a predetermined number of blocks have to pass before you can actually spend the funds again. ### Set the DelayLock Let's say you want to put a DelayLock of 1 week. 1 week is ``10,080`` blocks (1440x7). This will lock the identity, and when you request an unlock, it takes 1 week (or 10,080 blocks) before the funds can be spent again. - Under ``setunlockdelay`` you put ``10080`` - Change ``myid@`` with your own VerusID ``` json run setidentitytimelock \"myid@\" '{   \"setunlockdelay\":10080 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs. :::tip Revoke & Recover Remember: you can always revoke and recover a locked VerusID. ::: ### Request an unlock Above you locked a VerusID with a DelayLock. Now let's request an unlock. When an unlock has been requested you have to wait the predetermined number of blocks before you can spend the funds again. To request an unlock you need to know the blockheight of the blockchain. Under ``unlockatblock`` you can fill in whatever the current blockheight is minus 1. So if the blockheight is at 1,000,000 you can fill in ``999999`` or just ``0`` (recommended) to immediately request an unlock. ``` json run setidentitytimelock \"myid@\" '{   \"unlockatblock\":0 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs.",
            "./raw_text_input_docs/setup-vault-v2.md"
        ],
        [
            "How do I request an unlock of a DelayLocked VerusID?",
            "To request an unlock of a DelayLocked VerusID, you need to use the `setidentitytimelock` command with the `unlockatblock` option. The `unlockatblock` option specifies the block height at which the unlock should be processed. You can set `unlockatblock` to the current block height minus 1, or set it to 0 to request an unlock immediately. For example:\n\n```\njson run setidentitytimelock \"myid@\" '{ \"unlockatblock\":0 }'\n```\n\nNote that after requesting an unlock, you will need to wait for the predetermined number of blocks to pass before the identity is unlocked and the funds can be spent again.",
            "## Vault with DelayLock ![image-delaylock](/images/delaylock.png) Now let's put a DelayLock on a VerusID. This means that you lock the identity, and when you request the identity to be unlocked, a predetermined number of blocks have to pass before you can actually spend the funds again. ### Set the DelayLock Let's say you want to put a DelayLock of 1 week. 1 week is ``10,080`` blocks (1440x7). This will lock the identity, and when you request an unlock, it takes 1 week (or 10,080 blocks) before the funds can be spent again. - Under ``setunlockdelay`` you put ``10080`` - Change ``myid@`` with your own VerusID ``` json run setidentitytimelock \"myid@\" '{   \"setunlockdelay\":10080 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs. :::tip Revoke & Recover Remember: you can always revoke and recover a locked VerusID. ::: ### Request an unlock Above you locked a VerusID with a DelayLock. Now let's request an unlock. When an unlock has been requested you have to wait the predetermined number of blocks before you can spend the funds again. To request an unlock you need to know the blockheight of the blockchain. Under ``unlockatblock`` you can fill in whatever the current blockheight is minus 1. So if the blockheight is at 1,000,000 you can fill in ``999999`` or just ``0`` (recommended) to immediately request an unlock. ``` json run setidentitytimelock \"myid@\" '{   \"unlockatblock\":0 }' ``` You can copy and paste this code snippet into the commandline interface of Verus Desktop and edit the necessary inputs for your needs.",
            "./raw_text_input_docs/setup-vault-v2.md"
        ]
    ]
]