[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to get some information about the Verus server version and deprecation block height. Can you tell me what the `getdeprecationinfo` command does?\n\n**AI Assistant:**\nThe `getdeprecationinfo` command returns an object containing the current version and deprecation block height of the Verus server. This information is only available on the mainnet.\n\n**User:**\nThat's great! What kind of information does the object returned by the `getdeprecationinfo` command contain?\n\n**AI Assistant:**\nThe object returned by the `getdeprecationinfo` command includes three properties:\n\n1. `version`: a numeric value representing the server version.\n2. `subversion`: a string representing the server subversion string.\n3. `deprecationheight`: a numeric value representing the block height at which the current version will deprecate and shut down.\n\n**User:**\nSo, how can I actually use the `getdeprecationinfo` command to retrieve this information?\n\n**AI Assistant:**\nYou can use the `getdeprecationinfo` command in two ways:\n\n1. Using the Verus command-line interface: `verus getdeprecationinfo`\n2. Using the JSON-RPC API: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nBoth methods will return an object containing the current version and deprecation block height of the Verus server.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What information does the `getdeprecationinfo` command provide in Verus?",
            "The `getdeprecationinfo` command returns an object containing the current version and deprecation block height of the Verus server. This information is only available on the mainnet.",
            "getdeprecationinfo\nReturns an object containing current version and deprecation block height. Applicable only on mainnet.\n\nResult:\n{\n \"version\": xxxxx,           (numeric) the server version\n \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string\n \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down\n}\n\nExamples:\n> verus getdeprecationinfo \n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getdeprecationinfo"
        ],
        [
            "What are the properties included in the object returned by the `getdeprecationinfo` command?",
            "The object returned by the `getdeprecationinfo` command includes three properties:\n\n1. `version`: a numeric value representing the server version.\n2. `subversion`: a string representing the server subversion string.\n3. `deprecationheight`: a numeric value representing the block height at which the current version will deprecate and shut down.",
            "getdeprecationinfo\nReturns an object containing current version and deprecation block height. Applicable only on mainnet.\n\nResult:\n{\n \"version\": xxxxx,           (numeric) the server version\n \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string\n \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down\n}\n\nExamples:\n> verus getdeprecationinfo \n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getdeprecationinfo"
        ],
        [
            "How can I use the `getdeprecationinfo` command to retrieve information about the Verus server version and deprecation block height?",
            "You can use the `getdeprecationinfo` command in two ways:\n\n1. Using the Verus command-line interface: `verus getdeprecationinfo`\n2. Using the JSON-RPC API: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nBoth methods will return an object containing the current version and deprecation block height of the Verus server.",
            "getdeprecationinfo\nReturns an object containing current version and deprecation block height. Applicable only on mainnet.\n\nResult:\n{\n \"version\": xxxxx,           (numeric) the server version\n \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string\n \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down\n}\n\nExamples:\n> verus getdeprecationinfo \n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getdeprecationinfo"
        ]
    ]
]