[
    "## Conversation that answers the provided questions:\n**User:**\nI've been trying to understand how to manage my VerusID, specifically with timelocks. What is the purpose of the `setidentitytimelock` command in Verus?\n\n**AI Assistant:**\nThe `setidentitytimelock` command enables timelocking and unlocking of funds access for an on-chain VerusID. This allows users to control when an identity can spend funds on a specific blockchain. You can essentially set a lock on your identity to prevent accidental or unauthorized transactions.\n\n**User:**\nThat's really useful. I've seen a parameter called `setunlockdelay` when using the `setidentitytimelock` command. How does that work?\n\n**AI Assistant:**\nThe `setunlockdelay` parameter sets a time unlock delay on an identity. This means that after the identity has been unlocked, a specified number of blocks must pass before the identity can spend funds on the blockchain. It's like a safety net to ensure that even if your identity is unlocked, there's still a delay before any transactions can be made.\n\n**User:**\nI've also seen `unlockatblock` mentioned. What's the difference between using `unlockatblock` and `setunlockdelay` when setting a timelock on a VerusID?\n\n**AI Assistant:**\n`unlockatblock` sets an absolute block height at which the identity will be unlocked, whereas `setunlockdelay` sets a delay that starts counting down after the identity has been unlocked. `unlockatblock` can be used to either unlock an identity immediately or set a future unlock height, while `setunlockdelay` sets a delay that must pass before the identity can spend funds. Think of `unlockatblock` as setting a specific time for the lock to open, and `setunlockdelay` as setting a countdown timer after the lock is opened.\n\n**User:**\nOne last question. If I set a timelock on a VerusID using `setidentitytimelock`, will it affect the lock status of the same VerusID on other chains?\n\n**AI Assistant:**\nNo, setting a timelock on a VerusID using `setidentitytimelock` only affects the lock status of the VerusID on the specific blockchain it is being used on, and not on other chains, including VerusIDs with the same identity that have been exported to another chain. Each chain is independent, so you can manage your identity's lock status separately on each chain.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `setidentitytimelock` command in Verus?",
            "The `setidentitytimelock` command enables timelocking and unlocking of funds access for an on-chain VerusID. This allows users to control when an identity can spend funds on a specific blockchain.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ],
        [
            "How does the `setunlockdelay` parameter work when using the `setidentitytimelock` command?",
            "The `setunlockdelay` parameter sets a time unlock delay on an identity. This means that after the identity has been unlocked, a specified number of blocks must pass before the identity can spend funds on the blockchain.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ],
        [
            "What is the difference between using `unlockatblock` and `setunlockdelay` when setting a timelock on a VerusID?",
            "`unlockatblock` sets an absolute block height at which the identity will be unlocked, whereas `setunlockdelay` sets a delay that starts counting down after the identity has been unlocked. `unlockatblock` can be used to either unlock an identity immediately or set a future unlock height, while `setunlockdelay` sets a delay that must pass before the identity can spend funds.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ],
        [
            "Does setting a timelock on a VerusID using `setidentitytimelock` affect the lock status of the same VerusID on other chains?",
            "No, setting a timelock on a VerusID using `setidentitytimelock` only affects the lock status of the VerusID on the specific blockchain it is being used on, and not on other chains, including VerusIDs with the same identity that have been exported to another chain.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ]
    ]
]