[
    "How can I use the `registeridentity` command in Verus?",
    "You can use the `registeridentity` command in Verus by running the command with a JSON object as an argument, like this:\n```\nverus registeridentity jsonidregistration\n```\nAlternatively, you can use the `curl` command to send a JSON-RPC request to the Verus node, like this:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registeridentity\", \"params\": [jsonidregistration] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "registeridentity \"jsonidregistration\" (returntx) feeoffer sourceoffunds\n\nArguments\n{\n  \"txid\" : \"hexid\",     (hex)  the transaction ID of the name commitment for this ID name\n  \"namereservation\" :\n  {\n    \"name\": \"namestr\",   (string) the unique name in this commitment\n    \"salt\": \"hexstr\",   (hex)  salt used to hide the commitment\n    \"referral\": \"identityID\", (name@ or address) must be a valid ID to use as a referrer to receive a discount\n  },\n  \"identity\" :\n  {\n    \"name\": \"namestr\",   (string) the unique name for this identity\n    ...\n  }\n}\nreturntx              (bool, optional) default=false if true, return a transaction for additional signatures rather than committing it\nfeeoffer              (amount, optional) amount to offer miner/staker for the registration fee, if missing, uses standard price\nsourceoffunds           (addressorid, optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used\n\nResult:\n  transactionid          (hexstr)\n\nExamples:\n> verus registeridentity jsonidregistration\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registeridentity\", \"params\": [jsonidregistration] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/registeridentity"
]