[
    "How can I use the `getaddressutxos` command in Verus?",
    "You can use the `getaddressutxos` command in Verus by passing the required arguments, such as the address, and optional arguments, such as `chaininfo` and `verbosity`, to the command. You can do this using the Verus CLI or by making an RPC call using a tool like `curl`. Examples are provided in the documentation, including a Verus CLI example and a `curl` example.",
    "getaddressutxos\n\nReturns all unspent outputs for an address (requires addressindex to be enabled).\n\nArguments:\n{\n \"addresses\"\n  [\n   \"address\" (string) The base58check encoded address\n   ,...\n  ],\n \"chaininfo\"  (boolean) Include chain info with results\n \"friendlynames\" (boolean, optional default=false) Include additional array of friendly names keyed by currency i-addresses\n \"verbosity\"  (number) (default == 0), if 1, include output information for spends, including all reserve amounts and destinations\n}\n\nResult\n[\n {\n  \"address\" (string) The address base58check encoded\n  \"txid\" (string) The output txid\n  \"height\" (number) The block height\n  \"outputIndex\" (number) The output index\n  \"script\" (strin) The script hex encoded\n  \"satoshis\" (number) The number of satoshis of the output\n }\n]\n\nExamples:\n> verus getaddressutxos '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressutxos\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getaddressutxos"
]