[
    "What information does the `kvsearch` command return when searching for a key?",
    "The `kvsearch` command returns a JSON object with the following information:\n\n* The chain the key is stored on (`coin`)\n* The current height of the chain (`currentheight`)\n* The key itself (`key`)\n* The length of the key (`keylen`)\n* The owner of the key (`owner`)\n* The height at which the key was stored (`height`)\n* The height at which the key will expire (`expiration`)\n* A flag indicating if the key was created with a password (`flags`)\n* The stored value (`value`)\n* The size of the stored value (`valuesize`)",
    "kvsearch key\n\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.\n\nArguments:\n1. key           (string, required) search the chain for this key\n\nResult:\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,   (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,      (string) length of the key \n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key \n \"height\": xxxxx,      (numeric) height the key was stored at\n \"expiration\": xxxxx,    (numeric) height the key will expire\n \"flags\": x         (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx     (string) amount of characters stored\n}\n\nExamples:\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/kvsearch"
]