[
    "What is the caution to keep in mind when using `getcurrencybalance` with addresses that only have an incoming viewing key?",
    "When using `getcurrencybalance` with addresses that only have an incoming viewing key, the returned balance may be larger than the actual balance, because spends cannot be detected.",
    "getcurrencybalance \"address\" ( minconf ) ( friendlynames ) ( includeshared )\n\nReturns the balance in all currencies of a taddr or zaddr belonging to the node's wallet.\n\nCAUTION: If the wallet has only an incoming viewing key for this address, then spends cannot be\ndetected, and so the returned balance may be larger than the actual balance.\n\nArguments:\n1. \"address\"   (string) The selected address. It may be a transparent or private address and include z*, R*, and i* wildcards.\n2. minconf     (numeric, optional, default=1) Only include transactions confirmed at least this many times.\n3. friendlynames  (boolean, optional, default=true) use friendly names instead of i-addresses.\n4. includeshared  (bool, optional, default=false) Include outputs that can also be spent by others\n\nResult:\namount       (numeric) The total amount in VRSC received for this address.\n\nExamples:\n\nThe total amount received by address \"myaddress\"\n> verus getcurrencybalance \"myaddress\"\n\nThe total amount received by address \"myaddress\" at least 5 blocks confirmed\n> verus getcurrencybalance \"myaddress\" 5\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencybalance\", \"params\": [\"myaddress\", 5] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getcurrencybalance"
]