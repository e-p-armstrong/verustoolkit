[
    [
        [
            "What does the `z_exportkey` command do in Verus?",
            "The `z_exportkey` command reveals the private key (zkey) corresponding to a given zaddr. This private key can then be used with the `z_importkey` command.",
            "z_exportkey \"zaddr\" (outputashex)\n\nReveals the zkey corresponding to 'zaddr'.\nThen the z_importkey can be used with this output\n\nArguments:\n1. \"zaddr\"  (string, required) The zaddr for the private key\n2. \"outputashex\" (boolean, optional, default=false) If true, output key data as hex bytes\n\nResult:\n\"key\"         (string) The private key\n\nExamples:\n> verus z_exportkey \"myaddress\"\n> verus z_importkey \"mykey\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_exportkey\", \"params\": [\"myaddress\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_exportkey"
        ],
        [
            "What are the arguments required for the `z_exportkey` command?",
            "The `z_exportkey` command requires two arguments:\n\n1. `zaddr` (string, required): The zaddr for which you want to export the private key.\n2. `outputashex` (boolean, optional, default=false): A flag indicating whether to output the key data as hex bytes. If set to true, the output will be in hex format.",
            "z_exportkey \"zaddr\" (outputashex)\n\nReveals the zkey corresponding to 'zaddr'.\nThen the z_importkey can be used with this output\n\nArguments:\n1. \"zaddr\"  (string, required) The zaddr for the private key\n2. \"outputashex\" (boolean, optional, default=false) If true, output key data as hex bytes\n\nResult:\n\"key\"         (string) The private key\n\nExamples:\n> verus z_exportkey \"myaddress\"\n> verus z_importkey \"mykey\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_exportkey\", \"params\": [\"myaddress\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_exportkey"
        ],
        [
            "What is the result of running the `z_exportkey` command?",
            "The result of running the `z_exportkey` command is a string representing the private key (zkey) corresponding to the given zaddr.",
            "z_exportkey \"zaddr\" (outputashex)\n\nReveals the zkey corresponding to 'zaddr'.\nThen the z_importkey can be used with this output\n\nArguments:\n1. \"zaddr\"  (string, required) The zaddr for the private key\n2. \"outputashex\" (boolean, optional, default=false) If true, output key data as hex bytes\n\nResult:\n\"key\"         (string) The private key\n\nExamples:\n> verus z_exportkey \"myaddress\"\n> verus z_importkey \"mykey\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_exportkey\", \"params\": [\"myaddress\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_exportkey"
        ],
        [
            "How can I use the `z_exportkey` command in Verus?",
            "You can use the `z_exportkey` command in Verus by running it from the command line, providing the zaddr as an argument, like this: `verus z_exportkey \"myaddress\"`. You can also use it with the `curl` command, as shown in the example, to export the private key remotely.",
            "z_exportkey \"zaddr\" (outputashex)\n\nReveals the zkey corresponding to 'zaddr'.\nThen the z_importkey can be used with this output\n\nArguments:\n1. \"zaddr\"  (string, required) The zaddr for the private key\n2. \"outputashex\" (boolean, optional, default=false) If true, output key data as hex bytes\n\nResult:\n\"key\"         (string) The private key\n\nExamples:\n> verus z_exportkey \"myaddress\"\n> verus z_importkey \"mykey\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_exportkey\", \"params\": [\"myaddress\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_exportkey"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d6193596-e505-4260-98cc-8ed9e15c78cd"
]