[
    [
        [
            "What is the purpose of the `getnotarizationdata` command in Verus?",
            "The `getnotarizationdata` command is used to retrieve the latest PBaaS notarization data for a specified currency ID.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence)\n\nReturns the latest PBaaS notarization data for the specifed currencyid.\n\nArguments\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data\n1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n\nResult:\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n\nExamples:\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "What arguments are required to use the `getnotarizationdata` command?",
            "The `getnotarizationdata` command requires one argument, `currencyid`, which is a string representing the hex-encoded ID or string name of the currency for which to retrieve notarization data.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence)\n\nReturns the latest PBaaS notarization data for the specifed currencyid.\n\nArguments\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data\n1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n\nResult:\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n\nExamples:\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "What is the purpose of the `getevidence` argument in the `getnotarizationdata` command?",
            "The `getevidence` argument is an optional boolean argument that, if set to true, returns notarization evidence in addition to other notarization data.",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence)\n\nReturns the latest PBaaS notarization data for the specifed currencyid.\n\nArguments\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data\n1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n\nResult:\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n\nExamples:\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "What is the format of the result returned by the `getnotarizationdata` command?",
            "The result returned by the `getnotarizationdata` command is a JSON object that includes the notarization protocol version, among other information. The format of the result is:\n```\n{\n  \"version\" : n,         (numeric) The notarization protocol version\n}\n```",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence)\n\nReturns the latest PBaaS notarization data for the specifed currencyid.\n\nArguments\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data\n1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n\nResult:\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n\nExamples:\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ],
        [
            "How can I use the `getnotarizationdata` command to retrieve notarization data for a specific currency ID?",
            "You can use the `getnotarizationdata` command to retrieve notarization data for a specific currency ID by running the following command:\n```\nverus getnotarizationdata \"currencyid\"\n```\nAlternatively, you can use the `curl` command to send a JSON RPC request to the Verus node, like this:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "getnotarizationdata \"currencynameorid\" (getevidence) (separatecounterevidence)\n\nReturns the latest PBaaS notarization data for the specifed currencyid.\n\nArguments\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\"        (bool, optional)  if true, returns notarization evidence as well as other data\n1. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n\nResult:\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n\nExamples:\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnotarizationdata"
        ]
    ],
    "will",
    "be",
    "replaced",
    "04bc845f-c1c3-4d6d-bb54-4a8e34251395"
]