[
    [
        [
            "What does the `validateaddress` command do in Verus?",
            "The `validateaddress` command returns information about a given transparent address in Verus. It takes a single argument, the address to be validated, and returns a JSON object with various properties about the address, such as whether it is valid, the scriptPubKey, and whether it is a script or compressed.",
            "validateaddress \"address\"\n\nReturn information about the given transparent address.\n\nArguments:\n1. \"address\"   (string, required) The transparent address to validate\n\nResult:\n{\n \"isvalid\" : true|false,     (boolean) If the address is valid or not. If not, this is the only property returned.\n \"address\" : \"verusaddress\",  (string) The Verus or PBaaS address to be validated\n \"scriptPubKey\" : \"hex\",    (string) The hex encoded scriptPubKey generated by the address\n \"ismine\" : true|false,     (boolean) If the address is yours or not\n \"isscript\" : true|false,    (boolean) If the key is a script\n \"pubkey\" : \"publickeyhex\",  (string) The hex value of the raw public key\n \"iscompressed\" : true|false,  (boolean) If the address is compressed\n \"account\" : \"account\"     (string) DEPRECATED. The account associated with the address, \"\" is the default account\n}\n\nExamples:\n> verus validateaddress \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"validateaddress\", \"params\": [\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/validateaddress"
        ],
        [
            "What properties are returned by the `validateaddress` command in Verus?",
            "The `validateaddress` command returns a JSON object with the following properties:\n\n* `isvalid`: a boolean indicating whether the address is valid or not\n* `address`: the Verus or PBaaS address being validated\n* `scriptPubKey`: the hex encoded scriptPubKey generated by the address\n* `ismine`: a boolean indicating whether the address is owned by the user or not\n* `isscript`: a boolean indicating whether the key is a script\n* `pubkey`: the hex value of the raw public key\n* `iscompressed`: a boolean indicating whether the address is compressed\n* `account`: the account associated with the address (DEPRECATED)",
            "validateaddress \"address\"\n\nReturn information about the given transparent address.\n\nArguments:\n1. \"address\"   (string, required) The transparent address to validate\n\nResult:\n{\n \"isvalid\" : true|false,     (boolean) If the address is valid or not. If not, this is the only property returned.\n \"address\" : \"verusaddress\",  (string) The Verus or PBaaS address to be validated\n \"scriptPubKey\" : \"hex\",    (string) The hex encoded scriptPubKey generated by the address\n \"ismine\" : true|false,     (boolean) If the address is yours or not\n \"isscript\" : true|false,    (boolean) If the key is a script\n \"pubkey\" : \"publickeyhex\",  (string) The hex value of the raw public key\n \"iscompressed\" : true|false,  (boolean) If the address is compressed\n \"account\" : \"account\"     (string) DEPRECATED. The account associated with the address, \"\" is the default account\n}\n\nExamples:\n> verus validateaddress \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"validateaddress\", \"params\": [\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/validateaddress"
        ],
        [
            "How can I use the `validateaddress` command in Verus?",
            "You can use the `validateaddress` command in Verus by running the command `validateaddress \"address\"` in the Verus console, replacing `\"address\"` with the actual address you want to validate. You can also use the command through the JSON-RPC API by sending a request with the method `validateaddress` and the parameter being the address to be validated.",
            "validateaddress \"address\"\n\nReturn information about the given transparent address.\n\nArguments:\n1. \"address\"   (string, required) The transparent address to validate\n\nResult:\n{\n \"isvalid\" : true|false,     (boolean) If the address is valid or not. If not, this is the only property returned.\n \"address\" : \"verusaddress\",  (string) The Verus or PBaaS address to be validated\n \"scriptPubKey\" : \"hex\",    (string) The hex encoded scriptPubKey generated by the address\n \"ismine\" : true|false,     (boolean) If the address is yours or not\n \"isscript\" : true|false,    (boolean) If the key is a script\n \"pubkey\" : \"publickeyhex\",  (string) The hex value of the raw public key\n \"iscompressed\" : true|false,  (boolean) If the address is compressed\n \"account\" : \"account\"     (string) DEPRECATED. The account associated with the address, \"\" is the default account\n}\n\nExamples:\n> verus validateaddress \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"validateaddress\", \"params\": [\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/validateaddress"
        ]
    ],
    "will",
    "be",
    "replaced",
    "29e4593e-2322-480c-8ac2-78b78c53161f"
]