[
    "How can I use the `kvsearch` command to search for a key on an asset chain?",
    "You can use the `kvsearch` command to search for a key on an asset chain by running the command with the key as an argument, like this: `verus kvsearch examplekey`. Alternatively, you can use the `curl` command to send a JSON-RPC request to the Verus node, like this: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
    "kvsearch key\n\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.\n\nArguments:\n1. key           (string, required) search the chain for this key\n\nResult:\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,   (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,      (string) length of the key \n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key \n \"height\": xxxxx,      (numeric) height the key was stored at\n \"expiration\": xxxxx,    (numeric) height the key will expire\n \"flags\": x         (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx     (string) amount of characters stored\n}\n\nExamples:\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/kvsearch"
]