[
    "What is the purpose of the `kvupdate` command in Verus?",
    "The `kvupdate` command in Verus is used to store a key-value pair on an asset chain. This feature allows you to store a value associated with a specific key, which can be retrieved later.",
    "kvupdate key \"value\" days passphrase\n\nStore a key value. This feature is only available for asset chains.\n\nArguments:\n1. key           (string, required) key\n2. \"value\"        (string, required) value\n3. days           (numeric, required) amount of days(1440 blocks/day) before the key expires. Minimum 1 day\n4. passphrase        (string, optional) passphrase required to update this key\n\nResult:\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"height\": xxxxx,      (numeric) height the key was stored at\n \"expiration\": xxxxx,    (numeric) height the key will expire\n \"flags\": x,         (string) amount of days the key will be stored \n \"key\": \"xxxxx\",      (numeric) stored key\n \"keylen\": xxxxx,      (numeric) length of the key\n \"value\": \"xxxxx\"     (numeric) stored value\n \"valuesize\": xxxxx,     (string) length of the stored value\n \"fee\": xxxxx        (string) transaction fee paid to store the key\n \"txid\": \"xxxxx\"      (string) transaction id\n}\n\nExamples:\n> verus kvupdate examplekey \"examplevalue\" 2 examplepassphrase\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvupdate\", \"params\": [examplekey \"examplevalue\" 2 examplepassphrase] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/kvupdate"
]