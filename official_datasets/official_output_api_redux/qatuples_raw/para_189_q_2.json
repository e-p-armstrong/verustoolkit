[
    "How can I verify a signature created with the `signmessage` command?",
    "You can verify a signature using the `verifymessage` command, which takes three arguments: the t-addr or identity that signed the message, the signature to verify, and the original message. This command checks if the signature is valid for the given message and t-addr or identity.",
    "signmessage \"address or identity\" \"message\" \"currentsig\"\n\nSign a message with the private key of a t-addr or the authorities present in this wallet for an identity\n\nArguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing.\n2. \"message\"          (string, required) The message to create a signature of.\n2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID\n\nResult:\n{\n \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)\n \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful\n}\n\nExamples:\n\nUnlock the wallet for 30 seconds\n> verus walletpassphrase \"mypassphrase\" 30\n\nCreate the signature\n> verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\"\n\nVerify the signature\n> verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\"\n\nAs json rpc\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/signmessage"
]