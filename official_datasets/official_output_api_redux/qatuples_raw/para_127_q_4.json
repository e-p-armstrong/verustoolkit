[
    "What is the format of the output returned by the `signdata` command in Verus?",
    "The output returned by the `signdata` command in Verus is a JSON object that contains several fields, including:\n\n* `hash`: the hash of the message or null\n* `hashes`: an array of hashes for an MMR (Merkle Mountain Range)\n* `mmrroot`: the root hash of the MMR (only returned when an array is passed for signing)\n* `vdxfkeys` and `vdxfkeynames`: arrays of VDXF keys and their corresponding names\n* `boundhashes`: an array of bound hashes\n* `hashtype`: the type of hash used (e.g. sha256, sha256D, blake2b, keccak256)\n* `signature`: the aggregate signature of the message or mmrroot encoded in base64",
    "Result:\n{\n \"hash\":\"hexhash\"     (string) The hash of the message or null and returns \"hashes\", an array of hashes for an MMR\n \"hashes\":[\"hexhash\"]   (array) Array of hashes for an MMR, alternate to \"hash\"\n \"mmrroot\":\"hexstr\"    (string) Only returned when passed an array for signing root hash of the merkle mountain range of the objects signed\n \"vdxfkeys\":[\"vdxfkey i-address\", ...],\n \"vdxfkeynames\":[\"vdxfkeyname, object for getvdxfid API, or friendly name ID -- no i-addresses\", ...],\n \"boundhashes\":[\"hexhash\", ...],\n \"hashtype\": \"sha256\" | \"sha256D\" | \"blake2b\" | \"keccak256\"\n \"signature\":\"base64sig\" (string) The aggregate signature of the message or mmrroot encoded in base 64 if all or partial signing successful for MMR, it is of root\n \"\"}\n\nExamples:\n\nCreate the signature\n> verus signdata '{\"address\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'\n\nVerify the signature\n> verus verifysignature '{\"address\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\", \"signature\":\"base64sig\"}'\n\nAs json rpc\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signdata\", \"params\": ['{\"address\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/signdata"
]