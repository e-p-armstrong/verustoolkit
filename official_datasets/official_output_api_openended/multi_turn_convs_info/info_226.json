[
    [
        [
            "What is the purpose of the `definecurrency` command in Verus, and how does it work?",
            "The `definecurrency` command in Verus is used to create a new blockchain currency or token. This command can be used to define an independent blockchain or a token on an existing blockchain. The command requires two arguments: the first defines the properties of the currency, and the second defines the properties of the fractional gateway.\n\nWhen you run `definecurrency`, you must specify the name of the currency, as well as other properties such as the nodes that will be part of the currency's network. The command also spends the identity after which the currency is named and sets a bit indicating that it has a currently active blockchain in its name.\n\nTo create a currency, the identity it is named after must be minted on the blockchain on which the currency is created. Once a currency is activated for an identity name, the same symbol may not be reused for another currency or blockchain, even if the identity is transferred, revoked, or recovered, unless there is an end block specified and the currency or blockchain has deactivated as of that end block.\n\nThe `definecurrency` command also requires that all funds needed to start the currency and for initial conversion amounts must be available to spend from the identity with the same name and ID as the currency being defined.\n\nThe command allows you to specify various options for the currency, such as whether it is fractional, ID-restricted, or a token. You can also specify whether the currency requires ID referrals, is reserved, or is a PBaaS chain.\n\nHere is an example of the command:\n```\ndefinecurrency '{\"name\": \"coinortokenname\",..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}'\\\n        '({\"name\": \"fractionalgatewayname\",..., })' ({\"name\": \"reserveonename\",..., })...\n```\nIn this example, the first argument defines the properties of the currency, the second argument defines the properties of the fractional gateway, and the third argument defines the properties of the reserve.",
            "definecurrency '{\"name\": \"coinortokenname\", ..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}'\\\n        '({\"name\": \"fractionalgatewayname\", ..., })' ({\"name\": \"reserveonename\", ..., }) ...This defines a blockchain currency, either as an independent blockchain, or as a token on this blockchain. It also spends\nthe identity after which this currency is named and sets a bit indicating that it has a currently active blockchain in its name.To create a currency of any kind, the identity it is named after must be minted on the blockchain on which the currency is created.\nOnce a currency is activated for an identity name, the same symbol may not be reused for another currency or blockchain, even\nif the identity is transferred, revoked or recovered, unless there is an endblock specified and the currency or blockchain has\ndeactivated as of that end block.All funds to start the currency and for initial conversion amounts must be available to spend from the identity with the same\nname and ID as the currency being defined.Arguments\n   {\n     \"options\" : n,         (int,  optional) bits (in hexadecimal):\n                               1 = FRACTIONAL\n                               2 = IDRESTRICTED\n                               4 = IDSTAKING\n                               8 = IDREFERRALS\n                               0x10 = IDREFERRALSREQUIRED\n                               0x20 = TOKEN\n                               0x40 = RESERVED\n                               0x100 = IS_PBAAS_CHAIN",
            "./raw_text_input_api_text/definecurrency"
        ]
    ],
    "will",
    "be",
    "replaced",
    "59988196-6a77-4848-b56e-b69d2da2c474"
]