[
    [
        [
            "What does the `getsaplingtree` command do in Verus, and how can you use it to retrieve information about a light wallet Sapling tree state?",
            "The `getsaplingtree` command in Verus is used to retrieve the entries for a light wallet Sapling tree state. This command can be used to fetch the Sapling tree state at a specific height or within a range of heights. If no height or range is specified, the command returns the latest currency state and height.\n\nThe command takes an optional argument, which can be a single integer `n`, a range `m,n`, or a range with a step `m,n,o`. This argument specifies the height or range of heights at which to retrieve the Sapling tree state.\n\nThe result of the `getsaplingtree` command is a JSON array containing objects with information about the Sapling tree state. Each object in the array has the following properties:\n\n* `network`: the network identifier, which is \"VRSC\" for the Verus network.\n* `height`: the block height at which the Sapling tree state was retrieved.\n* `hash`: the hash of the block at the specified height.\n* `time`: the timestamp of the block at the specified height.\n* `tree`: the hexadecimal representation of the Sapling tree state.\n\nYou can use the `getsaplingtree` command in the Verus command-line interface or through an RPC call using a tool like `curl`. The examples provided in the text demonstrate how to use the command in both ways.\n\nFor example, to retrieve the Sapling tree state at a specific height, you can use the following command:\n```\nverus getsaplingtree <height>\n```\nAlternatively, you can use `curl` to make an RPC call to the Verus daemon:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [<height>] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `<height>` with the desired block height, and `<myusername>` with your Verus daemon username.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ]
    ],
    "will",
    "be",
    "replaced",
    "6c01d7e5-d509-4494-a7c5-c8d81269d72c"
]