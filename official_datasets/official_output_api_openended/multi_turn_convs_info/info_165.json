[
    [
        [
            "How does the `createmultisig` command in Verus work, and what are the required arguments and results?",
            "The `createmultisig` command in Verus is used to create a multi-signature address that requires a certain number of signatures out of a specified set of keys or addresses to authorize a transaction. This command takes two required arguments: `nrequired` and `keys`.\n\n**Arguments:**\n\n* `nrequired`: This is a numeric value that specifies the number of required signatures out of the total number of keys or addresses. For example, if you set `nrequired` to 2 and provide 3 keys, then 2 out of the 3 keys must sign a transaction for it to be valid.\n* `keys`: This is a JSON array of strings that contains the Komodo addresses or hex-encoded public keys that will be used to create the multi-signature address. Each key in the array is a string that represents a Komodo address or a hex-encoded public key.\n\n**Result:**\nThe `createmultisig` command returns a JSON object with two properties: `address` and `redeemScript`.\n\n* `address`: This is a string that represents the new multi-signature address that has been created.\n* `redeemScript`: This is a string that represents the hex-encoded redemption script that is associated with the multi-signature address.\n\n**Examples:**\nHere are some examples of how to use the `createmultisig` command:\n\n* To create a multi-signature address from 2 addresses, you can use the following command:\n```\nverus createmultisig 2 \"[\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\",\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\"]\"\n```\n* To create a multi-signature address using a JSON RPC call, you can use the following command:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createmultisig\", \"params\": [2, \"[\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\",\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nNote that in both examples, the `nrequired` argument is set to 2, which means that 2 out of the 2 provided keys must sign a transaction for it to be valid.",
            "createmultisig nrequired [\"key\",...]\n\nCreates a multi-signature address with n signature of m keys required.\nIt returns a json object with the address and redeemScript.\n\nArguments:\n1. nrequired   (numeric, required) The number of required signatures out of the n keys or addresses.\n2. \"keys\"    (string, required) A json array of keys which are Komodo addresses or hex-encoded public keys\n   [\n    \"key\"  (string) Komodo address or hex-encoded public key\n    ,...\n   ]\n\nResult:\n{\n \"address\":\"multisigaddress\", (string) The value of the new multisig address.\n \"redeemScript\":\"script\"    (string) The string value of the hex-encoded redemption script.\n}\n\nExamples:\n\nCreate a multisig address from 2 addresses\n> verus createmultisig 2 \"[\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\",\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\"]\"\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createmultisig\", \"params\": [2, \"[\"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\",\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createmultisig"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9e78b8ff-0755-43fb-9e22-db21868fd5fa"
]