[
    [
        [
            "What is the purpose of the `getnetworkhashps` command in Verus, and how does it estimate the network's solution rate?",
            "The `getnetworkhashps` command in Verus is a deprecated command that has been left for backwards-compatibility purposes. It is recommended to use `getnetworksolps` instead. This command estimates the network's solution rate, specifically the number of solutions per second, based on the last `n` blocks.\n\nThe command takes two optional arguments: `blocks` and `height`. The `blocks` argument specifies the number of blocks to use for the estimation, with a default value of 120. If set to -1, the command will use blocks over the difficulty averaging window. The `height` argument estimates the network speed at the time when a certain block was found, with a default value of -1.\n\nThe result of the command is a numeric value representing the estimated solutions per second.\n\nFor example, you can use the command without any arguments to get the estimated network solution rate based on the last 120 blocks:\n```\nverus getnetworkhashps\n```\nAlternatively, you can specify the number of blocks or the height to estimate the network speed at a specific point in time.",
            "getnetworkhashps ( blocks height )\n\nDEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.\n\nReturns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.\n\nArguments:\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n\nResult:\nx       (numeric) Solutions per second estimated\n\nExamples:\n> verus getnetworkhashps \n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getnetworkhashps"
        ]
    ],
    "will",
    "be",
    "replaced",
    "1f6c3121-cf5b-4b66-84d8-a979accb9244"
]