[
    "What is the purpose of the `submitimports` command in Verus, and how does it work?",
    "The `submitimports` command in Verus is used to submit a set of exports from another system to post to the VRSC network. This command allows for the transfer of data from an external system to the Verus network.\n\nThe command accepts a set of exports in the form of a JSON object, which contains several key pieces of information:\n\n1. `sourcesystemid`: The ID of the system from which the exports are coming.\n2. `notarizationtxid`: The transaction ID of the notarization transaction.\n3. `notarizationtxoutnum`: The output number of the notarization transaction.\n4. `exports`: An array of export objects, each containing:\n   * `height`: The block height of the export.\n   * `txid`: The transaction ID of the export.\n   * `txoutnum`: The output number of the export.\n   * `partialtransactionproof`: A partial proof of the transaction.\n   * `transfers`: An array of transfer objects, each containing the details of a transfer.\n\nWhen the `submitimports` command is executed, it posts the exports to the VRSC network, allowing the data to be transferred from the external system to the Verus network.\n\nThe command returns an array of objects, each containing the currency ID, transaction ID, and output number of the imported transactions.\n\nThe `submitimports` command can be executed using the Verus command-line interface or through a JSON-RPC call using the `curl` command.",
    "submitimports '{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n,\n\"exports\":[{\"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \n\"transfers\": [{transfer1}, {transfer2},...]}, ...]}'\n\nAccepts a set of exports from another system to post to the VRSC network.\n\nArguments\n {\n  \"sourcesystemid\":\"systemid\"    ()\n  \"notarizationtxid\":\"txid\"     ()\n  \"notarizationtxoutnum\":n       ()\n  \"exports\": [{\n    \"height\": n,\n    \"txid\": \"hexid\",\n    \"txoutnum\": n,\n    \"partialtransactionproof\": \"hexstr\",\n    \"transfers\": [{transfer1}, {transfer2},...]\n  }, ...]\n }\n\nResult:\n [{\n   \"currency\": \"currencyid\"\n   \"txid\": \"hexid\",\n   \"txoutnum\": n\n }, ...]\n\nExamples:\n> verus submitimports {\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitimports\", \"params\": [{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/submitimports"
]