[
    "What does the `listidentities` command do in Verus, and how can you customize its output using optional arguments?",
    "The `listidentities` command in Verus is used to retrieve a list of identities associated with your Verus wallet. By default, this command will return a list of identities for which you have the ability to spend or authorize transactions.\n\nThe command can be customized using three optional arguments: `includecanspend`, `includecansign`, and `includewatchonly`. These arguments allow you to filter the list of identities based on your level of control over each identity.\n\n* `includecanspend` is a boolean argument that defaults to `true`. If set to `true`, the command will include identities for which you have the ability to spend or authorize transactions.\n* `includecansign` is a boolean argument that defaults to `true`. If set to `true`, the command will include identities for which you can only sign transactions, but not spend or authorize them.\n* `includewatchonly` is a boolean argument that defaults to `false`. If set to `true`, the command will include identities that you can neither spend nor sign for, but are either watched or are co-signers with you.\n\nBy using these optional arguments, you can customize the output of the `listidentities` command to suit your needs. For example, if you only want to see identities for which you have the ability to spend or authorize transactions, you can use the command `verus listidentities true`. If you want to see all identities associated with your wallet, including those that you can only sign for or watch, you can use the command `verus listidentities true true true`.",
    "listidentities (includecanspend) (includecansign) (includewatchonly)\n\nArguments\n  \"includecanspend\"  (bool, optional, default=true)  Include identities for which we can spend/authorize\n  \"includecansign\"   (bool, optional, default=true)  Include identities that we can only sign for but not spend\n  \"includewatchonly\"  (bool, optional, default=false)  Include identities that we can neither sign nor spend, but are either watched or are co-signers with us\n\nResult:\n\nExamples:\n> verus listidentities true\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listidentities\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/listidentities"
]