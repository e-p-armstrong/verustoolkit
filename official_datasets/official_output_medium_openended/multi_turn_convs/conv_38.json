[
    "## Conversation that answers the provided questions:\n**User:**\nI've been trying to understand the differences between Verus PBaaS and Ethereum proof protocols, and how they impact cross-chain communication and notarization. Can you help me out?\n\n**AI Assistant:**\nVerus PBaaS and Ethereum have different proof protocols that enable interchain communication and notarization. Currently, Verus PBaaS supports two proof models: Verus PBaaS Merkle Mountain Range proofs, which assume the Verus Proof of Power protocol, and Ethereum PATRICIA Trie proofs that enable interfacing between any PBaaS chain and any Ethereum VM + PATRICIA Trie compatible network.\n\nThe main difference between Verus PBaaS and Ethereum proof protocols lies in their notarization finalization mechanisms. Verus PBaaS is the only interface that fully supports notarization finalization using full auto-notarization, which means that validators can finalize a notarization and submit it to the alternate chain without relying on witness signatures. In contrast, Ethereum's proof protocols, such as notary-confirm, require witness signatures and are more similar to notary-confirm with additional revocation safeguards.\n\nAuto-notarization of one PBaaS chain on another (PBAAS_AN) differs from Ethereum interface or notary-confirm (NC) in that it allows validators to finalize a notarization and submit it to the alternate chain, provided there are enough validated blocks, both mined and staked, as well as validator-agreed notarizations. If there are disagreements about the correct notarization, the process becomes an on-chain proof competition, requiring each party to represent a genuine notarization.\n\nIn the future, as new proof algorithms evolve for Ethereum, it may be possible to update the protocols to remove dependence on witnesses over time, enabling trustworthy cross-chain proof models in both directions that are both timely and do not need to be backed by witness signatures. Additionally, the Ethereum bridge can be designed to allow the network itself to permissionlessly propose contract upgrades, which can be voted on by Verus validators, enabling the possibility of changing the cross-chain proof conditions over time.\n\nDo you have any follow-up questions about the differences between Verus PBaaS and Ethereum proof protocols, or how they impact cross-chain communication and notarization?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the differences between Verus PBaaS and Ethereum proof protocols, and how do they impact cross-chain communication and notarization?",
            "Verus PBaaS and Ethereum have different proof protocols that enable interchain communication and notarization. Currently, Verus PBaaS supports two proof models: Verus PBaaS Merkle Mountain Range proofs, which assume the Verus Proof of Power protocol, and Ethereum PATRICIA Trie proofs that enable interfacing between any PBaaS chain and any Ethereum VM + PATRICIA Trie compatible network.\n\nThe main difference between Verus PBaaS and Ethereum proof protocols lies in their notarization finalization mechanisms. Verus PBaaS is the only interface that fully supports notarization finalization using full auto-notarization, which means that validators can finalize a notarization and submit it to the alternate chain without relying on witness signatures. In contrast, Ethereum's proof protocols, such as notary-confirm, require witness signatures and are more similar to notary-confirm with additional revocation safeguards.\n\nAuto-notarization of one PBaaS chain on another (PBAAS_AN) differs from Ethereum interface or notary-confirm (NC) in that it allows validators to finalize a notarization and submit it to the alternate chain, provided there are enough validated blocks, both mined and staked, as well as validator-agreed notarizations. If there are disagreements about the correct notarization, the process becomes an on-chain proof competition, requiring each party to represent a genuine notarization.\n\nIn the future, as new proof algorithms evolve for Ethereum, it may be possible to update the protocols to remove dependence on witnesses over time, enabling trustworthy cross-chain proof models in both directions that are both timely and do not need to be backed by witness signatures. Additionally, the Ethereum bridge can be designed to allow the network itself to permissionlessly propose contract upgrades, which can be voted on by Verus validators, enabling the possibility of changing the cross-chain proof conditions over time.",
            "or gateway.\nCurrently, Verus VIP supports 2 proof models for interchain communication, the Verus PBaaS Merkle Mountain Range proofs, which also assume the Verus Proof of Power protocol, and Ethereum PATRICIA Trie proofs that enable interfacing with VIP between any PBaaS chain, and any Ethereum VM + PATRICIA Trie compatible network.\nSince Verus PBaaS is the only interface to fully support notarization finalization using full auto-notarization, it is important to understand the differences between PBaaS and Ethereum proof protocols. At present, there is no objective proof protocol implementation for Ethereum that is known and implemented, which can operate without dependence on some set of notary witnesses. At this time, auto-notarization, when applied to Ethereum, is more similar to notary-confirm, with additional revocation safeguards that could address more edge-case threat models.\nAs new proof algorithms evolve for Ethereum, enabling trustworthy cross-chain proof models in both directions that are both timely and do not need to be backed by witness signatures, it will be possible to update the protocols to remove dependence on witnesses over time. To ensure maximum decentralization on the Ethereum bridge, the network itself can permissionlessly propose contract upgrades, and if affirmatively voted on by Verus validators, an upgrade and new contracts can eventually change the cross-chain proof conditions.\nAuto-notarization of one PBaaS chain on another (PBAAS_AN) differs from and Ethereum interface or notary-confirm (NC) in that, if there are enough validated blocks, both mined and staked, as well as validator agreed notarizations, PBAAS_AN allows validators to finalize a notarization and submit it to the alternate chain. If there are disagreements about the correct notarization, the process becomes an on-chain proof competition, requiring each party to represent a g",
            "./raw_text_input_medium/Verus Internet Protocol (VIP)\u200a\u2014\u200aProvable, Decentralized Cross-chain Communication-2023-08-24 10:11:22"
        ]
    ]
]