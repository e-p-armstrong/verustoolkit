[
    "## Conversation that answers the provided questions:\n**User:**\nI'm still trying to wrap my head around how Verus enables cross-chain operations. Can you explain how it works, and what are the different types of proof models used for notarization?\n\n**AI Assistant:**\nVerus' cross-chain operation capabilities are indeed a powerful feature. I'd be happy to break it down for you. \n\nIn Verus, cross-chain operations are proven using one of three configurable proof models: decentralized consensus-achieved, witness-enhanced, cross-chain cryptographic proofs (auto-notarization); decentralized consensus-achieved, witness-dependent, cross-chain cryptographic proofs (notary-dependent notarization); and semi-centralized or centrally controlled gateway proofs.\n\nLet me dive a bit deeper into the first two proof models, auto-notarization and notary-dependent notarization, as they're both decentralized and consensus-achieved, but differ in their reliance on notary witnesses. Auto-notarization is available only between Verus and PBaaS chains and operates faster without relying on notary witnesses. Notary-dependent notarization, on the other hand, relies on notary witnesses for confirmation.\n\nIn both cases, notarization operates similarly. There are two types of notarizations: \"earned\" and \"accepted\". Earned notarizations are created by miners and stakers on PBaaS chains or for the Ethereum bridge, and include a way to agree or disagree with specific past notarizations. These notarizations are subject to further confirmation rules, which may vary depending on whether the rules are \"auto\", centralized, or \"notary confirm\". Once a new, earned notarization is confirmed, the proof of confirmation is sent to the \"notary\" system, along with any notary signatures necessary to prove confirmation.\n\nSo, to summarize, Verus uses different proof models for notarization, including auto-notarization and notary-dependent notarization, to enable secure and decentralized cross-chain operations.\n\nDo you have any further questions about cross-chain operations or notarization in Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do cross-chain operations work in Verus, and what are the different types of proof models used for notarization?",
            "In Verus, cross-chain operations are proven using one of three configurable proof models: decentralized consensus-achieved, witness-enhanced, cross-chain cryptographic proofs (auto-notarization); decentralized consensus-achieved, witness-dependent, cross-chain cryptographic proofs (notary-dependent notarization); and semi-centralized or centrally controlled gateway proofs. \n\nThe first two proof models, auto-notarization and notary-dependent notarization, are both decentralized and consensus-achieved, but they differ in their reliance on notary witnesses. Auto-notarization is available only between Verus and PBaaS chains and operates faster without relying on notary witnesses. Notary-dependent notarization, on the other hand, relies on notary witnesses for confirmation.\n\nIn both cases, notarization operates similarly. There are two types of notarizations: \"earned\" and \"accepted\". Earned notarizations are created by miners and stakers on PBaaS chains or for the Ethereum bridge, and include a way to agree or disagree with specific past notarizations. These notarizations are subject to further confirmation rules, which may vary depending on whether the rules are \"auto\", centralized, or \"notary confirm\". Once a new, earned notarization is confirmed, the proof of confirmation is sent to the \"notary\" system, along with any notary signatures necessary to prove confirmation.\n\nIn summary, Verus uses different proof models for notarization, including auto-notarization and notary-dependent notarization, to enable secure and decentralized cross-chain operations.",
            "as front-running and sandwiching once and for all.\nAll cross-chain operations are proven based on one of the following proof models, which are configurable on a per system/chain basis:\nDecentralized consensus-achieved, witness enhanced, cross-chain cryptographic proofs. (auto-notarization)\nDecentralized consensus-achieved, witness-dependent, cross-chain cryptographic proofs. (notary dependent notarization)\nSemi-centralized or centrally controlled gateway proofs\nFull auto-notarization is only available between Verus and PBaaS chains, and operates faster with but is not dependent on notary witnesses. When auto-notarization is applied to other gateway connections, the protocol will fall back to the closest it can come between auto-notarization and notary dependent, which may evolve towards less dependence on the notaries in future versions. Whether you auto-notarize or depend on notary witness confirmation, all forms of notarization operate similarly. We\u2019ll start with the basic workflow, then highlight differences:\n\u201cEarned\u201d and \u201cAccepted\u201d notarizations \u2014 VIP broadly defines two types of cross-system notarizations, earned and accepted.\nGenerally, one side of a connection will create \u201cearned\u201d notarizations, which on PBaaS chains or for the Ethereum bridge, are created by miners and stakers adding a notarization output to the coinbase. Earned notarizations, which can only be created by Verus or PBaaS chain miners and stakers, include a way to agree or disagree with specific past notarizations, and are subject to further \u201cconfirmation\u201d rules, which may vary depending on if the rules are \u201cauto\u201d, centralized, or \u201cnotary confirm\u201d.\nOnce a new, earned notarization is confirmed, the proof of confirmation is sent to the \u201cnotary\u201d system, which is typically a launch chain, and in the case of the ETH bridge, is Ethereum, along with any notary signatures necessary to prove confirmation",
            "./raw_text_input_medium/Verus Internet Protocol (VIP)\u200a\u2014\u200aProvable, Decentralized Cross-chain Communication-2023-08-24 10:11:22"
        ]
    ]
]