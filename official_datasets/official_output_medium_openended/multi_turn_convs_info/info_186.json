[
    [
        [
            "What is the process of defining and launching a new currency on the Verus network, and how can it be exported to Ethereum as an ERC-20 token?",
            "Defining and launching a new currency on the Verus network involves several steps. First, you need to use the `definecurrency` command to define the properties of the new currency, such as its name, options, and conversion rates. After defining the currency, you will receive a HEX code, which needs to be broadcasted to the network by making a transaction with the HEX using the `sendrawtransaction` command.\n\nOnce the currency is launched on the Verus network, you can export it to Ethereum as an ERC-20 token using the `sendcurrency` command. This command exports the currency from Verus to Ethereum over the non-custodial bridge. You need to specify the address of the Verus-Ethereum non-custodial smart contract bridge, the amount of the currency to be exported, and the currency to be used for paying the export fees.\n\nAfter the bridge has been notarized to the blockheight where the currency was exported, the ERC-20 token can be chosen from the token dropdown on the bridge website. The token is now free to move through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back and forth with Ethereum.\n\nFurthermore, the token can be used as a reserve in a multi-reserve liquidity basket AMM as part of Verus DeFi. Anyone can define a multi-reserve currency that includes the exported token as a reserve with a weighted percentage. The reserves grow as they retain a small fee whenever assets are traded in, out, or through.",
            "arn more about the many different launch options when defining a currency on Verus, go here \ud83d\udd17 We encourage anyone to start testing the protocol to get ahead of the game. The community is happy to help on Discord \ud83d\udd17\nWhen we do the command above we get returned a HEX. Only after we make a transaction with the HEX, will the currency launch be broadcasted to the network. See below:\n./verus -chain=VRSCTEST sendrawtransaction \"hex\"\nNow you can see the currency on the Verus network. We just need to make sure it\u2019s on Ethereum as well.\nExporting the mapped currency\nNow, let\u2019s export the currency from Verus to Ethereum as an ERC-20 over the non-custodial bridge. We do this with the following command:\n./verus chain=VRSCTEST sendcurrency \"MaxUSDC@\" '[{\n \"address\":\"0xAD84C9EE28FB4c3b9C6ef1B86D1ED00A82DB84E9\", \n \"currency\":\"MaxUSDC\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\nNote: the first MaxUSDC@ field is the change address for fees being returned to you, and the address is the Verus-Ethereum non-custodial smart contract bridge address. You can also omit feecurrency if you would rather pay the export fees in VRSCTEST.\nAfter the bridge has been notarized to the blockheight where you have exported the currency, you can choose it from the token dropdown on the bridge website \ud83d\udd17.\nERC-20s on Verus\nAfter sending from Ethereum to Verus, the token is free to move through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back & forth with Ethereum.\nAs easily as the token was first defined and launched, it can now become one of the reserves in a multi-reserve liquidity basket AMM as part of Verus DeFi.\nAnybody can define a multi-reserve currency which includes MaxUSDC as a reserve with weighted percentage (10\u201390%). The reserves grow as they retain a small fee whenever assets are traded in/out/through.\nA multi-re",
            "./raw_text_input_medium/Get Ahead of the Game with Verus\u2019 Groundbreaking 1_1 Decentralized Currency Mapping for ERC-20\u2026-2023-02-15 12:12:06"
        ]
    ],
    "will",
    "be",
    "replaced",
    "14c7e3a3-b06d-4ad5-bee4-a4c413d5e52c"
]