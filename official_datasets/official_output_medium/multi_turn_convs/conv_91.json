[
    "## Conversation that answers the provided questions:\n**User:**\nI'm interested in creating my own currency on Verus. What happens when I define a currency on Verus using the command line?\n\n**AI Assistant:**\nWhen you define a currency on Verus using the command line, you will receive a HEX code in response. This HEX code must be used in a transaction to broadcast the currency launch to the network. Do you have any further questions about defining a currency on Verus?\n\n**User:**\nOkay, got it. So how do I broadcast a newly defined currency to the Verus network?\n\n**AI Assistant:**\nTo broadcast a newly defined currency to the Verus network, you need to make a transaction using the HEX code returned when defining the currency. This can be done with the `sendrawtransaction` command. Do you have any experience with command-line transactions on Verus?\n\n**User:**\nNo, not yet. But I'm interested in exploring the possibilities of Verus. Can you tell me how I can export a currency from Verus to Ethereum as an ERC-20 token using the Verus bridge?\n\n**AI Assistant:**\nTo export a currency from Verus to Ethereum as an ERC-20 token using the Verus bridge, you can use the `sendcurrency` command with the following format:\n\n```\n./verus chain=VRSCTEST sendcurrency \"change_address@\" '[{\n \"address\":\"Verus-Ethereum bridge contract address\", \n \"currency\":\"currency_name\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\n```\n\nReplace \"change_address@\" with your change address, \"currency_name\" with the name of your currency, and \"Verus-Ethereum bridge contract address\" with the actual address of the bridge contract. This will allow you to export your currency to Ethereum as an ERC-20 token.\n\n**User:**\nWhat happens to the token after it is exported from Verus to Ethereum as an ERC-20 token?\n\n**AI Assistant:**\nAfter being exported from Verus to Ethereum as an ERC-20 token, the token can be freely moved through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back and forth with Ethereum. It can also be used as a reserve in a multi-reserve liquidity basket AMM as part of Verus DeFi. This opens up a wide range of possibilities for your token, and allows it to be used in a variety of different contexts.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What happens when I define a currency on Verus using the command line?",
            "When you define a currency on Verus using the command line, you will receive a HEX code in response. This HEX code must be used in a transaction to broadcast the currency launch to the network.",
            "arn more about the many different launch options when defining a currency on Verus, go here \ud83d\udd17 We encourage anyone to start testing the protocol to get ahead of the game. The community is happy to help on Discord \ud83d\udd17\nWhen we do the command above we get returned a HEX. Only after we make a transaction with the HEX, will the currency launch be broadcasted to the network. See below:\n./verus -chain=VRSCTEST sendrawtransaction \"hex\"\nNow you can see the currency on the Verus network. We just need to make sure it\u2019s on Ethereum as well.\nExporting the mapped currency\nNow, let\u2019s export the currency from Verus to Ethereum as an ERC-20 over the non-custodial bridge. We do this with the following command:\n./verus chain=VRSCTEST sendcurrency \"MaxUSDC@\" '[{\n \"address\":\"0xAD84C9EE28FB4c3b9C6ef1B86D1ED00A82DB84E9\", \n \"currency\":\"MaxUSDC\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\nNote: the first MaxUSDC@ field is the change address for fees being returned to you, and the address is the Verus-Ethereum non-custodial smart contract bridge address. You can also omit feecurrency if you would rather pay the export fees in VRSCTEST.\nAfter the bridge has been notarized to the blockheight where you have exported the currency, you can choose it from the token dropdown on the bridge website \ud83d\udd17.\nERC-20s on Verus\nAfter sending from Ethereum to Verus, the token is free to move through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back & forth with Ethereum.\nAs easily as the token was first defined and launched, it can now become one of the reserves in a multi-reserve liquidity basket AMM as part of Verus DeFi.\nAnybody can define a multi-reserve currency which includes MaxUSDC as a reserve with weighted percentage (10\u201390%). The reserves grow as they retain a small fee whenever assets are traded in/out/through.\nA multi-re",
            "./raw_text_input_medium/Get Ahead of the Game with Verus\u2019 Groundbreaking 1_1 Decentralized Currency Mapping for ERC-20\u2026-2023-02-15 12:12:06"
        ],
        [
            "How do I broadcast a newly defined currency to the Verus network?",
            "To broadcast a newly defined currency to the Verus network, you need to make a transaction using the HEX code returned when defining the currency. This can be done with the `sendrawtransaction` command.",
            "arn more about the many different launch options when defining a currency on Verus, go here \ud83d\udd17 We encourage anyone to start testing the protocol to get ahead of the game. The community is happy to help on Discord \ud83d\udd17\nWhen we do the command above we get returned a HEX. Only after we make a transaction with the HEX, will the currency launch be broadcasted to the network. See below:\n./verus -chain=VRSCTEST sendrawtransaction \"hex\"\nNow you can see the currency on the Verus network. We just need to make sure it\u2019s on Ethereum as well.\nExporting the mapped currency\nNow, let\u2019s export the currency from Verus to Ethereum as an ERC-20 over the non-custodial bridge. We do this with the following command:\n./verus chain=VRSCTEST sendcurrency \"MaxUSDC@\" '[{\n \"address\":\"0xAD84C9EE28FB4c3b9C6ef1B86D1ED00A82DB84E9\", \n \"currency\":\"MaxUSDC\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\nNote: the first MaxUSDC@ field is the change address for fees being returned to you, and the address is the Verus-Ethereum non-custodial smart contract bridge address. You can also omit feecurrency if you would rather pay the export fees in VRSCTEST.\nAfter the bridge has been notarized to the blockheight where you have exported the currency, you can choose it from the token dropdown on the bridge website \ud83d\udd17.\nERC-20s on Verus\nAfter sending from Ethereum to Verus, the token is free to move through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back & forth with Ethereum.\nAs easily as the token was first defined and launched, it can now become one of the reserves in a multi-reserve liquidity basket AMM as part of Verus DeFi.\nAnybody can define a multi-reserve currency which includes MaxUSDC as a reserve with weighted percentage (10\u201390%). The reserves grow as they retain a small fee whenever assets are traded in/out/through.\nA multi-re",
            "./raw_text_input_medium/Get Ahead of the Game with Verus\u2019 Groundbreaking 1_1 Decentralized Currency Mapping for ERC-20\u2026-2023-02-15 12:12:06"
        ],
        [
            "How can I export a currency from Verus to Ethereum as an ERC-20 token using the Verus bridge?",
            "To export a currency from Verus to Ethereum as an ERC-20 token using the Verus bridge, you can use the `sendcurrency` command with the following format:\n\n```\n./verus chain=VRSCTEST sendcurrency \"change_address@\" '[{\n \"address\":\"Verus-Ethereum bridge contract address\", \n \"currency\":\"currency_name\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\n```\n\nReplace \"change_address@\" with your change address, \"currency_name\" with the name of your currency, and \"Verus-Ethereum bridge contract address\" with the actual address of the bridge contract.",
            "arn more about the many different launch options when defining a currency on Verus, go here \ud83d\udd17 We encourage anyone to start testing the protocol to get ahead of the game. The community is happy to help on Discord \ud83d\udd17\nWhen we do the command above we get returned a HEX. Only after we make a transaction with the HEX, will the currency launch be broadcasted to the network. See below:\n./verus -chain=VRSCTEST sendrawtransaction \"hex\"\nNow you can see the currency on the Verus network. We just need to make sure it\u2019s on Ethereum as well.\nExporting the mapped currency\nNow, let\u2019s export the currency from Verus to Ethereum as an ERC-20 over the non-custodial bridge. We do this with the following command:\n./verus chain=VRSCTEST sendcurrency \"MaxUSDC@\" '[{\n \"address\":\"0xAD84C9EE28FB4c3b9C6ef1B86D1ED00A82DB84E9\", \n \"currency\":\"MaxUSDC\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\nNote: the first MaxUSDC@ field is the change address for fees being returned to you, and the address is the Verus-Ethereum non-custodial smart contract bridge address. You can also omit feecurrency if you would rather pay the export fees in VRSCTEST.\nAfter the bridge has been notarized to the blockheight where you have exported the currency, you can choose it from the token dropdown on the bridge website \ud83d\udd17.\nERC-20s on Verus\nAfter sending from Ethereum to Verus, the token is free to move through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back & forth with Ethereum.\nAs easily as the token was first defined and launched, it can now become one of the reserves in a multi-reserve liquidity basket AMM as part of Verus DeFi.\nAnybody can define a multi-reserve currency which includes MaxUSDC as a reserve with weighted percentage (10\u201390%). The reserves grow as they retain a small fee whenever assets are traded in/out/through.\nA multi-re",
            "./raw_text_input_medium/Get Ahead of the Game with Verus\u2019 Groundbreaking 1_1 Decentralized Currency Mapping for ERC-20\u2026-2023-02-15 12:12:06"
        ],
        [
            "What happens to the token after it is exported from Verus to Ethereum as an ERC-20 token?",
            "After being exported from Verus to Ethereum as an ERC-20 token, the token can be freely moved through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back and forth with Ethereum. It can also be used as a reserve in a multi-reserve liquidity basket AMM as part of Verus DeFi.",
            "arn more about the many different launch options when defining a currency on Verus, go here \ud83d\udd17 We encourage anyone to start testing the protocol to get ahead of the game. The community is happy to help on Discord \ud83d\udd17\nWhen we do the command above we get returned a HEX. Only after we make a transaction with the HEX, will the currency launch be broadcasted to the network. See below:\n./verus -chain=VRSCTEST sendrawtransaction \"hex\"\nNow you can see the currency on the Verus network. We just need to make sure it\u2019s on Ethereum as well.\nExporting the mapped currency\nNow, let\u2019s export the currency from Verus to Ethereum as an ERC-20 over the non-custodial bridge. We do this with the following command:\n./verus chain=VRSCTEST sendcurrency \"MaxUSDC@\" '[{\n \"address\":\"0xAD84C9EE28FB4c3b9C6ef1B86D1ED00A82DB84E9\", \n \"currency\":\"MaxUSDC\", \n \"amount\":0, \n \"exportto\":\"veth\", \n \"exportcurrency\":true, \n \"feecurrency\":\"veth\"\n}]'\nNote: the first MaxUSDC@ field is the change address for fees being returned to you, and the address is the Verus-Ethereum non-custodial smart contract bridge address. You can also omit feecurrency if you would rather pay the export fees in VRSCTEST.\nAfter the bridge has been notarized to the blockheight where you have exported the currency, you can choose it from the token dropdown on the bridge website \ud83d\udd17.\nERC-20s on Verus\nAfter sending from Ethereum to Verus, the token is free to move through the Internet of Value on the Verus network, across PBaaS-blockchains, and also back & forth with Ethereum.\nAs easily as the token was first defined and launched, it can now become one of the reserves in a multi-reserve liquidity basket AMM as part of Verus DeFi.\nAnybody can define a multi-reserve currency which includes MaxUSDC as a reserve with weighted percentage (10\u201390%). The reserves grow as they retain a small fee whenever assets are traded in/out/through.\nA multi-re",
            "./raw_text_input_medium/Get Ahead of the Game with Verus\u2019 Groundbreaking 1_1 Decentralized Currency Mapping for ERC-20\u2026-2023-02-15 12:12:06"
        ]
    ]
]