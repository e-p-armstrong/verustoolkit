[
    "## Conversation that answers the provided questions:\n**User:**\nI'm trying to understand more about VerusPay Invoices and how they're used. Can you tell me, what is the purpose of standardizing the serialization and deserialization of VerusPay Invoices and VerusPay InvoiceDetails?\n\n**AI Assistant:**\nThe purpose of standardizing the serialization and deserialization of VerusPay Invoices and VerusPay InvoiceDetails is to enable efficient transmission and storage of invoices across different systems and languages without loss of fidelity or meaning. By standardizing the way invoices are serialized and deserialized, we can ensure that invoices can be accurately and reliably transmitted and stored, regardless of the system or language being used.\n\n**User:**\nThat makes sense. I'm also curious about how to package a VerusPay Invoice into a deeplink or QR code readable by wallets like Verus Mobile. Can you walk me through that process?\n\n**AI Assistant:**\nTo package a VerusPay Invoice into a deeplink or QR code, you need to serialize the invoice without its 20-byte VDXF key, format the bytes into a base64url string, and then create a deeplink URL in the following format:\n\n`[vrsc::applications.wallet VDXF ID]://x-callback-url/[veruspay.vrsc::invoice VDXF ID]/[VerusPay invoice bytes in base64url format]`\n\nThis will create a deeplink or QR code that can be scanned by a VerusPay supporting wallet application, such as Verus Mobile.\n\n**User:**\nAnd what's the purpose of packaging a VerusPay Invoice into a deeplink or QR code in the first place?\n\n**AI Assistant:**\nThe purpose of packaging a VerusPay Invoice into a deeplink or QR code is to allow it to be scanned by a VerusPay supporting wallet application, or linked to by an application or service to trigger an invoice request. By packaging the invoice in this way, you can easily share it with others, or use it to initiate a payment request. It's a convenient and efficient way to transmit and process invoices.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of standardizing the serialization and deserialization of VerusPay Invoices and VerusPay InvoiceDetails?",
            "The purpose of standardizing the serialization and deserialization of VerusPay Invoices and VerusPay InvoiceDetails is to enable efficient transmission and storage of invoices across different systems and languages without loss of fidelity or meaning.",
            "The specification emphasizes a standardized approach to converting the VerusPay Invoice and VerusPay InvoiceDetails into a binary format (serialization) and back (deserialization) to enable efficient transmission and storage. This process ensures that invoices can be shared, processed, and stored across different systems and languages without loss of fidelity or meaning.\n\n### Packaging into Deeplinks and QR Codes\n\nTo package a VerusPay Invoice into a deeplink or QR code readable by wallets like [Verus Mobile](https://github.com/VerusCoin/Verus-Mobile), the invoice must be serialized using the method described above, without its 20-byte [VDXF](/vdxf/) key included, and then its bytes formatted into a base64url string. Then, a deeplink URL can be created as follows:\n\n```[vrsc::applications.wallet VDXF ID]://x-callback-url/[veruspay.vrsc::invoice VDXF ID]/[VerusPay invoice bytes in base64url format]```\n\nIn practice, this creates URLs such as `i5jtwbp6zymeay9llnraglgjqgdrffsau4://x-callback-url/iEETy7La3FTN2Sd2hNRgepek5S8x8eeUeQ/AzABpJ-uxwACFAAtMxHDi_0hkJLSrvRJgEvos77-pu-eojVjXjKBJP80KdufnpG2Ti0`, which can then be packaged into a QR code and scanned by a VerusPay supporting wallet application, or linked to by an application or service to trigger an invoice request.",
            "./raw_text_input_docs/invoices.md"
        ],
        [
            "How do I package a VerusPay Invoice into a deeplink or QR code readable by wallets like Verus Mobile?",
            "To package a VerusPay Invoice into a deeplink or QR code, you need to serialize the invoice without its 20-byte VDXF key, format the bytes into a base64url string, and then create a deeplink URL in the following format:\n\n`[vrsc::applications.wallet VDXF ID]://x-callback-url/[veruspay.vrsc::invoice VDXF ID]/[VerusPay invoice bytes in base64url format]`",
            "The specification emphasizes a standardized approach to converting the VerusPay Invoice and VerusPay InvoiceDetails into a binary format (serialization) and back (deserialization) to enable efficient transmission and storage. This process ensures that invoices can be shared, processed, and stored across different systems and languages without loss of fidelity or meaning.\n\n### Packaging into Deeplinks and QR Codes\n\nTo package a VerusPay Invoice into a deeplink or QR code readable by wallets like [Verus Mobile](https://github.com/VerusCoin/Verus-Mobile), the invoice must be serialized using the method described above, without its 20-byte [VDXF](/vdxf/) key included, and then its bytes formatted into a base64url string. Then, a deeplink URL can be created as follows:\n\n```[vrsc::applications.wallet VDXF ID]://x-callback-url/[veruspay.vrsc::invoice VDXF ID]/[VerusPay invoice bytes in base64url format]```\n\nIn practice, this creates URLs such as `i5jtwbp6zymeay9llnraglgjqgdrffsau4://x-callback-url/iEETy7La3FTN2Sd2hNRgepek5S8x8eeUeQ/AzABpJ-uxwACFAAtMxHDi_0hkJLSrvRJgEvos77-pu-eojVjXjKBJP80KdufnpG2Ti0`, which can then be packaged into a QR code and scanned by a VerusPay supporting wallet application, or linked to by an application or service to trigger an invoice request.",
            "./raw_text_input_docs/invoices.md"
        ],
        [
            "What is the purpose of packaging a VerusPay Invoice into a deeplink or QR code?",
            "The purpose of packaging a VerusPay Invoice into a deeplink or QR code is to allow it to be scanned by a VerusPay supporting wallet application, or linked to by an application or service to trigger an invoice request.",
            "The specification emphasizes a standardized approach to converting the VerusPay Invoice and VerusPay InvoiceDetails into a binary format (serialization) and back (deserialization) to enable efficient transmission and storage. This process ensures that invoices can be shared, processed, and stored across different systems and languages without loss of fidelity or meaning.\n\n### Packaging into Deeplinks and QR Codes\n\nTo package a VerusPay Invoice into a deeplink or QR code readable by wallets like [Verus Mobile](https://github.com/VerusCoin/Verus-Mobile), the invoice must be serialized using the method described above, without its 20-byte [VDXF](/vdxf/) key included, and then its bytes formatted into a base64url string. Then, a deeplink URL can be created as follows:\n\n```[vrsc::applications.wallet VDXF ID]://x-callback-url/[veruspay.vrsc::invoice VDXF ID]/[VerusPay invoice bytes in base64url format]```\n\nIn practice, this creates URLs such as `i5jtwbp6zymeay9llnraglgjqgdrffsau4://x-callback-url/iEETy7La3FTN2Sd2hNRgepek5S8x8eeUeQ/AzABpJ-uxwACFAAtMxHDi_0hkJLSrvRJgEvos77-pu-eojVjXjKBJP80KdufnpG2Ti0`, which can then be packaged into a QR code and scanned by a VerusPay supporting wallet application, or linked to by an application or service to trigger an invoice request.",
            "./raw_text_input_docs/invoices.md"
        ]
    ]
]