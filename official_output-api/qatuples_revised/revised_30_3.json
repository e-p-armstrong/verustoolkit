[
    "What information does the `vout` array contain about each output transaction?",
    "The `vout` array contains information about each output transaction, including:\n\n* `value`: the value of the output in VRSC\n* `n`: the index of the output\n* `scriptPubKey`: a JSON object containing information about the script, including the asm and hex representations, required signatures, type, and addresses",
    "decoderawtransaction \"hexstring\" Return a JSON object representing the serialized, hex-encoded transaction. Arguments: 1. \"hex\"   (string, required) The transaction hex string Result: {  \"txid\" : \"id\",    (string) The transaction id  \"overwintered\" : bool  (boolean) The Overwintered flag  \"version\" : n,     (numeric) The version  \"versiongroupid\": \"hex\"  (string, optional) The version group id (Overwintered txs)  \"locktime\" : ttt,    (numeric) The lock time  \"expiryheight\" : n,   (numeric, optional) Last valid block height for mining transaction (Overwintered txs)  \"vin\" : [        (array of json objects)   {    \"txid\": \"id\",  (string) The transaction id    \"vout\": n,     (numeric) The output number    \"scriptSig\": {   (json object) The script     \"asm\": \"asm\", (string) asm     \"hex\": \"hex\"  (string) hex    },    \"sequence\": n   (numeric) The script sequence number   }   ,...  ],  \"vout\" : [       (array of json objects)   {    \"value\" : x.xxx,      (numeric) The value in VRSC    \"n\" : n,          (numeric) index    \"scriptPubKey\" : {     (json object)     \"asm\" : \"asm\",     (string) the asm     \"hex\" : \"hex\",     (string) the hex     \"reqSigs\" : n,      (numeric) The required sigs     \"type\" : \"pubkeyhash\", (string) The type, eg 'pubkeyhash'     \"addresses\" : [      (json array of string)      \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"  (string) transparent address      ,...     ]    }   }   ,...  ],  \"vjoinsplit\" : [    (array of json objects, only for version >= 2)   {    \"vpub_old\" : x.xxx,     (numeric) public input value in KMD    \"vpub_new\" : x.xxx,     (numeric) public output value in KMD    \"anchor\" : \"hex\",     (string) the anchor    \"nullifiers\" : [      (json array of string)     \"hex\"           (string) input note nullifier     ,...    ],    \"commitments\" : [      (json array of string)     \"hex\"           (string) output note commitment     ,...    ],    \"onetimePubKey\" : \"hex\", (string) the onetime public key used to encrypt the ciphertexts    \"randomSeed\" : \"hex\",   (string) the random seed    \"macs\" : [         (json array of str",
    "./raw_text_input_api_text/decoderawtransaction"
]