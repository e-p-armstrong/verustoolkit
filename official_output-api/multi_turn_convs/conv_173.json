[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to assist you in understanding Verus. What's on your mind today?\n\n**User:**\nI'm trying to learn more about the `createrawtransaction` command in Verus. What's its purpose?\n\n**AI Assistant:**\nThe `createrawtransaction` command creates a transaction spending the given inputs and sending to the given addresses. It returns a hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network. Do you have any further questions about this command?\n\n**User:**\nThat helps, thanks! What are the required arguments for the `createrawtransaction` command?\n\n**AI Assistant:**\nThe `createrawtransaction` command requires two arguments:\n\n1. \"transactions\" - a JSON array of JSON objects, each containing the transaction ID, output number, and optionally, the sequence number.\n2. \"addresses\" - a JSON object with addresses as keys and amounts as values, specifying the destinations and amounts of the transaction.\n\nLet me know if you need more information!\n\n**User:**\nI saw there's an optional \"locktime\" argument. What's its purpose?\n\n**AI Assistant:**\nThe \"locktime\" argument specifies the raw locktime of the transaction. A non-0 value also locktime-activates the inputs. If not provided, the default value is 0.\n\n**User:**\nAnd what about the \"expiryheight\" argument? What does it do?\n\n**AI Assistant:**\nThe \"expiryheight\" argument specifies the expiry height of the transaction. If not provided, the default value is the next block height plus 20 (for pre-Blossom) or 40 (for post-Blossom), depending on whether Overwinter is active.\n\n**User:**\nOne last question: what's the format of the result returned by the `createrawtransaction` command?\n\n**AI Assistant:**\nThe result returned by the `createrawtransaction` command is a string containing the hex-encoded raw transaction.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `createrawtransaction` command in Verus?",
            "The `createrawtransaction` command creates a transaction spending the given inputs and sending to the given addresses. It returns a hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight ) Create a transaction spending the given inputs and sending to the given addresses. Returns hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network. Arguments: 1. \"transactions\"    (string, required) A json array of json objects   [    {     \"txid\":\"id\",  (string, required) The transaction id     \"vout\":n    (numeric, required) The output number     \"sequence\":n  (numeric, optional) The sequence number    }    ,...   ] 2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values   {    \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount    \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts    \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data    ,...   } 3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs 4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active) Result: \"transaction\"      (string) hex string of the transaction Examples > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\" > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ],
        [
            "What are the required arguments for the `createrawtransaction` command?",
            "The `createrawtransaction` command requires two arguments:\n\n1. \"transactions\" - a JSON array of JSON objects, each containing the transaction ID, output number, and optionally, the sequence number.\n2. \"addresses\" - a JSON object with addresses as keys and amounts as values, specifying the destinations and amounts of the transaction.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight ) Create a transaction spending the given inputs and sending to the given addresses. Returns hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network. Arguments: 1. \"transactions\"    (string, required) A json array of json objects   [    {     \"txid\":\"id\",  (string, required) The transaction id     \"vout\":n    (numeric, required) The output number     \"sequence\":n  (numeric, optional) The sequence number    }    ,...   ] 2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values   {    \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount    \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts    \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data    ,...   } 3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs 4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active) Result: \"transaction\"      (string) hex string of the transaction Examples > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\" > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ],
        [
            "What is the purpose of the \"locktime\" argument in the `createrawtransaction` command?",
            "The \"locktime\" argument specifies the raw locktime of the transaction. A non-0 value also locktime-activates the inputs. If not provided, the default value is 0.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight ) Create a transaction spending the given inputs and sending to the given addresses. Returns hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network. Arguments: 1. \"transactions\"    (string, required) A json array of json objects   [    {     \"txid\":\"id\",  (string, required) The transaction id     \"vout\":n    (numeric, required) The output number     \"sequence\":n  (numeric, optional) The sequence number    }    ,...   ] 2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values   {    \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount    \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts    \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data    ,...   } 3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs 4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active) Result: \"transaction\"      (string) hex string of the transaction Examples > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\" > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ],
        [
            "What is the purpose of the \"expiryheight\" argument in the `createrawtransaction` command?",
            "The \"expiryheight\" argument specifies the expiry height of the transaction. If not provided, the default value is the next block height plus 20 (for pre-Blossom) or 40 (for post-Blossom), depending on whether Overwinter is active.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight ) Create a transaction spending the given inputs and sending to the given addresses. Returns hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network. Arguments: 1. \"transactions\"    (string, required) A json array of json objects   [    {     \"txid\":\"id\",  (string, required) The transaction id     \"vout\":n    (numeric, required) The output number     \"sequence\":n  (numeric, optional) The sequence number    }    ,...   ] 2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values   {    \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount    \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts    \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data    ,...   } 3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs 4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active) Result: \"transaction\"      (string) hex string of the transaction Examples > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\" > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ],
        [
            "What is the format of the result returned by the `createrawtransaction` command?",
            "The result returned by the `createrawtransaction` command is a string containing the hex-encoded raw transaction.",
            "createrawtransaction [{\"txid\":\"id\",\"vout\":n},...] {\"address\":amount,...} ( locktime ) ( expiryheight ) Create a transaction spending the given inputs and sending to the given addresses. Returns hex-encoded raw transaction. Note that the transaction's inputs are not signed, and it is not stored in the wallet or transmitted to the network. Arguments: 1. \"transactions\"    (string, required) A json array of json objects   [    {     \"txid\":\"id\",  (string, required) The transaction id     \"vout\":n    (numeric, required) The output number     \"sequence\":n  (numeric, optional) The sequence number    }    ,...   ] 2. \"addresses\"      (string, required) a json object with addresses as keys and amounts as values   {    \"address\": x.xxx  (numeric, required) The key is the destination address or ID, the value is the VRSC amount    \"address\": {\"currency\": x.xxx, ...} (object, optional) The key is the destination address or ID, the value is currencies and amounts    \"data\": \"hex\"  (string, optional) The key is \"data\", the value is hex encoded data    ,...   } 3. locktime       (numeric, optional, default=0) Raw locktime. Non-0 value also locktime-activates inputs 4. expiryheight     (numeric, optional, default=nextblockheight+20 (pre-Blossom) or nextblockheight+40 (post-Blossom)) Expiry height of transaction (if Overwinter is active) Result: \"transaction\"      (string) hex string of the transaction Examples > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01}\" > verus createrawtransaction \"[{\"txid\":\"myid\",\"vout\":0}]\" \"{\"address\":0.01,\"data\":\"00010203\"}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"createrawtransaction\", \"params\": [\"[{\"txid\":\"myid\",\"vout\":0}]\", \"{\"address\":0.01}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/createrawtransaction"
        ]
    ]
]