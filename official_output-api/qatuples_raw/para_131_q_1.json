[
    "What are the required and optional arguments for the `getidentitieswithaddress` command?",
    "The required argument for the `getidentitieswithaddress` command is:\n\n* `address`: a string representing the valid address to search for in identities.\n\nThe optional arguments are:\n\n* `fromheight`: a number specifying the block height to start searching from (default is 0).\n* `toheight`: a number specifying the block height to stop searching at (default is 0, meaning no limit).\n* `unspent`: a boolean indicating whether to only return active ID UTXOs as of the current block height (default is false).",
    "getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' Arguments {   \"address\":\"validaddress\"  (string, required) returns all identities that contain the specified address in its primary addresses   \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only   \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)   \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height } Result: [                 (array) array of matching identities  {identityobject},        (object) identity with additional member \"txout\" with txhash and output index  ... ] Examples: > verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getidentitieswithaddress"
]