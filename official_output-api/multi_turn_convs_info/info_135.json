[
    [
        [
            "What is the purpose of the `signmessage` command in Verus?",
            "The `signmessage` command is used to sign a message with the private key of a transparent address (t-addr) or the authorities present in this wallet for an identity.",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ],
        [
            "What are the required arguments for the `signmessage` command?",
            "The required arguments for the `signmessage` command are:\n\n1. \"t-addr or identity\" (string, required): The transparent address or identity to use for signing.\n2. \"message\" (string, required): The message to create a signature of.",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ],
        [
            "What is the optional argument for the `signmessage` command?",
            "The optional argument for the `signmessage` command is:\n\n3. \"cursig\" (string): The current signature of the message encoded in base 64 if multisig ID.",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ],
        [
            "What is the result of the `signmessage` command?",
            "The result of the `signmessage` command is a JSON object with two properties:\n\n1. \"hash\" (string): The hash of the message (SHA256, NOT SHA256D).\n2. \"signature\" (string): The aggregate signature of the message encoded in base 64 if all or partial signing successful.",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ],
        [
            "How can I use the `signmessage` command to create a signature for a message?",
            "You can use the `signmessage` command to create a signature for a message by unlocking your wallet and then running the command with the required arguments, like this:\n\n`verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\"`",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ],
        [
            "How can I verify a signature using the `verifymessage` command?",
            "You can verify a signature using the `verifymessage` command by running the command with the required arguments, like this:\n\n`verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\"`",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ],
        [
            "How can I use the `signmessage` command as a JSON RPC call?",
            "You can use the `signmessage` command as a JSON RPC call by sending a JSON request to the Verus RPC server, like this:\n\n`curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`",
            "signmessage \"address or identity\" \"message\" \"currentsig\" Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID Result: {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } Examples: Unlock the wallet for 30 seconds > verus walletpassphrase \"mypassphrase\" 30 Create the signature > verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\" Verify the signature > verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\" As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ]
    ],
    "will",
    "be",
    "replaced",
    "be802d5d-cdce-4d93-bfb0-42468e6c26fb"
]