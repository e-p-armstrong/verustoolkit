[
    [
        [
            "What is the purpose of the `getcurrencystate` command in Verus?",
            "The `getcurrencystate` command is used to retrieve the currency state(s) on the blockchain for a specified currency. It can return the latest currency state and height, or the currency state at a specific height or range of heights, and can also be used to get the currency state relative to another system.",
            "getcurrencystate \"currencynameorid\" (\"n\") (\"connectedsystemid\") Returns the currency state(s) on the blockchain for any specified currency, either with all changes on this chain or relative to another system. Arguments  \"currencynameorid\"         (string)         name or i-address of currency in question  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the currency state                                  If not specified, the latest currency state and height is returned  (\"connectedchainid\")        (string)         optional Result:  [    {      \"height\": n,      \"blocktime\": n,      \"currencystate\": {        \"flags\" : n,        \"initialratio\" : n,        \"initialsupply\" : n,        \"emitted\" : n,        \"supply\" : n,        \"reserve\" : n,        \"currentratio\" : n,      \"}    },  ] Examples: > verus getcurrencystate \"currencynameorid\" (\"n\") (\"connectedchainid\") > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencystate\", \"params\": [\"currencynameorid\" (\"n\") (\"connectedchainid\")] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencystate"
        ],
        [
            "What are the arguments required for the `getcurrencystate` command?",
            "The `getcurrencystate` command requires the following arguments:\n\n1. `currencynameorid`: the name or i-address of the currency in question (string)\n2. `n` or `m,n` or `m,n,o` (optional): the height or inclusive range with optional step at which to get the currency state (int or string)\n3. `connectedsystemid` (optional): the optional connected chain ID (string)",
            "getcurrencystate \"currencynameorid\" (\"n\") (\"connectedsystemid\") Returns the currency state(s) on the blockchain for any specified currency, either with all changes on this chain or relative to another system. Arguments  \"currencynameorid\"         (string)         name or i-address of currency in question  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the currency state                                  If not specified, the latest currency state and height is returned  (\"connectedchainid\")        (string)         optional Result:  [    {      \"height\": n,      \"blocktime\": n,      \"currencystate\": {        \"flags\" : n,        \"initialratio\" : n,        \"initialsupply\" : n,        \"emitted\" : n,        \"supply\" : n,        \"reserve\" : n,        \"currentratio\" : n,      \"}    },  ] Examples: > verus getcurrencystate \"currencynameorid\" (\"n\") (\"connectedchainid\") > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencystate\", \"params\": [\"currencynameorid\" (\"n\") (\"connectedchainid\")] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencystate"
        ],
        [
            "What is the format of the result returned by the `getcurrencystate` command?",
            "The result returned by the `getcurrencystate` command is an array of objects, each containing the following properties:\n\n1. `height`: the block height\n2. `blocktime`: the block time\n3. `currencystate`: an object containing the currency state information, including:\n\t* `flags`: an integer\n\t* `initialratio`: an integer\n\t* `initialsupply`: an integer\n\t* `emitted`: an integer\n\t* `supply`: an integer\n\t* `reserve`: an integer\n\t* `currentratio`: an integer",
            "getcurrencystate \"currencynameorid\" (\"n\") (\"connectedsystemid\") Returns the currency state(s) on the blockchain for any specified currency, either with all changes on this chain or relative to another system. Arguments  \"currencynameorid\"         (string)         name or i-address of currency in question  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the currency state                                  If not specified, the latest currency state and height is returned  (\"connectedchainid\")        (string)         optional Result:  [    {      \"height\": n,      \"blocktime\": n,      \"currencystate\": {        \"flags\" : n,        \"initialratio\" : n,        \"initialsupply\" : n,        \"emitted\" : n,        \"supply\" : n,        \"reserve\" : n,        \"currentratio\" : n,      \"}    },  ] Examples: > verus getcurrencystate \"currencynameorid\" (\"n\") (\"connectedchainid\") > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencystate\", \"params\": [\"currencynameorid\" (\"n\") (\"connectedchainid\")] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencystate"
        ],
        [
            "How can I use the `getcurrencystate` command via the command line and via a curl request?",
            "You can use the `getcurrencystate` command via the command line by running:\n```\nverus getcurrencystate \"currencynameorid\" (\"n\") (\"connectedchainid\")\n```\nAlternatively, you can use a curl request to call the `getcurrencystate` method:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencystate\", \"params\": [\"currencynameorid\" (\"n\") (\"connectedchainid\")] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "getcurrencystate \"currencynameorid\" (\"n\") (\"connectedsystemid\") Returns the currency state(s) on the blockchain for any specified currency, either with all changes on this chain or relative to another system. Arguments  \"currencynameorid\"         (string)         name or i-address of currency in question  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the currency state                                  If not specified, the latest currency state and height is returned  (\"connectedchainid\")        (string)         optional Result:  [    {      \"height\": n,      \"blocktime\": n,      \"currencystate\": {        \"flags\" : n,        \"initialratio\" : n,        \"initialsupply\" : n,        \"emitted\" : n,        \"supply\" : n,        \"reserve\" : n,        \"currentratio\" : n,      \"}    },  ] Examples: > verus getcurrencystate \"currencynameorid\" (\"n\") (\"connectedchainid\") > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencystate\", \"params\": [\"currencynameorid\" (\"n\") (\"connectedchainid\")] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencystate"
        ]
    ],
    "will",
    "be",
    "replaced",
    "5298a830-dc1d-4646-9d6e-0baf5e5a8349"
]