[
    [
        [
            "What is the purpose of the `getexports` command in Verus?",
            "The `getexports` command is used to retrieve pending export transfers to a specified currency within a specific height range.",
            "getexports \"chainname\" (heightstart) (heightend) Returns pending export transfers to the specified currency from start height to end height if specified Arguments \"chainname\"           (string, required) name/ID of the currency to look for. no parameter returns current chain \"heightstart\"          (int, optional)   default=0 only return exports at or above this height \"heightend\"           (int, optional)   dedfault=maxheight only return exports below or at this height Result:  [{   \"height\": n,   \"txid\": \"hexid\",   \"txoutnum\": n,   \"partialtransactionproof\": \"hexstr\",   \"transfers\": [{transfer1}, {transfer2},...] }, ...] Examples: > verus getexports \"chainname\" (heightstart) (heightend) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\" (heightstart) (heightend)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getexports"
        ],
        [
            "What are the required and optional arguments for the `getexports` command?",
            "The `getexports` command requires one argument, `chainname`, which is the name or ID of the currency to look for. The two optional arguments are `heightstart` and `heightend`, which specify the height range for the exports to be returned.",
            "getexports \"chainname\" (heightstart) (heightend) Returns pending export transfers to the specified currency from start height to end height if specified Arguments \"chainname\"           (string, required) name/ID of the currency to look for. no parameter returns current chain \"heightstart\"          (int, optional)   default=0 only return exports at or above this height \"heightend\"           (int, optional)   dedfault=maxheight only return exports below or at this height Result:  [{   \"height\": n,   \"txid\": \"hexid\",   \"txoutnum\": n,   \"partialtransactionproof\": \"hexstr\",   \"transfers\": [{transfer1}, {transfer2},...] }, ...] Examples: > verus getexports \"chainname\" (heightstart) (heightend) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\" (heightstart) (heightend)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getexports"
        ],
        [
            "What is the default value for `heightstart` and `heightend` if they are not specified?",
            "If `heightstart` is not specified, it defaults to 0. If `heightend` is not specified, it defaults to the maximum height.",
            "getexports \"chainname\" (heightstart) (heightend) Returns pending export transfers to the specified currency from start height to end height if specified Arguments \"chainname\"           (string, required) name/ID of the currency to look for. no parameter returns current chain \"heightstart\"          (int, optional)   default=0 only return exports at or above this height \"heightend\"           (int, optional)   dedfault=maxheight only return exports below or at this height Result:  [{   \"height\": n,   \"txid\": \"hexid\",   \"txoutnum\": n,   \"partialtransactionproof\": \"hexstr\",   \"transfers\": [{transfer1}, {transfer2},...] }, ...] Examples: > verus getexports \"chainname\" (heightstart) (heightend) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\" (heightstart) (heightend)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getexports"
        ],
        [
            "What is the format of the result returned by the `getexports` command?",
            "The result is an array of objects, each containing information about a pending export transfer. The objects have the following properties: `height`, `txid`, `txoutnum`, `partialtransactionproof`, and `transfers`, which is an array of transfer objects.",
            "getexports \"chainname\" (heightstart) (heightend) Returns pending export transfers to the specified currency from start height to end height if specified Arguments \"chainname\"           (string, required) name/ID of the currency to look for. no parameter returns current chain \"heightstart\"          (int, optional)   default=0 only return exports at or above this height \"heightend\"           (int, optional)   dedfault=maxheight only return exports below or at this height Result:  [{   \"height\": n,   \"txid\": \"hexid\",   \"txoutnum\": n,   \"partialtransactionproof\": \"hexstr\",   \"transfers\": [{transfer1}, {transfer2},...] }, ...] Examples: > verus getexports \"chainname\" (heightstart) (heightend) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\" (heightstart) (heightend)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getexports"
        ],
        [
            "How can you use the `getexports` command with the Verus CLI and with curl?",
            "You can use the `getexports` command with the Verus CLI by running `verus getexports \"chainname\" (heightstart) (heightend)`. To use it with curl, you can run `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\" (heightstart) (heightend)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
            "getexports \"chainname\" (heightstart) (heightend) Returns pending export transfers to the specified currency from start height to end height if specified Arguments \"chainname\"           (string, required) name/ID of the currency to look for. no parameter returns current chain \"heightstart\"          (int, optional)   default=0 only return exports at or above this height \"heightend\"           (int, optional)   dedfault=maxheight only return exports below or at this height Result:  [{   \"height\": n,   \"txid\": \"hexid\",   \"txoutnum\": n,   \"partialtransactionproof\": \"hexstr\",   \"transfers\": [{transfer1}, {transfer2},...] }, ...] Examples: > verus getexports \"chainname\" (heightstart) (heightend) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\" (heightstart) (heightend)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getexports"
        ]
    ],
    "will",
    "be",
    "replaced",
    "100f246f-c992-4367-bbcf-a28b0689bdc1"
]