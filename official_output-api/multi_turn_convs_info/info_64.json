[
    [
        [
            "What is the purpose of the `invalidateblock` command in Verus?",
            "The `invalidateblock` command is used to permanently mark a block as invalid, as if it had violated a consensus rule.",
            "invalidateblock \"hash\" Permanently marks a block as invalid, as if it violated a consensus rule. Arguments: 1. hash  (string, required) the hash of the block to mark as invalid Result: Examples: > verus invalidateblock \"blockhash\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"invalidateblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/invalidateblock"
        ],
        [
            "What is the required argument for the `invalidateblock` command?",
            "The required argument for the `invalidateblock` command is the hash of the block to be marked as invalid.",
            "invalidateblock \"hash\" Permanently marks a block as invalid, as if it violated a consensus rule. Arguments: 1. hash  (string, required) the hash of the block to mark as invalid Result: Examples: > verus invalidateblock \"blockhash\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"invalidateblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/invalidateblock"
        ],
        [
            "How can I use the `invalidateblock` command to mark a block as invalid?",
            "You can use the `invalidateblock` command to mark a block as invalid by running the following command:\n\n```\nverus invalidateblock \"blockhash\"\n```\n\nReplace `\"blockhash\"` with the actual hash of the block you want to mark as invalid.",
            "invalidateblock \"hash\" Permanently marks a block as invalid, as if it violated a consensus rule. Arguments: 1. hash  (string, required) the hash of the block to mark as invalid Result: Examples: > verus invalidateblock \"blockhash\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"invalidateblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/invalidateblock"
        ],
        [
            "Can I use the `invalidateblock` command with a JSON-RPC request?",
            "Yes, you can use the `invalidateblock` command with a JSON-RPC request. Here's an example:\n\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"invalidateblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nReplace `\"blockhash\"` with the actual hash of the block you want to mark as invalid, and `myusername` with your actual username.",
            "invalidateblock \"hash\" Permanently marks a block as invalid, as if it violated a consensus rule. Arguments: 1. hash  (string, required) the hash of the block to mark as invalid Result: Examples: > verus invalidateblock \"blockhash\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"invalidateblock\", \"params\": [\"blockhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/invalidateblock"
        ]
    ],
    "will",
    "be",
    "replaced",
    "eda3f570-f45b-4532-9a1b-6031eb440a2b"
]