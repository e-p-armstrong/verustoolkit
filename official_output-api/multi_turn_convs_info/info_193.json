[
    [
        [
            "What does the `getbestproofroot` method do in Verus?",
            "The `getbestproofroot` method determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root.",
            "getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,          \"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}' Determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root. Arguments {  \"proofroots\":         (array, required/may be empty) ordered array of proof roots, indexed on return  [   {    \"version\":n        (int, required) version of this proof root data structure    \"type\":n          (int, required) type of proof root (chain or system specific)    \"systemid\":\"hexstr\"   (hexstr, required) system the proof root is for    \"height\":n         (uint32_t, required) height of this proof root    \"stateroot\":\"hexstr\"   (hexstr, required) Merkle or merkle-style tree root for the specified block/sequence    \"blockhash\":\"hexstr\"   (hexstr, required) hash identifier for the specified block/sequence    \"power\":\"hexstr\"     (hexstr, required) work, stake, or combination of the two for most-work/most-power rule   }  .  .  .  ]  \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states  \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root} Result: \"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"        (object) latest valid proof root of chain\"laststableproofroot\"      (object) either tip-BLOCK_MATURITY or last notarized/witnessed tip\"lastconfirmedproofroot\"     (object) last proof root of chain that has been confirmed\"currencystates\"         (int) currency states of target currency and published bridges Examples: > verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getbestproofroot"
        ],
        [
            "What are the required arguments for the `getbestproofroot` method?",
            "The `getbestproofroot` method requires two arguments:\n1. `proofroots`: an ordered array of proof roots, indexed on return.\n2. `lastconfirmed`: an integer indicating the index into the proof root array indicating the last confirmed root.",
            "getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,          \"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}' Determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root. Arguments {  \"proofroots\":         (array, required/may be empty) ordered array of proof roots, indexed on return  [   {    \"version\":n        (int, required) version of this proof root data structure    \"type\":n          (int, required) type of proof root (chain or system specific)    \"systemid\":\"hexstr\"   (hexstr, required) system the proof root is for    \"height\":n         (uint32_t, required) height of this proof root    \"stateroot\":\"hexstr\"   (hexstr, required) Merkle or merkle-style tree root for the specified block/sequence    \"blockhash\":\"hexstr\"   (hexstr, required) hash identifier for the specified block/sequence    \"power\":\"hexstr\"     (hexstr, required) work, stake, or combination of the two for most-work/most-power rule   }  .  .  .  ]  \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states  \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root} Result: \"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"        (object) latest valid proof root of chain\"laststableproofroot\"      (object) either tip-BLOCK_MATURITY or last notarized/witnessed tip\"lastconfirmedproofroot\"     (object) last proof root of chain that has been confirmed\"currencystates\"         (int) currency states of target currency and published bridges Examples: > verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getbestproofroot"
        ],
        [
            "What information does each proof root object in the `proofroots` array contain?",
            "Each proof root object in the `proofroots` array contains the following information:\n1. `version`: an integer representing the version of this proof root data structure.\n2. `type`: an integer representing the type of proof root (chain or system specific).\n3. `systemid`: a hexadecimal string representing the system the proof root is for.\n4. `height`: an unsigned 32-bit integer representing the height of this proof root.\n5. `stateroot`: a hexadecimal string representing the Merkle or merkle-style tree root for the specified block/sequence.\n6. `blockhash`: a hexadecimal string representing the hash identifier for the specified block/sequence.\n7. `power`: a hexadecimal string representing the work, stake, or combination of the two for most-work/most-power rule.",
            "getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,          \"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}' Determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root. Arguments {  \"proofroots\":         (array, required/may be empty) ordered array of proof roots, indexed on return  [   {    \"version\":n        (int, required) version of this proof root data structure    \"type\":n          (int, required) type of proof root (chain or system specific)    \"systemid\":\"hexstr\"   (hexstr, required) system the proof root is for    \"height\":n         (uint32_t, required) height of this proof root    \"stateroot\":\"hexstr\"   (hexstr, required) Merkle or merkle-style tree root for the specified block/sequence    \"blockhash\":\"hexstr\"   (hexstr, required) hash identifier for the specified block/sequence    \"power\":\"hexstr\"     (hexstr, required) work, stake, or combination of the two for most-work/most-power rule   }  .  .  .  ]  \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states  \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root} Result: \"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"        (object) latest valid proof root of chain\"laststableproofroot\"      (object) either tip-BLOCK_MATURITY or last notarized/witnessed tip\"lastconfirmedproofroot\"     (object) last proof root of chain that has been confirmed\"currencystates\"         (int) currency states of target currency and published bridges Examples: > verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getbestproofroot"
        ],
        [
            "What does the `lastconfirmed` argument in the `getbestproofroot` method represent?",
            "The `lastconfirmed` argument in the `getbestproofroot` method represents the index into the proof root array indicating the last confirmed root.",
            "getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,          \"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}' Determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root. Arguments {  \"proofroots\":         (array, required/may be empty) ordered array of proof roots, indexed on return  [   {    \"version\":n        (int, required) version of this proof root data structure    \"type\":n          (int, required) type of proof root (chain or system specific)    \"systemid\":\"hexstr\"   (hexstr, required) system the proof root is for    \"height\":n         (uint32_t, required) height of this proof root    \"stateroot\":\"hexstr\"   (hexstr, required) Merkle or merkle-style tree root for the specified block/sequence    \"blockhash\":\"hexstr\"   (hexstr, required) hash identifier for the specified block/sequence    \"power\":\"hexstr\"     (hexstr, required) work, stake, or combination of the two for most-work/most-power rule   }  .  .  .  ]  \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states  \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root} Result: \"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"        (object) latest valid proof root of chain\"laststableproofroot\"      (object) either tip-BLOCK_MATURITY or last notarized/witnessed tip\"lastconfirmedproofroot\"     (object) last proof root of chain that has been confirmed\"currencystates\"         (int) currency states of target currency and published bridges Examples: > verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getbestproofroot"
        ],
        [
            "What is the format of the result returned by the `getbestproofroot` method?",
            "The result returned by the `getbestproofroot` method is an object containing the following information:\n1. `bestindex`: an integer representing the index of the best proof root not confirmed that is provided, confirmed index, or -1.\n2. `latestproofroot`: an object representing the latest valid proof root of the chain.\n3. `laststableproofroot`: an object representing either the tip-BLOCK_MATURITY or the last notarized/witnessed tip.\n4. `lastconfirmedproofroot`: an object representing the last proof root of the chain that has been confirmed.\n5. `currencystates`: an integer representing the currency states of the target currency and published bridges.",
            "getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,          \"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}' Determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root. Arguments {  \"proofroots\":         (array, required/may be empty) ordered array of proof roots, indexed on return  [   {    \"version\":n        (int, required) version of this proof root data structure    \"type\":n          (int, required) type of proof root (chain or system specific)    \"systemid\":\"hexstr\"   (hexstr, required) system the proof root is for    \"height\":n         (uint32_t, required) height of this proof root    \"stateroot\":\"hexstr\"   (hexstr, required) Merkle or merkle-style tree root for the specified block/sequence    \"blockhash\":\"hexstr\"   (hexstr, required) hash identifier for the specified block/sequence    \"power\":\"hexstr\"     (hexstr, required) work, stake, or combination of the two for most-work/most-power rule   }  .  .  .  ]  \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states  \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root} Result: \"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"        (object) latest valid proof root of chain\"laststableproofroot\"      (object) either tip-BLOCK_MATURITY or last notarized/witnessed tip\"lastconfirmedproofroot\"     (object) last proof root of chain that has been confirmed\"currencystates\"         (int) currency states of target currency and published bridges Examples: > verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getbestproofroot"
        ],
        [
            "How can I use the `getbestproofroot` method with the Verus command-line interface?",
            "You can use the `getbestproofroot` method with the Verus command-line interface by running a command in the following format:\n```\nverus getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}'\n```\nReplace the `n` placeholders with the actual values for your proof roots and `lastconfirmed` index.",
            "getbestproofroot '{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,          \"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}' Determines and returns the index of the best (most recent, valid, qualified) proof root in the list of proof roots, and the most recent, valid proof root. Arguments {  \"proofroots\":         (array, required/may be empty) ordered array of proof roots, indexed on return  [   {    \"version\":n        (int, required) version of this proof root data structure    \"type\":n          (int, required) type of proof root (chain or system specific)    \"systemid\":\"hexstr\"   (hexstr, required) system the proof root is for    \"height\":n         (uint32_t, required) height of this proof root    \"stateroot\":\"hexstr\"   (hexstr, required) Merkle or merkle-style tree root for the specified block/sequence    \"blockhash\":\"hexstr\"   (hexstr, required) hash identifier for the specified block/sequence    \"power\":\"hexstr\"     (hexstr, required) work, stake, or combination of the two for most-work/most-power rule   }  .  .  .  ]  \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states  \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root} Result: \"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"        (object) latest valid proof root of chain\"laststableproofroot\"      (object) either tip-BLOCK_MATURITY or last notarized/witnessed tip\"lastconfirmedproofroot\"     (object) last proof root of chain that has been confirmed\"currencystates\"         (int) currency states of target currency and published bridges Examples: > verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getbestproofroot"
        ]
    ],
    "will",
    "be",
    "replaced",
    "0a5b07af-48ed-4397-bb30-1f9173fb8cc3"
]