[
    [
        [
            "What does the `getblockhashes` command do in Verus?",
            "The `getblockhashes` command returns an array of hashes of blocks within a specified timestamp range.",
            "getblockhashes timestamp Returns array of hashes of blocks within the timestamp range provided. Arguments: 1. high     (numeric, required) The newer block timestamp 2. low     (numeric, required) The older block timestamp 3. options   (string, required) A json object   {    \"noOrphans\":true  (boolean) will only include blocks on the main chain    \"logicalTimes\":true  (boolean) will include logical timestamps with hashes   } Result: [  \"hash\"     (string) The block hash ] [  {   \"blockhash\": (string) The block hash   \"logicalts\": (numeric) The logical timestamp  } ] Examples: > verus getblockhashes 1231614698 1231024505 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockhashes\", \"params\": [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ > verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'",
            "./raw_text_input_api_text/getblockhashes"
        ],
        [
            "What are the optional parameters that can be included in the `options` JSON object for the `getblockhashes` command?",
            "The `options` JSON object can include the following optional parameters:\n1. `noOrphans`: A boolean indicating whether to only include blocks on the main chain (default: false)\n2. `logicalTimes`: A boolean indicating whether to include logical timestamps with hashes (default: false)",
            "getblockhashes timestamp Returns array of hashes of blocks within the timestamp range provided. Arguments: 1. high     (numeric, required) The newer block timestamp 2. low     (numeric, required) The older block timestamp 3. options   (string, required) A json object   {    \"noOrphans\":true  (boolean) will only include blocks on the main chain    \"logicalTimes\":true  (boolean) will include logical timestamps with hashes   } Result: [  \"hash\"     (string) The block hash ] [  {   \"blockhash\": (string) The block hash   \"logicalts\": (numeric) The logical timestamp  } ] Examples: > verus getblockhashes 1231614698 1231024505 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockhashes\", \"params\": [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ > verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'",
            "./raw_text_input_api_text/getblockhashes"
        ],
        [
            "How can I use the `getblockhashes` command to retrieve block hashes within a specific timestamp range, including logical timestamps?",
            "You can use the `getblockhashes` command with the `logicalTimes` option set to true, like this:\n```\nverus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'\n```\nThis will return an array of block hashes with their corresponding logical timestamps within the specified timestamp range.",
            "getblockhashes timestamp Returns array of hashes of blocks within the timestamp range provided. Arguments: 1. high     (numeric, required) The newer block timestamp 2. low     (numeric, required) The older block timestamp 3. options   (string, required) A json object   {    \"noOrphans\":true  (boolean) will only include blocks on the main chain    \"logicalTimes\":true  (boolean) will include logical timestamps with hashes   } Result: [  \"hash\"     (string) The block hash ] [  {   \"blockhash\": (string) The block hash   \"logicalts\": (numeric) The logical timestamp  } ] Examples: > verus getblockhashes 1231614698 1231024505 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockhashes\", \"params\": [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ > verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'",
            "./raw_text_input_api_text/getblockhashes"
        ]
    ],
    "will",
    "be",
    "replaced",
    "fee60fcb-ce9e-44e9-9be8-b01ff0f701bc"
]