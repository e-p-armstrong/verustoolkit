[
    [
        [
            "What is Verus Vault, and what benefits does it provide?",
            "Verus Vault is a decentralized solution that provides an additional layer of blockchain protection and decentralized funds recovery for VerusIDs, NFTs, and other assets. It offers time locks for various purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, users can protect and recover their funds, preserving their assets and generational blockchain wealth from common forms of crypto loss or theft, without relying on a bank.",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]' ```## Signing transactions from multi-signature IDs (testnet and mainnet) Create transaction, get raw transaction data:  ``` verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]' verus z_getoperationstatus <operation_id_returned_by_sendcurrency> ``` Take the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:  ``` verus signrawtransaction <raw_hex_transaction> ``` After the last necessary signature is applied, broadcast on the network using:  ``` verus sendrawtransaction <raw_hex_signed_transaction> ```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet With an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of a locked VerusID, and how can it be protected from unauthorized access?",
            "A locked VerusID provides an additional layer of security and protection against unauthorized access. It allows the owner to set a predetermined unlock time, which must be waited out before funds can be spent or accessed. This gives the owner, or a designated revocation and recovery authority, time to detect and respond to any unauthorized unlock attempts, effectively preventing the 5-dollar wrench attack. The lock can be revoked and recovered by the designated authority identities, circumventing the lock.",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]' ```## Signing transactions from multi-signature IDs (testnet and mainnet) Create transaction, get raw transaction data:  ``` verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]' verus z_getoperationstatus <operation_id_returned_by_sendcurrency> ``` Take the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:  ``` verus signrawtransaction <raw_hex_transaction> ``` After the last necessary signature is applied, broadcast on the network using:  ``` verus sendrawtransaction <raw_hex_signed_transaction> ```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet With an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are some features of the new Verus Multicurrency, Multichain, DeFi Enabled Testnet?",
            "The new Verus Multicurrency, Multichain, DeFi Enabled Testnet offers an easy-to-use GUI for basic operations and a command-line interface for more advanced functions. It allows users to create new identities, currencies, liquidity pools, and blockchains without any programming knowledge. Users can send currencies worldwide on the same chain or across blockchains with ease, and even convert currencies to others on the network without an exchange by sending to themselves and converting along the way.",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]' ```## Signing transactions from multi-signature IDs (testnet and mainnet) Create transaction, get raw transaction data:  ``` verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]' verus z_getoperationstatus <operation_id_returned_by_sendcurrency> ``` Take the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:  ``` verus signrawtransaction <raw_hex_transaction> ``` After the last necessary signature is applied, broadcast on the network using:  ``` verus sendrawtransaction <raw_hex_signed_transaction> ```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet With an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I sign transactions from multi-signature IDs on the Verus network?",
            "To sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency`.\n2. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n3. Use `verus signrawtransaction` to sign the raw transaction data with each additional wallet.\n4. After the last necessary signature is applied, broadcast the signed transaction on the network using `verus sendrawtransaction`.",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]' ```## Signing transactions from multi-signature IDs (testnet and mainnet) Create transaction, get raw transaction data:  ``` verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]' verus z_getoperationstatus <operation_id_returned_by_sendcurrency> ``` Take the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:  ``` verus signrawtransaction <raw_hex_transaction> ``` After the last necessary signature is applied, broadcast on the network using:  ``` verus sendrawtransaction <raw_hex_signed_transaction> ```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet With an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I export an ID to a PBaaS chain using the command line and Verus?",
            "You can export an ID to a PBaaS chain by using the `sendcurrency` command with the following format:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nThis command exports the ID \"IDNAME@\" to the PBaaS chain \"PBaaSChainName\".",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]' ```## Signing transactions from multi-signature IDs (testnet and mainnet) Create transaction, get raw transaction data:  ``` verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]' verus z_getoperationstatus <operation_id_returned_by_sendcurrency> ``` Take the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:  ``` verus signrawtransaction <raw_hex_transaction> ``` After the last necessary signature is applied, broadcast on the network using:  ``` verus sendrawtransaction <raw_hex_signed_transaction> ```### New Verus Multicurrency, Multichain, DeFi Enabled Testnet With an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "8d238aee-86a9-4ca4-9194-aceccf5960f4"
]