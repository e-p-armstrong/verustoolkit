[
    [
        [
            "What does the `getmininginfo` command do in Verus, and what information does it return?",
            "The `getmininginfo` command returns a JSON object containing various mining-related information about the current state of the Verus network. This information includes, but is not limited to:\n\n* The current block number\n* The last block size\n* The last block transaction count\n* The average block fees over the past 100 blocks\n* The current difficulty\n* The estimated total staking supply\n* Current errors\n* Whether generation (mining or staking) is on or off\n* The processor limit for generation\n* The average local solution rate in Sol/s since the node was started\n* The estimated network solution rate in Sol/s\n* The size of the memory pool\n* Whether the node is on the testnet or not\n* The current network name\n* Whether this instance is mining or staking\n* Whether staking is enabled\n* The number of CPU threads mining\n* The number of blockchains being merge mined with\n* A list of blockchain names being merge mined with",
            "### `getmininginfo` Returns a json object containing mining-related information. #### Result: ``` {  \"blocks\": nnn,       (numeric) The current block  \"currentblocksize\": nnn,  (numeric) The last block size  \"currentblocktx\": nnn,   (numeric) The last block transaction  \"averageblockfees\": xxx.xxxxx (numeric) The average block fees, in addition to block reward, over the past 100 blocks  \"difficulty\": xxx.xxxxx  (numeric) The current difficulty  \"stakingsupply\": xxx.xxxxx (numeric) The current estimated total staking supply  \"errors\": \"...\"      (string) Current errors  \"generate\": true|false   (boolean) If the generation is on or off (see getgenerate or setgenerate calls)  \"genproclimit\": n     (numeric) The processor limit for generation. -1 if no generation. (see getgenerate or setgenerate calls)  \"localsolps\": xxx.xxxxx  (numeric) The average local solution rate in Sol/s since this node was started  \"networksolps\": x     (numeric) The estimated network solution rate in Sol/s  \"pooledtx\": n       (numeric) The size of the mem pool  \"testnet\": true|false   (boolean) If using testnet or not  \"chain\": \"xxxx\",      (string) current network name as defined in BIP70 (main, test, regtest)  \"generate\": true|false   (boolean) If this instance is mining or staking  \"staking\": true|false   (boolean) If staking  \"numthreads\": n      (numeric) Number of CPU threads mining  \"mergemining\": n      (numeric) Number of blockchains we are merge mining with  \"mergeminedchains\": []   (optional, list of names) Blockchain names that are being merge mined with this blockchain } ``` Examples: ```bash > verus getmininginfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworkhashps ( blocks height )` DEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.Returns the estimated network solutions per second based on the last n blocks. Pass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window. Pass in [height] to estimate the network speed at the time when a certain block was found.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e368f836-af44-4b94-8f30-5ebb8e1076b1"
]