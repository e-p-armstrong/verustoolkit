[
    "How can I use the `gettransaction` command in Verus to retrieve information about a specific transaction?",
    "You can use the `gettransaction` command in Verus to retrieve information about a specific transaction by providing the transaction ID as an argument. Here are a few examples:\n\n* Using the command line: `verus gettransaction \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"`\n* Using the command line with verbose output: `verus gettransaction \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\" true`\n* Using curl: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettransaction\", \"params\": [\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`",
    "#### Result: ```json {  \"amount\" : x.xxx,    (numeric) The transaction amount in VRSC  \"confirmations\" : n,   (numeric) The number of confirmations  \"blockhash\" : \"hash\", (string) The block hash  \"blockindex\" : xx,    (numeric) The block index  \"blocktime\" : ttt,    (numeric) The time in seconds since epoch (1 Jan 1970 GMT)  \"txid\" : \"transactionid\",  (string) The transaction id.  \"time\" : ttt,      (numeric) The transaction time in seconds since epoch (1 Jan 1970 GMT)  \"timereceived\" : ttt,  (numeric) The time received in seconds since epoch (1 Jan 1970 GMT)  \"details\" : [   {    \"account\" : \"accountname\", (string) DEPRECATED. The account name involved in the transaction, can be \"\" for the default account.    \"address\" : \"VRSC_address\",  (string) The VRSC address involved in the transaction    \"category\" : \"send|receive\",  (string) The category, either 'send' or 'receive'    \"amount\" : x.xxx         (numeric) The amount in VRSC    \"vout\" : n,            (numeric) the vout value   }   ,...  ],  \"vjoinsplit\" : [   {    \"anchor\" : \"treestateref\",     (string) Merkle root of note commitment tree    \"nullifiers\" : [ string, ... ]   (string) Nullifiers of input notes    \"commitments\" : [ string, ... ]   (string) Note commitments for note outputs    \"macs\" : [ string, ... ]      (string) Message authentication tags    \"vpub_old\" : x.xxx         (numeric) The amount removed from the transparent value pool    \"vpub_new\" : x.xxx,         (numeric) The amount added to the transparent value pool   }   ,...  ],  \"hex\" : \"data\"     (string) Raw data for transaction } ```Examples: ```bash > verus gettransaction \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\" > verus gettransaction \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\" true > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettransaction\", \"params\": [\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getunconfirmedbalance` Returns the server's total unconfirmed balance### `getwalletinfo` Returns an object containing various wallet state info.",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]