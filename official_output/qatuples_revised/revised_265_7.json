[
    "What is the argument that can be passed to the `importwallet` command?",
    "The `importwallet` command takes one argument:\n\n1. `filename`: The path to the wallet file to be imported (required).",
    "#### Arguments: 1. \"verusprivkey\"  (string, required) The private key (see dumpprivkey) 2. \"label\"      (string, optional, default=\"\") An optional label 3. rescan        (boolean, optional, default=true) Rescan the wallet for transactionsNote: This call can take minutes to complete if rescan is true.Examples:Dump a private key ```bash > verus dumpprivkey \"myaddress\" ``` Import the private key with rescan ```bash > verus importprivkey \"mykey\" ``` Import using a label and without rescan ```bash > verus importprivkey \"mykey\" \"testing\" false ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"importprivkey\", \"params\": [\"mykey\", \"testing\", false] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `importwallet \"filename\"` Imports taddr keys from a wallet dump file (see dumpwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus dumpwallet \"nameofbackup\" ``` Import the wallet ```bash > verus importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `keypoolrefill ( newsize )` Fills the keypool.Arguments 1. newsize   (numeric, optional, default=100) The new keypool sizeExamples: ```bash > verus keypoolrefill > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"keypoolrefill\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `listaccounts ( minconf includeWatchonly)` DEPRECATED. Returns Object that has account names as keys, account balances as values.#### Arguments: 1. minconf     (numeric, optional, default=1) Only include transactions with at least this many confirmations 2. includeWatchonly (bool, optional, default=false) Include balances in watchonly addresses (see 'importaddress')#### Result: ```json {           (json object where keys are account names, and values are numeric balances  \"account\": x.xxx, (numeric) The property name is the account name, and the value is the total balance for the account.  ... } ```Examples:",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]