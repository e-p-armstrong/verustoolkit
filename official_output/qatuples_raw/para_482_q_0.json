[
    "What information is required to define a PBaaS blockchain in Verus?",
    "To define a PBaaS blockchain in Verus, you need to provide the following information in a JSON format:\n\n1. The name of the chain (`\"name\"`).\n2. An integer value for the chain options (`\"options\"`).\n3. A list of currencies that the chain's native currency can be converted into (`\"currencies\"`).\n4. A list of conversion ratios between the chain's native currency and each currency on the chain (`\"conversions\"`).\n5. An array of eras, each with a block reward, reward decay, halving, and end of era (`\"eras\"`).\n6. A list of VerusIDs that will serve as notaries on the chain (`\"notaries\"`).\n7. The minimum number of notaries needed to confirm a block (`\"minnotariesconfirm\"`).\n8. An array of nodes, each with a network address and node identity (`\"nodes\"`).\n9. The name of the gateway converter (`\"gatewayconvertername\"`).\n10. The initial issuance of the gateway converter (`\"gatewayconverterissuance\"`).\n\nAdditionally, you need to provide a separate JSON object for the bridge definition, which includes:\n\n1. A list of currencies supported by the bridge (`\"currencies\"`).\n2. An array of initial contributions for each currency (`\"initialcontributions\"`).\n3. The initial supply of the bridge's native token (`\"initialsupply\"`).",
    "### Defining a PBaaS blockchain ```json  {  \"name\": \"PBaaSChain\",  \"options\": 264,  \"currencies\": [   \"VRSCTEST\"  ],  \"conversions\": [   1  ],  \"eras\": [   {    \"reward\": 1200000000,    \"decay\": 0,    \"halving\": 0,    \"eraend\": 0   }  ],  \"notaries\": [   \"Notary1@\",   \"Notary2@\",   \"Notary3@\",  ],  \"minnotariesconfirm\": 2,  \"nodes\": [   {    \"networkaddress\": \"111.111.111.111:10000\",    \"nodeidentity\": \"Node1@\"   },   {    \"networkaddress\": \"111.111.111.112:10000\",    \"nodeidentity\": \"Node2@\"   }  ],  \"gatewayconvertername\": \"Bridge\",  \"gatewayconverterissuance\": 1000000 } ``` The bridge definition has overridable defaults ```json  {  \"currencies\": [   \"VRSCTEST\",   \"PBaaSChain\",   \"USD\"  ],  \"initialcontributions\": [   380228.12033701,   0,   1000000  ],  \"initialsupply\": 3000000 } ```Now pass those definitions to `definecurrency` ```shell ./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}' ```### Limitations in multi-currency to be aware of: 1. (GUI and CLI) You will not be able to make a currency from an ID that has a properly encoded i-address as its actual name, not its calculated ID. Generally, the advice is \u201cdon\u2019t do that\u201d. Using an i-address when referring to a currency will only be interpreted as referring to the currency or identity which has that i-address calculated based on its name registration. As a general rule, making an ID with an i-address as its name is not prevented by the protocol, but will cause problems whenever an i-address or name may be used (many cases) and will not be supported for creating currencies. To reduce any potential for user confusion, even though the naming system provides will also be expanding the set of characters that will not be allowed for currency registrations.2. (GUI) If a currency is supported in the Verus Desktop already, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation is considered errata for this testnet release and will not be a limitation before mainnet availability.# Disclaimer",
    "./raw_txt_input/release_notes.md"
]