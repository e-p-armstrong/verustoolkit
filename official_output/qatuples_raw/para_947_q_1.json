[
    "What are some common parameters that can be specified when defining a new chain in Verus?",
    "Some common parameters that can be specified when defining a new chain in Verus include:\n\n* `name`: The name of the chain\n* `paymentaddress`: The address that will receive payment for transactions on the chain\n* `premine`: The amount of currency that will be premined to the payment address\n* `initialcontribution`: The initial contribution amount for the chain\n* `conversion`: The conversion rate for contributions to the native chain currency\n* `minpreconvert` and `maxpreconvert`: The minimum and maximum amounts that can be converted to the native chain currency\n* `launchfee`: The fee for launching the chain\n* `billingperiod`: The billing period for the chain\n* `notarizationreward`: The reward for notarizing blocks on the chain\n* `eras`: An array of era definitions, specifying the block reward, decay, halving, and end of each era\n* `nodes`: An array of node definitions, specifying the network addresses and payment addresses for each node",
    "**Sample chain definition:** ``` ./verusd -chain=VRSCTEST definechain '{\"name\":\"RESERVEWITHPREMINE\",\"paymentaddress\":\"R9LkTaMn1XpjeorE4RjM6pMcy5Nxkx9jPM\",\"premine\":50000000000000,\"initialcontribution\":5000000000000,\"conversion\":100000000,\"minpreconvert\":45000000000000,\"maxpreconvert\":100000000000000,\"launchfee\":0,\"billingperiod\":14400,\"notarizationreward\":100000000000,\"eras\":[{\"reward\":5000000000,\"decay\":0,\"halving\":0,\"eraend\":0,\"eraoptions\":1}],\"nodes\":[{\"networkaddress\":\"ipaddress:port\",\"paymentaddress\":\"R9LkTaMn1XpjeorE4RjM6pMcy5Nxkx9jPM\"}, {\"networkaddress\":\"2ndipaddress:port\",\"paymentaddress\":\"R9LkTaMn1XpjeorE4RjM6pMcy5Nxkx9jPM\"}]}' ```The example above defines a chain that emits a premine to the indicated address and also converts all contributions up to a maximum amount to the native chain currency at launch at a 100%, 1:1 conversion price. All contributions will enter the currency's reserve deposits, and the more contributions on this chain, the higher the starting reserve ratio will be. If the minimum contributions are not met, the chain will fail to start and all contributions can be spent back to the original contributors.The initial price in reserve at chain launch will start at 1.0, but there will be some fees to be paid in the early blocks that will come in as reserve currency. All fees in reserve that are converted to a fractional reserve currency are effective purchases of the fractional reserve currency, and based on a reversible formula, a currency's price will rise or fall on conversion from or to reserves with a level of volatility that is inversely related to the reserve ratio. A currency with a reserve ratio of 1 will never change its price when converting to or from its reserve. A currency with a reserve of 0.1 or 10% will rise or fall fairly quickly when converted to or from, depending on the amount of conversion relative to the total currency reserves on deposit.**Once a chain is made, anyone running the local VRSCTEST chain can connect to any defined chain with the command:** ``` ./verusd -chain=SOMECOIN ``` On first connection, a local config file is created, and VRSCTEST will not need to run to connect. However, it will be needed to merge mine.The presence of a correct config file for any chain, which are kept in .verustest/PBAAS/CHAINNAME, which is the home directory for a PBaaS chain, enables the chain to load as an independent chain.## Here are a few examples of cross-chain operations using the command line:",
    "./raw_txt_input/release_notes.md"
]