[
    "What is the purpose of the `signdata` command in Verus?",
    "The `signdata` command is used to generate a hash of the provided data and sign it with the specified parameters. It returns the hash and the signature.",
    "### `setidentitytrust '{\"clearall\": bool, \"setratings\":{\"id\":JSONRatingObject,...}, \"removeratings\":[\"id\",...], \"identitytrustmode\":<n>}'` #### Arguments: ```json {   \"clearall\": bool               (bool, optional) clears all wallet identity trust lists before adding, removing, or trust mode operations   \"setratings\":{\"id\":JSONRatingObject,...}   (obj, optional) replaces ratings for specified IDs with those given   \"removeratings\":[\"id\",...]          (strarray, optional) erases ratings for IDs specified   \"identitytrustmode\": <n>           (number, optional) 0 = no restriction on sync, 1 = only sync to IDs rated approved, 2 = sync to all IDs but those on block list } ```#### Result no return on success, else error #### Examples ```bash > verus setidentitytrust '{\"clearall\": bool, \"setratings\":{\"id\":JSONRatingObject,...}, \"removeratings\":[\"id\",...], \"identitytrustmode\":<n>}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setidentitytrust\", \"params\": ['{\"clearall\": bool, \"setratings\":{\"id\":JSONRatingObject,...}, \"removeratings\":[\"id\",...], \"identitytrustmode\":<n>}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `signdata 'json'` Full json: ```json {  \"address\":\"i-address or friendly name (t-address will result in simple signature w/indicated hash and prefix, nothing else)\",  \"prefixstring\":\"extra string that is hashed during signature and must be supplied for verification\",   \"filename\":\"filepath/filename\" |   \"message\":\"any message\" |   \"vdxfdata\":\"vdxf encoded data\" |   \"messagehex\":\"hexdata\" |   \"messagebase64\":\"base64data\" |   \"datahash\":\"256bithex\" |   \"mmrdata\":[{    \"filename | serializedhex | serializedbase64 | vdxfdata | message | datahash\":\"str\"} |    \"strdata\"   ],  \"vdxfkeys\": [\"vdxfkey i-address\", ...],  \"vdxfkeynames\":[\"vdxfkeyname, object for getvdxfid API, or friendly name ID -- no i-addresses\", ...],  \"boundhashes\":[\"hexhash\", ...],  \"hashtype\": \"sha256\" | \"sha256D\" | \"blake2b\" | \"keccak256\",  \"encrypttoaddress\": \"sapling address\",       granularly encrypt all data, either all decryptable with viewing key or parts using unique, SSKs  \"createmmr\":\"bool\",                 if true, 1 or more objects will be put into a merkle mountain range and the root signed  \"signature\":\"currentsig\" } ``` Generates a hash (SHA256 default if \"hashtype\" not specified) of the data, returns the hash, and signs it with parameters specified #### Arguments: ```json {  \"address\":\"t-addr or identity\"                (string, required) The transparent address or identity to use for signing.  \"file",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]