[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to assist you in understanding Verus. What's on your mind today?\n\n**User:**\nI'm trying to tokenize ID control as a next-generation NFT in Verus. How do I define a currency for this using the command line?\n\n**AI Assistant:**\nTo define a currency for tokenizing ID control as a next-generation NFT in Verus using the command line, you can use the `definecurrency` command with the following format:\n\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\n\nDoes that help? Do you have any further questions about tokenizing ID control as a next-generation NFT in Verus?\n\n**User:**\nActually, yes, I do. What are the requirements for tokenizing ID control as a next-generation NFT in Verus?\n\n**AI Assistant:**\nTo tokenize ID control as a next-generation NFT in Verus, the currency definition must have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0. Do you have any more questions about these requirements?\n\n**User:**\nNo, that makes sense. But how do I create an identity with a fractional currency as its parent in Verus?\n\n**AI Assistant:**\nTo create an identity with a fractional currency as its parent in Verus, you can use the `registernamecommitment` command with the following format:\n\n```\nverus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\n```\n\nFor example:\n\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nYou must also specify the parent in the identity definition. Then, you can register the identity using the `registeridentity` command with the following format:\n\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 sourceoffunds\n```\n\nDoes that help? Do you have any more questions about creating an identity with a fractional currency as its parent in Verus?\n\n**User:**\nNo, that's all clear. But, I've been experimenting with different scenarios and want to reset my testnet in Verus. How do I do that?\n\n**AI Assistant:**\nTo reset your testnet in Verus, make sure Verus is closed (and no testnet daemon is running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest, and re-add verustest native):\n\n* Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n* Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application Support/VerusTest`\n* Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`\n\nAfter that, your testnet should be reset. Do you have any more questions about resetting your testnet in Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I define a currency for tokenizing ID control as a next-generation NFT in Verus using the command line?",
            "You can define a currency for tokenizing ID control as a next-generation NFT in Verus using the `definecurrency` command with the following format:\n\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```",
            "### Tokenizing ID control (next generation NFT): The currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0. ``` verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}' ```The rest of these release notes are the same as the prior release. Drop by pbaas-development to start building your vision on Verus while helping get PBaaS ready for mainnet!## Testnet Reset To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest` - Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application\\ Support/VerusTest` - Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`# Creating an identity with a fractional currency as its parent `registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```json # verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds verus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny ```` Specify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address ```json # verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the requirements for tokenizing ID control as a next-generation NFT in Verus?",
            "To tokenize ID control as a next-generation NFT in Verus, the currency definition must have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.",
            "### Tokenizing ID control (next generation NFT): The currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0. ``` verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}' ```The rest of these release notes are the same as the prior release. Drop by pbaas-development to start building your vision on Verus while helping get PBaaS ready for mainnet!## Testnet Reset To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest` - Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application\\ Support/VerusTest` - Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`# Creating an identity with a fractional currency as its parent `registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```json # verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds verus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny ```` Specify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address ```json # verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I create an identity with a fractional currency as its parent in Verus?",
            "To create an identity with a fractional currency as its parent in Verus, you can use the `registernamecommitment` command with the following format:\n\n```\nverus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\n```\n\nFor example:\n\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nYou must also specify the parent in the identity definition. Then, you can register the identity using the `registeridentity` command with the following format:\n\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 sourceoffunds\n```",
            "### Tokenizing ID control (next generation NFT): The currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0. ``` verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}' ```The rest of these release notes are the same as the prior release. Drop by pbaas-development to start building your vision on Verus while helping get PBaaS ready for mainnet!## Testnet Reset To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest` - Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application\\ Support/VerusTest` - Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`# Creating an identity with a fractional currency as its parent `registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```json # verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds verus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny ```` Specify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address ```json # verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I reset my testnet in Verus?",
            "To reset your testnet in Verus, make sure Verus is closed (and no testnet daemon is running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest, and re-add verustest native):\n\n* Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n* Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application Support/VerusTest`\n* Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`",
            "### Tokenizing ID control (next generation NFT): The currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0. ``` verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}' ```The rest of these release notes are the same as the prior release. Drop by pbaas-development to start building your vision on Verus while helping get PBaaS ready for mainnet!## Testnet Reset To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest` - Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application\\ Support/VerusTest` - Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`# Creating an identity with a fractional currency as its parent `registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```json # verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds verus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny ```` Specify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address ```json # verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_txt_input/release_notes.md"
        ]
    ]
]