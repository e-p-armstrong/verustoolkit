[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to help with any questions you have about Verus. What's on your mind today?\n\n**User:**\nI'm trying to import a viewing key using the command line. Can you help me with that?\n\n**AI Assistant:**\nYou can import a viewing key in Verus using the command `verus z_importviewingkey \"vkey\"`. You can also specify additional arguments to control the rescan behavior. Would you like more information on the rescan behavior or is there something else I can help you with?\n\n**User:**\nActually, I'm also curious about the `z_importkey` command. What are the arguments for that command?\n\n**AI Assistant:**\nThe `z_importkey` command takes three arguments: \n1. \"mykey\" (string, required) - the zkey to be imported \n2. rescan (string, optional, default=\"whenkeyisnew\") - whether to rescan the wallet for transactions \n3. startHeight (numeric, optional, default=0) - the block height to start the rescan from\nDo you have any other questions about the `z_importkey` command or Verus in general?\n\n**User:**\nI have another question. How can I import a wallet export file in Verus using the command line?\n\n**AI Assistant:**\nYou can import a wallet export file in Verus using the command `verus z_importwallet \"filename\"`. This command imports taddr and zaddr keys from the specified wallet export file. Do you have any questions about wallet export files or the import process?\n\n**User:**\nI'm still a bit unclear about the `z_importviewingkey` command. What is its purpose?\n\n**AI Assistant:**\nThe `z_importviewingkey` command in Verus is used to add a viewing key to your wallet. A viewing key is used to view the balance and transactions of a shielded address. It doesn't allow you to spend funds, but rather to view the activity related to the address. Does that clarify things?\n\n**User:**\nThat makes sense. What about the `z_listaddresses` command? What does it do?\n\n**AI Assistant:**\nThe `z_listaddresses` command in Verus returns the list of Sprout and Sapling shielded addresses belonging to the wallet. You can also specify an optional argument `includeWatchonly` to include watchonly addresses in the list. Do you have any questions about shielded addresses or the `z_listaddresses` command?\n\n**User:**\nAnother question I have is about the `z_importkey` command. What is its purpose?\n\n**AI Assistant:**\nThe `z_importkey` command in Verus is used to import a zkey into your wallet. It can also be used to rescan the wallet for transactions. Do you have any questions about zkeys or the import process?\n\n**User:**\nFinally, how can I export a zkey in Verus using the command line?\n\n**AI Assistant:**\nYou can export a zkey in Verus using the command `verus z_exportkey \"myaddress\"`. Do you have any other questions about Verus or its commands?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How can I import a viewing key in Verus using the command line?",
            "You can import a viewing key in Verus using the command `verus z_importviewingkey \"vkey\"`. You can also specify additional arguments to control the rescan behavior.",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What are the arguments for the `z_importkey` command?",
            "The `z_importkey` command takes three arguments: \n1. \"mykey\" (string, required) - the zkey to be imported \n2. rescan (string, optional, default=\"whenkeyisnew\") - whether to rescan the wallet for transactions \n3. startHeight (numeric, optional, default=0) - the block height to start the rescan from",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How can I import a wallet export file in Verus using the command line?",
            "You can import a wallet export file in Verus using the command `verus z_importwallet \"filename\"`. This command imports taddr and zaddr keys from the specified wallet export file.",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `z_importviewingkey` command in Verus?",
            "The `z_importviewingkey` command in Verus is used to add a viewing key to your wallet. A viewing key is used to view the balance and transactions of a shielded address.",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `z_listaddresses` command in Verus?",
            "The `z_listaddresses` command in Verus returns the list of Sprout and Sapling shielded addresses belonging to the wallet. You can also specify an optional argument `includeWatchonly` to include watchonly addresses in the list.",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `z_importkey` command in Verus?",
            "The `z_importkey` command in Verus is used to import a zkey into your wallet. It can also be used to rescan the wallet for transactions.",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How can I export a zkey in Verus using the command line?",
            "You can export a zkey in Verus using the command `verus z_exportkey \"myaddress\"`.",
            "Export a zkey ```bash > verus z_exportkey \"myaddress\" ``` Import the zkey with rescan ```bash > verus z_importkey \"mykey\" ``` Import the zkey with partial rescan ```bash > verus z_importkey \"mykey\" whenkeyisnew 30000 ``` Re-import the zkey with longer partial rescan ```bash > verus z_importkey \"mykey\" yes 200000 ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importkey\", \"params\": [\"mykey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importviewingkey \"vkey\" ( rescan startHeight )` Adds a viewing key (as returned by z_exportviewingkey) to your wallet.#### Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from 4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key ```bash > verus z_importviewingkey \"vkey\" ``` Import the viewing key without rescan ```bash > verus z_importviewingkey \"vkey\", no ``` Import the viewing key with partial rescan ```bash > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 ``` Re-import the viewing key with longer partial rescan ```bash > verus z_importviewingkey \"vkey\" yes 20000 ``` Import the viewing key for Sapling address ```bash > verus z_importviewingkey \"vkey\" no 0 \"zaddr\" ``` As a JSON-RPC call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_importwallet \"filename\"` Imports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments: 1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet ```bash > verus z_exportwallet \"nameofbackup\" ``` Import the wallet ```bash > verus z_importwallet \"path/to/exportdir/nameofbackup\" ``` Import using the json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listaddresses ( includeWatchonly )` Returns the list of Sprout and Sapling shielded addresses belonging to the wallet.#### Arguments: 1. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ]
]