[
    "## Conversation that answers the provided questions:\\nAI Assistant: Hello and welcome! I'm here to help you understand the Verus blockchain. Feel free to ask away.\\nUser: How do you invalidate a block in the Verus blockchain?\\nAI Assistant: To invalidate a block, use the command `./verus invalidateblock <earliest incorrect blockhash>` with the earliest incorrect block hash from your system. Do you need assistance with any other steps in the process?\\n\\nUser: How do you reconsider a block in the Verus blockchain?\\nAI Assistant: To reconsider a block, use the command `./verus reconsiderblock <correct blockhash>` with the correct block hash that the Verus explorer gave you for the block you just locally invalidated. Do you need any further help with this process?\\n\\nUser: What should you do if the block hash from the explorer is different than the one from your command?\\nAI Assistant: If the block hash from the explorer is different than the one from your command, you should repeat steps 1 and 2 until you find the earliest block that is different from the explorer's block hash. Is there anything else you'd like to know?\\n\\nUser: How do you check if the block hash your command gave you matches the block hash shown on the Verus explorer?\\nAI Assistant: To check if the block hash your command gave you matches the block hash shown on the Verus explorer, simply compare the two. If they are the same, the block hash is correct. If they are different, the block hash from your command is incorrect. Do you have any more questions about this process?\\n\\nUser: What command would you use to retrieve the block hash of a specific block number in the Verus blockchain?\\nAI Assistant: The command you would use is `./verus getblockhash <suspected blocknumber>`. Do you need assistance with anything else related to the Verus blockchain?\\n\\nUser: When your Verus daemon synchronizes with a node on the correct chain, how quickly does this usually occur?\\nAI Assistant: Once your daemon connects to a node that is on the correct chain, it will quickly synchronize to reach consensus with the rest of the Verus network. Note that the exact speed of synchronization can vary due to factors such as network speed and hardware capabilities. For the most up-to-date information, refer to the last revision date, which was 2020-11-11. Let me know if you have any more questions.",
    "AI Assistant",
    "A conversation between a helpful AI Assistant, and a user.",
    "N/A",
    [
        [
            "How do you invalidate a block in the Verus blockchain?",
            "Use the command `./verus invalidateblock <earliest incorrect blockhash>` with the earliest incorrect block hash from your system.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "How do you reconsider a block in the Verus blockchain?",
            "Use the command `./verus reconsiderblock <correct blockhash>` with the correct block hash that the Verus explorer gave you for the block you just locally invalidated.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "What should you do if the block hash from the explorer is different than the one from your command?",
            "Repeat steps 1 and 2 until you find the earliest block that is different from the explorer's block hash.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "How do you check if the block hash your command gave you matches the block hash shown on the Verus explorer?",
            "Compare the block hash your command gave you against the block hash the Verus explorer shows. If they are the same, the block hash is correct. If they are different, the block hash from your command is incorrect.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "What command would you use to retrieve the block hash of a specific block number in the Verus blockchain?",
            "`./verus getblockhash <suspected blocknumber>`",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "When your Verus daemon synchronizes with a node on the correct chain, how quickly does this usually occur?",
            "Once your daemon connects to a node that is on the correct chain, it will quickly synchronize to reach consensus with the rest of the Verus network.\\nNote: Last revision date was 2020-11-11.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ]
    ]
]