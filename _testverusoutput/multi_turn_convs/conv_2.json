[
    "## Conversation that answers the provided questions:\\nAI Assistant: Hello! I'm here to help with any questions you might have. Feel free to ask away!\\nUser: I'm having some trouble with the Verus blockchain, and I have a question. When your Verus daemon synchronizes with a node on the correct chain, how quickly does this usually occur?\\nAI Assistant: That question is specifically for the Verus blockchain. Once your daemon connects to a node that is on the correct chain, it will quickly synchronize to reach consensus with the rest of the Verus network. Note that the time it takes can be influenced by factors like your internet speed and the current load on the network. Do you have any further questions about Verus or blockchains?\\n\\nUser: Okay, thank you. What should I do if the block hash from the explorer is different than the one from my command?\\nAI Assistant: In the case where the block hash from the explorer is different than the one from your command, you should repeat steps 1 and 2 until you find the earliest block that is different from the explorer's block hash. Remember to mark the Verus block time and refer back to it during your debugging process.\\nUser: That was helpful. How do I check if the block hash my command gave you matches the block hash shown on the Verus explorer?\\nAI Assistant: To check if the block hash your command gave you matches the block hash shown on the Verus explorer, simply compare the two. If they are the same, the block hash is correct. If they are different, the block hash from your command is incorrect. This might indicate a synchronization issue or a problem with the node your daemon is connected to.\\nUser: I see. How do I retrieve the block hash of a specific block number in the Verus blockchain?\\nAI Assistant: To retrieve the block hash of a specific block number in the Verus blockchain, you would use the command `./verus getblockhash <suspected blocknumber>`. Replace `<suspected blocknumber>` with the actual block number you're interested in.\\n\\nUser: I found a problematic block hash. How do I invalidate a block in the Verus blockchain?\\nAI Assistant: If you need to invalidate a block in the Verus blockchain, use the command `./verus invalidateblock <earliest incorrect blockhash>`, replacing `<earliest incorrect blockhash>` with the earliest incorrect block hash from your system. \\n\\nUser: I think I made a mistake while invalidating. How do I reconsider a block in the Verus blockchain?\\nAI Assistant: If you need to reconsider a block in the Verus blockchain, you can use the command `./verus reconsiderblock <correct blockhash>`, replacing `<correct blockhash>` with the correct block hash that the Verus explorer gave you for the block you just locally invalidated. Remember to perform this action only if you're certain that the block hash you previously invalidated was indeed incorrect.",
    "AI Assistant",
    "A conversation between a helpful AI Assistant, and a user.",
    "N/A",
    [
        [
            "When your Verus daemon synchronizes with a node on the correct chain, how quickly does this usually occur?",
            "Once your daemon connects to a node that is on the correct chain, it will quickly synchronize to reach consensus with the rest of the Verus network.\\nNote: Last revision date was 2020-11-11.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "What should you do if the block hash from the explorer is different than the one from your command?",
            "Repeat steps 1 and 2 until you find the earliest block that is different from the explorer's block hash.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "How do you check if the block hash your command gave you matches the block hash shown on the Verus explorer?",
            "Compare the block hash your command gave you against the block hash the Verus explorer shows. If they are the same, the block hash is correct. If they are different, the block hash from your command is incorrect.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "What command would you use to retrieve the block hash of a specific block number in the Verus blockchain?",
            "`./verus getblockhash <suspected blocknumber>`",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "How do you invalidate a block in the Verus blockchain?",
            "Use the command `./verus invalidateblock <earliest incorrect blockhash>` with the earliest incorrect block hash from your system.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ],
        [
            "How do you reconsider a block in the Verus blockchain?",
            "Use the command `./verus reconsiderblock <correct blockhash>` with the correct block hash that the Verus explorer gave you for the block you just locally invalidated.",
            "Search for the **earliest** block that not matches the blockchain:   `./verus getblockhash <suspected blocknumber>` will show you the blockhash for the blocknumber you filled in   The response will be similar to this:   `5cc7844973fb95ef17f1772ea4aba579f0d8273fb0ee6064cd8e707d1056c646` 2. Check the blockhash your command gave you against the blockhash the [explorer](https://explorer.verus.io) shows. 3. If the blockhash from the explorer is different than yours, repeat steps 1 & 2 until you find the earliest block that is different. 4. Use the **earliest incorrect blockhash** from your system to invalidate that block:   `./verus invalidateblock <earliest incorrect blockhash>`   The deamon will not give feedback on this command. 5. Now use the **correct blockhash** that the explorer gave you for the block you just locally invalidated:   `./verus reconsiderblock <correct blockhash>`   Again the daemon will not give feedback on this command. 6. Once your daemon connects to a node that is on the correct chain, it will quicly synchronize. If needed you can either restart your daemon to force new connections or manually disconnect bad nodes. (submitted by @jimboscott, Edited by Oink.vrsc@) Note: last revision date 2020-11-11.",
            "./raw_txt_input/faq-allos19_what_should_i_do_if_i_end_up_on_my_own_fork_because_of_a_network_issue_or_having_an_old_version_of_the_wallet.md"
        ]
    ]
]