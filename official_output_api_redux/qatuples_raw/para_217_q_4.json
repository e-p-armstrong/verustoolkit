[
    "What is the purpose of the `feeoffer` argument when using the `setidentitytimelock` command?",
    "The `feeoffer` argument allows you to specify a non-standard fee amount to pay for the transaction. This can be useful in certain situations where you want to control the fee paid for the transaction.",
    "Arguments - either \"unlockatblock\" or \"setunlockdelay\" must be specified and not both\n{\n \"unlockatblock\"        (number, optional) unlock at an absolute block height, countdown starts when mined into a block\n \"setunlockdelay\"        (number, optional) delay this many blocks after unlock request to unlock, can only be\n                           circumvented by revoke/recover\n}\n    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned\n    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction\n    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity\n\nResult:\n  Hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true.\n  If returntx is true, the transaction will not have been submitted and must be sent with \"sendrawtransaction\"\n  after any necessary signatures are applied in the case of multisig.\n\nExamples:\n> verus setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx)\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setidentitytimelock\", \"params\": [\"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/setidentitytimelock"
]