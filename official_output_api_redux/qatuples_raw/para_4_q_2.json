[
    "How can I use the `decodescript` command to decode a hex-encoded script in Verus?",
    "You can use the `decodescript` command to decode a hex-encoded script in Verus by running the following command:\n```\nverus decodescript \"hexstring\"\n```\nReplace `\"hexstring\"` with the actual hex-encoded script you want to decode. Alternatively, you can also use the Verus RPC interface to decode the script by sending a JSON-RPC request to the Verus server.",
    "decodescript \"hex\"\n\nDecode a hex-encoded script.\n\nArguments:\n1. \"hex\"   (string) the hex encoded script\n\nResult:\n{\n \"asm\":\"asm\",  (string) Script public key\n \"hex\":\"hex\",  (string) hex encoded public key\n \"type\":\"type\", (string) The output type\n \"reqSigs\": n,  (numeric) The required signatures\n \"addresses\": [  (json array of string)\n   \"address\"   (string) transparent address\n   ,...\n ],\n \"p2sh\",\"address\" (string) script address\n}\n\nExamples:\n> verus decodescript \"hexstring\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"decodescript\", \"params\": [\"hexstring\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/decodescript"
]