[
    "How do I use the `verifymessage` command to verify a signed message in Verus?",
    "To use the `verifymessage` command, you need to provide the address or identity that signed the message, the signature, the message itself, and optionally, a boolean to check the signature validity based on the latest identity. For example:\n\n```\nverus verifymessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"my message\"\n```\n\nThis command will return `true` if the signature is verified and `false` otherwise.",
    "verifymessage \"address or identity\" \"signature\" \"message\" \"checklatest\"\n\nVerify a signed message\n\nArguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the message.\n2. \"signature\"    (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\n3. \"message\"     (string, required) The message that was signed.\n3. \"checklatest\"   (bool, optional)  If true, checks signature validity based on latest identity. defaults to false,\n                     which determines validity of signing height stored in signature.\n\nResult:\ntrue|false  (boolean) If the signature is verified or not.\n\nExamples:\n\nCreate the signature\n> verus signmessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"my message\"\n\nVerify the signature\n> verus verifymessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"my message\"\n\nAs json rpc\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifymessage\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/verifymessage"
]