[
    [
        [
            "What is the purpose of the `getcurrencyconverters` command in Verus?",
            "The `getcurrencyconverters` command in Verus is used to retrieve a list of currencies that can satisfy a specific conversion request at or better than a target price, without considering other traffic, and having all listed currencies as reserves.",
            "getcurrencyconverters \"currency1\" \"currency2\" ... |\n           '{\"convertto\":\"currencynameorid\",\"fromcurrency\":\"sourcecurrency\" | [{\"currency\":\"sourcecurrency1\", \"targetprice\":n}, ...],\n            \"amount\":n, \"slippage\":0.01 (=1 percent slippage)}'\n\nRetrieves all currencies that will generally satisfy the request at or better than target price without other traffic and have all listed currencies as reserves\n\nArguments\n    \"currencyname\"          : \"string\" ... (string(s), one or more) all selected currencies are returned with their current state\n    \"paramobject\"           : \"object\" ... (one or more parameters) advanced query with slippage options\n    {\n      \"convertto\":\"destcurrency\"       \"string\" target currency\n      \"fromcurrency\":\"sourcecurrency\" | [...] \"string\" | object array ... (string(s), one or more) currencies to convert from\n      \"targetprice\":n | [n,...]         \"number(s)\" ...    (number(s), one or more) target price within slippage required\n      \"amount\":n                \"number\"       (number) amount of tocurrency needed\n      \"slippage\":n               \"number\"       (number) max slippage with no other conversions max is 50000000 == 50%\n    }\n\nResult:\n    \"[{currency1}, {currency2}]\" : \"array of objects\" (string) All currencies, last currency state, and last amount to convert if amount specified\n\nExamples:\n> verus getcurrencyconverters '[\"currency1\",\"currency2\",...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencyconverters\", \"params\": ['[\"currency1\",\"currency2\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencyconverters"
        ],
        [
            "How do I use the `getcurrencyconverters` command to retrieve currencies that can convert to a specific target currency?",
            "To use the `getcurrencyconverters` command, you can specify the target currency and the currencies to convert from, along with other parameters such as the target price, amount, and slippage. The command can be used in the following format:\n\n`getcurrencyconverters \"currency1\" \"currency2\"... | '{\"convertto\":\"currencynameorid\",\"fromcurrency\":\"sourcecurrency\" | [{\"currency\":\"sourcecurrency1\", \"targetprice\":n},...], \"amount\":n, \"slippage\":0.01}'`",
            "getcurrencyconverters \"currency1\" \"currency2\" ... |\n           '{\"convertto\":\"currencynameorid\",\"fromcurrency\":\"sourcecurrency\" | [{\"currency\":\"sourcecurrency1\", \"targetprice\":n}, ...],\n            \"amount\":n, \"slippage\":0.01 (=1 percent slippage)}'\n\nRetrieves all currencies that will generally satisfy the request at or better than target price without other traffic and have all listed currencies as reserves\n\nArguments\n    \"currencyname\"          : \"string\" ... (string(s), one or more) all selected currencies are returned with their current state\n    \"paramobject\"           : \"object\" ... (one or more parameters) advanced query with slippage options\n    {\n      \"convertto\":\"destcurrency\"       \"string\" target currency\n      \"fromcurrency\":\"sourcecurrency\" | [...] \"string\" | object array ... (string(s), one or more) currencies to convert from\n      \"targetprice\":n | [n,...]         \"number(s)\" ...    (number(s), one or more) target price within slippage required\n      \"amount\":n                \"number\"       (number) amount of tocurrency needed\n      \"slippage\":n               \"number\"       (number) max slippage with no other conversions max is 50000000 == 50%\n    }\n\nResult:\n    \"[{currency1}, {currency2}]\" : \"array of objects\" (string) All currencies, last currency state, and last amount to convert if amount specified\n\nExamples:\n> verus getcurrencyconverters '[\"currency1\",\"currency2\",...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencyconverters\", \"params\": ['[\"currency1\",\"currency2\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencyconverters"
        ],
        [
            "What are the possible parameters that can be specified when using the `getcurrencyconverters` command?",
            "The possible parameters that can be specified when using the `getcurrencyconverters` command include:\n\n* `convertto`: the target currency\n* `fromcurrency`: the currencies to convert from\n* `targetprice`: the target price within slippage required\n* `amount`: the amount of the target currency needed\n* `slippage`: the maximum slippage with no other conversions (max is 50%)",
            "getcurrencyconverters \"currency1\" \"currency2\" ... |\n           '{\"convertto\":\"currencynameorid\",\"fromcurrency\":\"sourcecurrency\" | [{\"currency\":\"sourcecurrency1\", \"targetprice\":n}, ...],\n            \"amount\":n, \"slippage\":0.01 (=1 percent slippage)}'\n\nRetrieves all currencies that will generally satisfy the request at or better than target price without other traffic and have all listed currencies as reserves\n\nArguments\n    \"currencyname\"          : \"string\" ... (string(s), one or more) all selected currencies are returned with their current state\n    \"paramobject\"           : \"object\" ... (one or more parameters) advanced query with slippage options\n    {\n      \"convertto\":\"destcurrency\"       \"string\" target currency\n      \"fromcurrency\":\"sourcecurrency\" | [...] \"string\" | object array ... (string(s), one or more) currencies to convert from\n      \"targetprice\":n | [n,...]         \"number(s)\" ...    (number(s), one or more) target price within slippage required\n      \"amount\":n                \"number\"       (number) amount of tocurrency needed\n      \"slippage\":n               \"number\"       (number) max slippage with no other conversions max is 50000000 == 50%\n    }\n\nResult:\n    \"[{currency1}, {currency2}]\" : \"array of objects\" (string) All currencies, last currency state, and last amount to convert if amount specified\n\nExamples:\n> verus getcurrencyconverters '[\"currency1\",\"currency2\",...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencyconverters\", \"params\": ['[\"currency1\",\"currency2\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencyconverters"
        ],
        [
            "What is the format of the result returned by the `getcurrencyconverters` command?",
            "The result returned by the `getcurrencyconverters` command is an array of objects, where each object represents a currency that can satisfy the conversion request. The format is:\n\n`\"[{currency1}, {currency2}]\" : \"array of objects\" (string)`\n\nEach object in the array contains information about the currency, its last state, and the last amount to convert if an amount was specified.",
            "getcurrencyconverters \"currency1\" \"currency2\" ... |\n           '{\"convertto\":\"currencynameorid\",\"fromcurrency\":\"sourcecurrency\" | [{\"currency\":\"sourcecurrency1\", \"targetprice\":n}, ...],\n            \"amount\":n, \"slippage\":0.01 (=1 percent slippage)}'\n\nRetrieves all currencies that will generally satisfy the request at or better than target price without other traffic and have all listed currencies as reserves\n\nArguments\n    \"currencyname\"          : \"string\" ... (string(s), one or more) all selected currencies are returned with their current state\n    \"paramobject\"           : \"object\" ... (one or more parameters) advanced query with slippage options\n    {\n      \"convertto\":\"destcurrency\"       \"string\" target currency\n      \"fromcurrency\":\"sourcecurrency\" | [...] \"string\" | object array ... (string(s), one or more) currencies to convert from\n      \"targetprice\":n | [n,...]         \"number(s)\" ...    (number(s), one or more) target price within slippage required\n      \"amount\":n                \"number\"       (number) amount of tocurrency needed\n      \"slippage\":n               \"number\"       (number) max slippage with no other conversions max is 50000000 == 50%\n    }\n\nResult:\n    \"[{currency1}, {currency2}]\" : \"array of objects\" (string) All currencies, last currency state, and last amount to convert if amount specified\n\nExamples:\n> verus getcurrencyconverters '[\"currency1\",\"currency2\",...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencyconverters\", \"params\": ['[\"currency1\",\"currency2\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getcurrencyconverters"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e9edbc61-189f-4bf4-962c-285c04d40f7a"
]