[
    [
        [
            "What does the `z_listunspent` command do in Verus?",
            "The `z_listunspent` command returns an array of unspent shielded notes with between `minconf` and `maxconf` (inclusive) confirmations. It can also be used to filter notes sent to specified addresses.",
            "z_listunspent ( minconf maxconf includeWatchonly [\"zaddr\",...] )Returns array of unspent shielded notes with between minconf and maxconf (inclusive) confirmations.\nOptionally filter to only include notes sent to specified addresses.\nWhen minconf is 0, unspent notes with zero confirmations are returned, even though they are not immediately spendable.\nResults are an array of Objects, each of which has:\n{txid, jsindex, jsoutindex, confirmations, address, amount, memo} (Sprout)\n{txid, outindex, confirmations, address, amount, memo} (Sapling)Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')\n4. \"addresses\"   (string) A json array of zaddrs (both Sprout and Sapling) to filter on. Duplicate addresses not allowed.\n  [\n   \"address\"   (string) zaddr\n   ,...\n  ]Result\n[               (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id \n  \"jsindex\" (sprout) : n,    (numeric) the joinsplit index\n  \"jsoutindex\" (sprout) : n,    (numeric) the output index of the joinsplit\n  \"outindex\" (sapling) : n,    (numeric) the output index\n  \"confirmations\" : n,    (numeric) the number of confirmations\n  \"spendable\" : true|false, (boolean) true if note can be spent by wallet, false if address is watchonly\n  \"address\" : \"address\",  (string) the shielded address\n  \"amount\": xxxxx,     (numeric) the amount of value in the note\n  \"memo\": xxxxx,      (string) hexademical string representation of memo field\n  \"change\": true|false,   (boolean) true if the address that received the note is also one of the sending addresses\n }\n ,...\n]",
            "./raw_text_input_api_text/z_listunspent"
        ],
        [
            "What are the optional arguments for the `z_listunspent` command?",
            "The optional arguments for the `z_listunspent` command are:\n\n1. `minconf`: The minimum confirmations to filter (default is 1).\n2. `maxconf`: The maximum confirmations to filter (default is 9999999).\n3. `includeWatchonly`: A boolean flag to also include watchonly addresses (default is false).",
            "z_listunspent ( minconf maxconf includeWatchonly [\"zaddr\",...] )Returns array of unspent shielded notes with between minconf and maxconf (inclusive) confirmations.\nOptionally filter to only include notes sent to specified addresses.\nWhen minconf is 0, unspent notes with zero confirmations are returned, even though they are not immediately spendable.\nResults are an array of Objects, each of which has:\n{txid, jsindex, jsoutindex, confirmations, address, amount, memo} (Sprout)\n{txid, outindex, confirmations, address, amount, memo} (Sapling)Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')\n4. \"addresses\"   (string) A json array of zaddrs (both Sprout and Sapling) to filter on. Duplicate addresses not allowed.\n  [\n   \"address\"   (string) zaddr\n   ,...\n  ]Result\n[               (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id \n  \"jsindex\" (sprout) : n,    (numeric) the joinsplit index\n  \"jsoutindex\" (sprout) : n,    (numeric) the output index of the joinsplit\n  \"outindex\" (sapling) : n,    (numeric) the output index\n  \"confirmations\" : n,    (numeric) the number of confirmations\n  \"spendable\" : true|false, (boolean) true if note can be spent by wallet, false if address is watchonly\n  \"address\" : \"address\",  (string) the shielded address\n  \"amount\": xxxxx,     (numeric) the amount of value in the note\n  \"memo\": xxxxx,      (string) hexademical string representation of memo field\n  \"change\": true|false,   (boolean) true if the address that received the note is also one of the sending addresses\n }\n ,...\n]",
            "./raw_text_input_api_text/z_listunspent"
        ],
        [
            "What is the format of the result returned by the `z_listunspent` command?",
            "The result returned by the `z_listunspent` command is an array of JSON objects, each of which has the following properties:\n\n* `txid`: The transaction ID.\n* `jsindex` (Sprout) or `outindex` (Sapling): The output index of the joinsplit or the output index, respectively.\n* `confirmations`: The number of confirmations.\n* `spendable`: A boolean indicating whether the note can be spent by the wallet.\n* `address`: The shielded address.\n* `amount`: The amount of value in the note.\n* `memo`: A hexadecimal string representation of the memo field.\n* `change`: A boolean indicating whether the address that received the note is also one of the sending addresses.",
            "z_listunspent ( minconf maxconf includeWatchonly [\"zaddr\",...] )Returns array of unspent shielded notes with between minconf and maxconf (inclusive) confirmations.\nOptionally filter to only include notes sent to specified addresses.\nWhen minconf is 0, unspent notes with zero confirmations are returned, even though they are not immediately spendable.\nResults are an array of Objects, each of which has:\n{txid, jsindex, jsoutindex, confirmations, address, amount, memo} (Sprout)\n{txid, outindex, confirmations, address, amount, memo} (Sapling)Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')\n4. \"addresses\"   (string) A json array of zaddrs (both Sprout and Sapling) to filter on. Duplicate addresses not allowed.\n  [\n   \"address\"   (string) zaddr\n   ,...\n  ]Result\n[               (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id \n  \"jsindex\" (sprout) : n,    (numeric) the joinsplit index\n  \"jsoutindex\" (sprout) : n,    (numeric) the output index of the joinsplit\n  \"outindex\" (sapling) : n,    (numeric) the output index\n  \"confirmations\" : n,    (numeric) the number of confirmations\n  \"spendable\" : true|false, (boolean) true if note can be spent by wallet, false if address is watchonly\n  \"address\" : \"address\",  (string) the shielded address\n  \"amount\": xxxxx,     (numeric) the amount of value in the note\n  \"memo\": xxxxx,      (string) hexademical string representation of memo field\n  \"change\": true|false,   (boolean) true if the address that received the note is also one of the sending addresses\n }\n ,...\n]",
            "./raw_text_input_api_text/z_listunspent"
        ],
        [
            "What does the `spendable` property in the `z_listunspent` result indicate?",
            "The `spendable` property in the `z_listunspent` result indicates whether the note can be spent by the wallet. If `true`, the note can be spent; if `false`, the address is watchonly.",
            "z_listunspent ( minconf maxconf includeWatchonly [\"zaddr\",...] )Returns array of unspent shielded notes with between minconf and maxconf (inclusive) confirmations.\nOptionally filter to only include notes sent to specified addresses.\nWhen minconf is 0, unspent notes with zero confirmations are returned, even though they are not immediately spendable.\nResults are an array of Objects, each of which has:\n{txid, jsindex, jsoutindex, confirmations, address, amount, memo} (Sprout)\n{txid, outindex, confirmations, address, amount, memo} (Sapling)Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')\n4. \"addresses\"   (string) A json array of zaddrs (both Sprout and Sapling) to filter on. Duplicate addresses not allowed.\n  [\n   \"address\"   (string) zaddr\n   ,...\n  ]Result\n[               (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id \n  \"jsindex\" (sprout) : n,    (numeric) the joinsplit index\n  \"jsoutindex\" (sprout) : n,    (numeric) the output index of the joinsplit\n  \"outindex\" (sapling) : n,    (numeric) the output index\n  \"confirmations\" : n,    (numeric) the number of confirmations\n  \"spendable\" : true|false, (boolean) true if note can be spent by wallet, false if address is watchonly\n  \"address\" : \"address\",  (string) the shielded address\n  \"amount\": xxxxx,     (numeric) the amount of value in the note\n  \"memo\": xxxxx,      (string) hexademical string representation of memo field\n  \"change\": true|false,   (boolean) true if the address that received the note is also one of the sending addresses\n }\n ,...\n]",
            "./raw_text_input_api_text/z_listunspent"
        ]
    ],
    "will",
    "be",
    "replaced",
    "91151d17-1259-4585-9a92-82bd2f879275"
]