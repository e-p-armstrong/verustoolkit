[
    [
        [
            "What does the `gettxout` command do in Verus?",
            "The `gettxout` command returns details about an unspent transaction output. It takes three arguments: the transaction ID, the vout value, and an optional boolean to include the mempool.",
            "gettxout \"txid\" n ( includemempool )\n\nReturns details about an unspent transaction output.\n\nArguments:\n1. \"txid\"    (string, required) The transaction id\n2. n       (numeric, required) vout value\n3. includemempool (boolean, optional) Whether to include the mempool\n\nResult:\n{\n \"bestblock\" : \"hash\",  (string) the block hash\n \"confirmations\" : n,    (numeric) The number of confirmations\n \"value\" : x.xxx,      (numeric) The transaction value in VRSC\n \"scriptPubKey\" : {     (json object)\n   \"asm\" : \"code\",    (string) \n   \"hex\" : \"hex\",    (string) \n   \"reqSigs\" : n,     (numeric) Number of required signatures\n   \"type\" : \"pubkeyhash\", (string) The type, eg pubkeyhash\n   \"addresses\" : [     (array of string) array of Verus addresses\n    \"verusaddress\"    (string) Verus address\n    ,...\n   ]\n },\n \"version\" : n,       (numeric) The version\n \"coinbase\" : true|false   (boolean) Coinbase or not\n}\n\nExamples:\n\nGet unspent transactions\n> verus listunspent\n\nView the details\n> verus gettxout \"txid\" 1\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxout\", \"params\": [\"txid\", 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/gettxout"
        ],
        [
            "What information does the `gettxout` command return about a transaction output?",
            "The `gettxout` command returns a JSON object with information about the transaction output, including the block hash, number of confirmations, transaction value in VRSC, scriptPubKey details, version, and whether it's a Coinbase transaction.",
            "gettxout \"txid\" n ( includemempool )\n\nReturns details about an unspent transaction output.\n\nArguments:\n1. \"txid\"    (string, required) The transaction id\n2. n       (numeric, required) vout value\n3. includemempool (boolean, optional) Whether to include the mempool\n\nResult:\n{\n \"bestblock\" : \"hash\",  (string) the block hash\n \"confirmations\" : n,    (numeric) The number of confirmations\n \"value\" : x.xxx,      (numeric) The transaction value in VRSC\n \"scriptPubKey\" : {     (json object)\n   \"asm\" : \"code\",    (string) \n   \"hex\" : \"hex\",    (string) \n   \"reqSigs\" : n,     (numeric) Number of required signatures\n   \"type\" : \"pubkeyhash\", (string) The type, eg pubkeyhash\n   \"addresses\" : [     (array of string) array of Verus addresses\n    \"verusaddress\"    (string) Verus address\n    ,...\n   ]\n },\n \"version\" : n,       (numeric) The version\n \"coinbase\" : true|false   (boolean) Coinbase or not\n}\n\nExamples:\n\nGet unspent transactions\n> verus listunspent\n\nView the details\n> verus gettxout \"txid\" 1\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxout\", \"params\": [\"txid\", 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/gettxout"
        ],
        [
            "How can I use the `gettxout` command to view the details of a specific transaction output?",
            "You can use the `gettxout` command by specifying the transaction ID and vout value, like this: `verus gettxout \"txid\" 1`. This will return the details of the transaction output at that specific vout.",
            "gettxout \"txid\" n ( includemempool )\n\nReturns details about an unspent transaction output.\n\nArguments:\n1. \"txid\"    (string, required) The transaction id\n2. n       (numeric, required) vout value\n3. includemempool (boolean, optional) Whether to include the mempool\n\nResult:\n{\n \"bestblock\" : \"hash\",  (string) the block hash\n \"confirmations\" : n,    (numeric) The number of confirmations\n \"value\" : x.xxx,      (numeric) The transaction value in VRSC\n \"scriptPubKey\" : {     (json object)\n   \"asm\" : \"code\",    (string) \n   \"hex\" : \"hex\",    (string) \n   \"reqSigs\" : n,     (numeric) Number of required signatures\n   \"type\" : \"pubkeyhash\", (string) The type, eg pubkeyhash\n   \"addresses\" : [     (array of string) array of Verus addresses\n    \"verusaddress\"    (string) Verus address\n    ,...\n   ]\n },\n \"version\" : n,       (numeric) The version\n \"coinbase\" : true|false   (boolean) Coinbase or not\n}\n\nExamples:\n\nGet unspent transactions\n> verus listunspent\n\nView the details\n> verus gettxout \"txid\" 1\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxout\", \"params\": [\"txid\", 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/gettxout"
        ],
        [
            "How can I use the `gettxout` command as a JSON RPC call?",
            "You can use the `gettxout` command as a JSON RPC call by sending a request to the Verus RPC server with the method `gettxout` and the required parameters, like this:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxout\", \"params\": [\"txid\", 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "gettxout \"txid\" n ( includemempool )\n\nReturns details about an unspent transaction output.\n\nArguments:\n1. \"txid\"    (string, required) The transaction id\n2. n       (numeric, required) vout value\n3. includemempool (boolean, optional) Whether to include the mempool\n\nResult:\n{\n \"bestblock\" : \"hash\",  (string) the block hash\n \"confirmations\" : n,    (numeric) The number of confirmations\n \"value\" : x.xxx,      (numeric) The transaction value in VRSC\n \"scriptPubKey\" : {     (json object)\n   \"asm\" : \"code\",    (string) \n   \"hex\" : \"hex\",    (string) \n   \"reqSigs\" : n,     (numeric) Number of required signatures\n   \"type\" : \"pubkeyhash\", (string) The type, eg pubkeyhash\n   \"addresses\" : [     (array of string) array of Verus addresses\n    \"verusaddress\"    (string) Verus address\n    ,...\n   ]\n },\n \"version\" : n,       (numeric) The version\n \"coinbase\" : true|false   (boolean) Coinbase or not\n}\n\nExamples:\n\nGet unspent transactions\n> verus listunspent\n\nView the details\n> verus gettxout \"txid\" 1\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxout\", \"params\": [\"txid\", 1] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/gettxout"
        ]
    ],
    "will",
    "be",
    "replaced",
    "7852be1d-6f67-42e8-ba42-b0d110516b0f"
]