[
    [
        [
            "What is the purpose of the `signrawtransaction` command in Verus?",
            "The `signrawtransaction` command is used to sign inputs for a raw transaction (serialized, hex-encoded) in Verus. This command takes in a transaction hex string, and optional arguments for previous transaction outputs, private keys, and a signature hash type.",
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )Sign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that\nthis transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private\nkeys that, if given, will be the only keys used to sign the transaction.Arguments:\n1. \"hexstring\"   (string, required) The transaction hex string\n2. \"prevtxs\"    (string, optional) An json array of previous dependent transaction outputs\n   [        (json array of json objects, or 'null' if none provided)\n    {\n     \"txid\":\"id\",       (string, required) The transaction id\n     \"vout\":n,         (numeric, required) The output number\n     \"scriptPubKey\": \"hex\",  (string, required) script key\n     \"redeemScript\": \"hex\",  (string, required for P2SH) redeem script\n     \"amount\": value      (numeric, required) The amount spent\n    }\n    ,...\n  ]\n3. \"privatekeys\"   (string, optional) A json array of base58-encoded private keys for signing\n  [         (json array of strings, or 'null' if none provided)\n   \"privatekey\"  (string) private key in base58-encoding\n   ,...\n  ]\n4. \"sighashtype\"   (string, optional, default=ALL) The signature hash type. Must be one of\n    \"ALL\"\n    \"NONE\"\n    \"SINGLE\"\n    \"ALL|ANYONECANPAY\"\n    \"NONE|ANYONECANPAY\"\n    \"SINGLE|ANYONECANPAY\"\n5. \"branchid\"    (string, optional) The hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "./raw_text_input_api_text/signrawtransaction"
        ],
        [
            "What are the required arguments for the `signrawtransaction` command?",
            "The only required argument for the `signrawtransaction` command is the \"hexstring\" argument, which is the transaction hex string.",
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )Sign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that\nthis transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private\nkeys that, if given, will be the only keys used to sign the transaction.Arguments:\n1. \"hexstring\"   (string, required) The transaction hex string\n2. \"prevtxs\"    (string, optional) An json array of previous dependent transaction outputs\n   [        (json array of json objects, or 'null' if none provided)\n    {\n     \"txid\":\"id\",       (string, required) The transaction id\n     \"vout\":n,         (numeric, required) The output number\n     \"scriptPubKey\": \"hex\",  (string, required) script key\n     \"redeemScript\": \"hex\",  (string, required for P2SH) redeem script\n     \"amount\": value      (numeric, required) The amount spent\n    }\n    ,...\n  ]\n3. \"privatekeys\"   (string, optional) A json array of base58-encoded private keys for signing\n  [         (json array of strings, or 'null' if none provided)\n   \"privatekey\"  (string) private key in base58-encoding\n   ,...\n  ]\n4. \"sighashtype\"   (string, optional, default=ALL) The signature hash type. Must be one of\n    \"ALL\"\n    \"NONE\"\n    \"SINGLE\"\n    \"ALL|ANYONECANPAY\"\n    \"NONE|ANYONECANPAY\"\n    \"SINGLE|ANYONECANPAY\"\n5. \"branchid\"    (string, optional) The hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "./raw_text_input_api_text/signrawtransaction"
        ],
        [
            "What is the purpose of the \"prevtxs\" argument in the `signrawtransaction` command?",
            "The \"prevtxs\" argument is an optional argument that specifies an array of previous transaction outputs that this transaction depends on but may not yet be in the block chain. This information is used to sign the transaction.",
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )Sign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that\nthis transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private\nkeys that, if given, will be the only keys used to sign the transaction.Arguments:\n1. \"hexstring\"   (string, required) The transaction hex string\n2. \"prevtxs\"    (string, optional) An json array of previous dependent transaction outputs\n   [        (json array of json objects, or 'null' if none provided)\n    {\n     \"txid\":\"id\",       (string, required) The transaction id\n     \"vout\":n,         (numeric, required) The output number\n     \"scriptPubKey\": \"hex\",  (string, required) script key\n     \"redeemScript\": \"hex\",  (string, required for P2SH) redeem script\n     \"amount\": value      (numeric, required) The amount spent\n    }\n    ,...\n  ]\n3. \"privatekeys\"   (string, optional) A json array of base58-encoded private keys for signing\n  [         (json array of strings, or 'null' if none provided)\n   \"privatekey\"  (string) private key in base58-encoding\n   ,...\n  ]\n4. \"sighashtype\"   (string, optional, default=ALL) The signature hash type. Must be one of\n    \"ALL\"\n    \"NONE\"\n    \"SINGLE\"\n    \"ALL|ANYONECANPAY\"\n    \"NONE|ANYONECANPAY\"\n    \"SINGLE|ANYONECANPAY\"\n5. \"branchid\"    (string, optional) The hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "./raw_text_input_api_text/signrawtransaction"
        ],
        [
            "What is the purpose of the \"privatekeys\" argument in the `signrawtransaction` command?",
            "The \"privatekeys\" argument is an optional argument that specifies an array of base58-encoded private keys that, if given, will be the only keys used to sign the transaction.",
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )Sign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that\nthis transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private\nkeys that, if given, will be the only keys used to sign the transaction.Arguments:\n1. \"hexstring\"   (string, required) The transaction hex string\n2. \"prevtxs\"    (string, optional) An json array of previous dependent transaction outputs\n   [        (json array of json objects, or 'null' if none provided)\n    {\n     \"txid\":\"id\",       (string, required) The transaction id\n     \"vout\":n,         (numeric, required) The output number\n     \"scriptPubKey\": \"hex\",  (string, required) script key\n     \"redeemScript\": \"hex\",  (string, required for P2SH) redeem script\n     \"amount\": value      (numeric, required) The amount spent\n    }\n    ,...\n  ]\n3. \"privatekeys\"   (string, optional) A json array of base58-encoded private keys for signing\n  [         (json array of strings, or 'null' if none provided)\n   \"privatekey\"  (string) private key in base58-encoding\n   ,...\n  ]\n4. \"sighashtype\"   (string, optional, default=ALL) The signature hash type. Must be one of\n    \"ALL\"\n    \"NONE\"\n    \"SINGLE\"\n    \"ALL|ANYONECANPAY\"\n    \"NONE|ANYONECANPAY\"\n    \"SINGLE|ANYONECANPAY\"\n5. \"branchid\"    (string, optional) The hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "./raw_text_input_api_text/signrawtransaction"
        ],
        [
            "What are the possible values for the \"sighashtype\" argument in the `signrawtransaction` command?",
            "The possible values for the \"sighashtype\" argument are:\n\n* \"ALL\"\n* \"NONE\"\n* \"SINGLE\"\n* \"ALL|ANYONECANPAY\"\n* \"NONE|ANYONECANPAY\"\n* \"SINGLE|ANYONECANPAY\"\n\nThe default value is \"ALL\" if not specified.",
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )Sign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that\nthis transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private\nkeys that, if given, will be the only keys used to sign the transaction.Arguments:\n1. \"hexstring\"   (string, required) The transaction hex string\n2. \"prevtxs\"    (string, optional) An json array of previous dependent transaction outputs\n   [        (json array of json objects, or 'null' if none provided)\n    {\n     \"txid\":\"id\",       (string, required) The transaction id\n     \"vout\":n,         (numeric, required) The output number\n     \"scriptPubKey\": \"hex\",  (string, required) script key\n     \"redeemScript\": \"hex\",  (string, required for P2SH) redeem script\n     \"amount\": value      (numeric, required) The amount spent\n    }\n    ,...\n  ]\n3. \"privatekeys\"   (string, optional) A json array of base58-encoded private keys for signing\n  [         (json array of strings, or 'null' if none provided)\n   \"privatekey\"  (string) private key in base58-encoding\n   ,...\n  ]\n4. \"sighashtype\"   (string, optional, default=ALL) The signature hash type. Must be one of\n    \"ALL\"\n    \"NONE\"\n    \"SINGLE\"\n    \"ALL|ANYONECANPAY\"\n    \"NONE|ANYONECANPAY\"\n    \"SINGLE|ANYONECANPAY\"\n5. \"branchid\"    (string, optional) The hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "./raw_text_input_api_text/signrawtransaction"
        ],
        [
            "What is the purpose of the \"branchid\" argument in the `signrawtransaction` command?",
            "The \"branchid\" argument is an optional argument that specifies the hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "signrawtransaction \"hexstring\" ( [{\"txid\":\"id\",\"vout\":n,\"scriptPubKey\":\"hex\",\"redeemScript\":\"hex\"},...] [\"privatekey1\",...] sighashtype )Sign inputs for raw transaction (serialized, hex-encoded).\nThe second optional argument (may be null) is an array of previous transaction outputs that\nthis transaction depends on but may not yet be in the block chain.\nThe third optional argument (may be null) is an array of base58-encoded private\nkeys that, if given, will be the only keys used to sign the transaction.Arguments:\n1. \"hexstring\"   (string, required) The transaction hex string\n2. \"prevtxs\"    (string, optional) An json array of previous dependent transaction outputs\n   [        (json array of json objects, or 'null' if none provided)\n    {\n     \"txid\":\"id\",       (string, required) The transaction id\n     \"vout\":n,         (numeric, required) The output number\n     \"scriptPubKey\": \"hex\",  (string, required) script key\n     \"redeemScript\": \"hex\",  (string, required for P2SH) redeem script\n     \"amount\": value      (numeric, required) The amount spent\n    }\n    ,...\n  ]\n3. \"privatekeys\"   (string, optional) A json array of base58-encoded private keys for signing\n  [         (json array of strings, or 'null' if none provided)\n   \"privatekey\"  (string) private key in base58-encoding\n   ,...\n  ]\n4. \"sighashtype\"   (string, optional, default=ALL) The signature hash type. Must be one of\n    \"ALL\"\n    \"NONE\"\n    \"SINGLE\"\n    \"ALL|ANYONECANPAY\"\n    \"NONE|ANYONECANPAY\"\n    \"SINGLE|ANYONECANPAY\"\n5. \"branchid\"    (string, optional) The hex representation of the consensus branch id to sign with. This can be used to force signing with consensus rules that are ahead of the node's current height.",
            "./raw_text_input_api_text/signrawtransaction"
        ]
    ],
    "will",
    "be",
    "replaced",
    "67816150-4bdd-4524-9731-8dd959ad848f"
]