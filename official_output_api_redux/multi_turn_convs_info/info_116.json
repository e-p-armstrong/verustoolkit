[
    [
        [
            "What is the \"operation-id\" returned by the `sendcurrency` command, and when is it available?",
            "The \"operation-id\" is a string returned by the `sendcurrency` command, but only when the `returntxtemplate` parameter is set to false. It is not public information and is used internally by the system.",
            "Result:\n  \"operation-id\" : \"opid\" (string) The operation id, not public info, if (returntxtemplate) is false\n\nIf (returntxtemplate) is true  {\n    \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies that need to be input to the transaction\n    \"hextx\" : \"hexstring\"        The transaction with all specified outputs and no inputs\n  }\n\nExamples:\n> verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "What information is returned by the `sendcurrency` command when `returntxtemplate` is set to true?",
            "When `returntxtemplate` is set to true, the `sendcurrency` command returns two pieces of information:\n\n1. `outputtotals`: a currency value map showing the total outputs in all currencies that need to be input to the transaction.\n2. `hextx`: a hexadecimal string representing the transaction with all specified outputs and no inputs.",
            "Result:\n  \"operation-id\" : \"opid\" (string) The operation id, not public info, if (returntxtemplate) is false\n\nIf (returntxtemplate) is true  {\n    \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies that need to be input to the transaction\n    \"hextx\" : \"hexstring\"        The transaction with all specified outputs and no inputs\n  }\n\nExamples:\n> verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "How can I use the `sendcurrency` command to send a specific amount of a currency to an address using the command line?",
            "You can use the `sendcurrency` command to send a specific amount of a currency to an address by running a command like this:\n```\nverus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\",\"amount\":500.0},...]'\n```\nReplace `btc` with the currency you want to send, `RRehdmUV7oEAqoZnzEGBH34XysnWaBatct` with the address you want to send to, and `500.0` with the amount you want to send.",
            "Result:\n  \"operation-id\" : \"opid\" (string) The operation id, not public info, if (returntxtemplate) is false\n\nIf (returntxtemplate) is true  {\n    \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies that need to be input to the transaction\n    \"hextx\" : \"hexstring\"        The transaction with all specified outputs and no inputs\n  }\n\nExamples:\n> verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/sendcurrency"
        ],
        [
            "How can I use the `sendcurrency` command to send a specific amount of a currency to an address using the JSON-RPC API?",
            "You can use the `sendcurrency` command to send a specific amount of a currency to an address by sending a JSON-RPC request like this:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `myusername` with your username, `bob@` with the sender's address, `btc` with the currency you want to send, `alice@quad` with the address you want to send to, and `500.0` with the amount you want to send.",
            "Result:\n  \"operation-id\" : \"opid\" (string) The operation id, not public info, if (returntxtemplate) is false\n\nIf (returntxtemplate) is true  {\n    \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies that need to be input to the transaction\n    \"hextx\" : \"hexstring\"        The transaction with all specified outputs and no inputs\n  }\n\nExamples:\n> verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/sendcurrency"
        ]
    ],
    "will",
    "be",
    "replaced",
    "b785f5be-af14-425e-afbf-0d997606c340"
]