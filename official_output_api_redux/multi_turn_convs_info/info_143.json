[
    [
        [
            "What does the `getsaplingtree` command do in Verus?",
            "The `getsaplingtree` command returns the entries for a light wallet Sapling tree state. It can take an optional argument specifying the height or an inclusive range with an optional step at which to get the Sapling tree state.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ],
        [
            "What is the default behavior of the `getsaplingtree` command if no arguments are provided?",
            "If no arguments are provided, the `getsaplingtree` command returns the latest currency state and height.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ],
        [
            "What is the format of the result returned by the `getsaplingtree` command?",
            "The result returned by the `getsaplingtree` command is a JSON array containing objects with the following properties: `network`, `height`, `hash`, `time`, and `tree`.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ],
        [
            "How can I use the `getsaplingtree` command to retrieve the Sapling tree state at a specific height or range of heights?",
            "You can use the `getsaplingtree` command to retrieve the Sapling tree state at a specific height or range of heights by providing the desired height or range as an argument. For example, you can specify a single height like this: `getsaplingtree 100`, or a range of heights like this: `getsaplingtree 100,200`. You can also specify an optional step value, like this: `getsaplingtree 100,200,10`.",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ],
        [
            "Can I use the `getsaplingtree` command with the Verus API using `curl`?",
            "Yes, you can use the `getsaplingtree` command with the Verus API using `curl`. You can send a JSON-RPC request to the Verus API endpoint, specifying the `getsaplingtree` method and the desired arguments. For example:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "getsaplingtree \"n\"\n\nReturns the entries for a light wallet Sapling tree state.\n\nArguments\n  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state\n                                  If not specified, the latest currency state and height is returned\n\nResult:\n  [\n    {\n      \"network\": \"VRSC\",\n      \"height\": n,\n      \"hash\": \"hex\"\n      \"time\": n,\n      \"tree\": \"hex\"\n    },\n  ]\n\nExamples:\n> verus getsaplingtree name\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getsaplingtree"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d6141368-37fc-445e-979c-4d90595dc6a2"
]