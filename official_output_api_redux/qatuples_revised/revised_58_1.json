[
    "What are the required parameters for the `verifysignature` command in Verus?",
    "The required parameters for the `verifysignature` command in Verus are:\n\n1. `address`: The transparent address or identity to verify against the signature (string).\n2. `filename` or `message` or `messagehex` or `messagebase64` or `datahash`: The data or hash of data signed (string).",
    "Checks to see if the signature is valid and returns an error for invalid parameters{\n \"address\":\"t-addr or identity\"                (string, required) The transparent address or identity to verify against the signature\n \"filename\" | \"message\" | \"messagehex\" | \"messagebase64\" | \"datahash\" (string, required) Data or hash of data signed\n \"vdxfkeys\":[\"vdxfkey\", ...],                 (array, optional) Array of vdxfkeys or ID i-addresses\n \"vdxfkeynames\":[\"vdxfkeyname\", ...],             (array, optional) Array of vdxfkey names or fully qualified friendly IDs\n \"boundhashes\":[\"hexhash\", ...],               (array, optional) Array of bound hash values\n \"hashtype\"                           (string, optional) one of: \"sha256\", \"sha256D\", \"blake2b\", \"keccak256\", defaults to sha256\n \"signature\"                          (string, optional) The current signature of the message encoded in base 64\n \"checklatest\"                         (bool, optional)  If true, checks signature validity based on latest identity. defaults to false,\n                                           which determines validity of signing height stored in signature.\n}Result:\n{\n \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)\n \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful\n}Examples:Verify the signature\n> verus verifysignature '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\", \"signature\":\"base64sig\"}'",
    "./raw_text_input_api_text/verifysignature"
]