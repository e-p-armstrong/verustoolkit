[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm interested in launching a new currency on Verus. Can you walk me through the steps to do that, and also explain how I define and use a currency definition to launch a new currency?\n\n**AI Assistant:**\nLaunching a new currency on Verus involves a few steps, but I'll break it down for you. \n\nThe process of launching a new currency on Verus involves defining the currency parameters, creating a currency definition, and then using that definition to launch the currency. Here's a step-by-step guide on how to do it.\n\n**Defining the Currency Parameters:**\nFirst, you need to define the parameters of your new currency. This includes the name of the currency, the options, proof protocol, and any preallocations. You can do this by creating a JSON object that includes these parameters. For example:\n\n```json\n{\n \"name\":\"MyBrand\",\n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Influencer@\":100}]\n}\n```\n\n**Creating the Currency Definition:**\nOnce you have defined the parameters, you need to create a currency definition using the `definecurrency` command. This command takes the JSON object you created as an argument. Here's an example:\n\n```json\n./verus -chain=VRSCTEST definecurrency '{\n \"name\":\"MyBrand\",\n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Influencer@\":100}]\n}'\n```\n\nThis command will output a HEX value, which you will need to use in the next step.\n\n**Launching the Currency:**\nTo launch the currency, you need to use the `sendrawtransaction` command and pass the HEX value as an argument. Here's an example:\n\n```json\n./verus -chain=VRSCTEST sendrawtransaction \"HEX\"\n```\n\nThis command will start the currency launch process. Note that you need to have enough funds in the rootID to cover the currency fee (200.0002 VRSC) and the initial contribution.\n\n**Checking Currency Information:**\nAfter launching the currency, you can check its status and information using the `getcurrency` command. Here's an example:\n\n```json\n./verus -chain=VRSCTEST getcurrency \"MyBrand\"\n```\n\nThis command will display information about the currency, such as its name, options, and preallocations.\n\n**Important Notes:**\n\n* It's highly recommended to test your currency on the Verus Testnet before launching it on the mainnet.\n* The currency launch process takes a minimum of 20 blocks to complete.\n* You need to have enough funds in the rootID to cover the currency fee and initial contribution.\n* You can use the `getcurrency` command to check the status and information of your currency during the preconversion time frame and after the launch.\n\nDid that help? Do you have any more questions about launching a new currency on Verus, or any specific steps in the process?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the steps to launch a new currency on Verus, and how do I define and use a currency definition to launch a new currency?",
            "The process of launching a new currency on Verus involves defining the currency parameters, creating a currency definition, and then using that definition to launch the currency. Here's a step-by-step guide on how to do it.\n\n**Defining the Currency Parameters:**\nFirst, you need to define the parameters of your new currency. This includes the name of the currency, the options, proof protocol, and any preallocations. You can do this by creating a JSON object that includes these parameters. For example:\n\n```json\n{\n \"name\":\"MyBrand\",\n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Influencer@\":100}]\n}\n```\n\n**Creating the Currency Definition:**\nOnce you have defined the parameters, you need to create a currency definition using the `definecurrency` command. This command takes the JSON object you created as an argument. Here's an example:\n\n```json\n./verus -chain=VRSCTEST definecurrency '{\n \"name\":\"MyBrand\",\n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Influencer@\":100}]\n}'\n```\n\nThis command will output a HEX value, which you will need to use in the next step.\n\n**Launching the Currency:**\nTo launch the currency, you need to use the `sendrawtransaction` command and pass the HEX value as an argument. Here's an example:\n\n```json\n./verus -chain=VRSCTEST sendrawtransaction \"HEX\"\n```\n\nThis command will start the currency launch process. Note that you need to have enough funds in the rootID to cover the currency fee (200.0002 VRSC) and the initial contribution.\n\n**Checking Currency Information:**\nAfter launching the currency, you can check its status and information using the `getcurrency` command. Here's an example:\n\n```json\n./verus -chain=VRSCTEST getcurrency \"MyBrand\"\n```\n\nThis command will display information about the currency, such as its name, options, and preallocations.\n\n**Important Notes:**\n\n* It's highly recommended to test your currency on the Verus Testnet before launching it on the mainnet.\n* The currency launch process takes a minimum of 20 blocks to complete.\n* You need to have enough funds in the rootID to cover the currency fee and initial contribution.\n* You can use the `getcurrency` command to check the status and information of your currency during the preconversion time frame and after the launch.",
            "### **\"nativecurrencyid\"**\nUse this parameter for mapped ERC-20 tokens. The parameter includes the Ethereum contract address for the ERC-20. [Read more](/currencies/mapping-1:1-eth)\n\n::: warning Need help setting up a currency launch? \ud83e\udd14\n[Go to the Verus Discord #pbaas-development channel. The community is happy to assist!](https://www.verus.io/discord)\n:::\n\n## How to launch\nNow you know how to create a currency definition with all its options and parameters. Next up: how to actually use the definition to launch a currency.\n\nHere we use the command-line interface. If you want to use the built-in terminal from Verus Desktop, just replace ``./verus -chain=VRSCTEST`` with ``run``.\n\n::: tip Use Verus Testnet first! \ud83d\udc77\nBefore launching your currency or token on Verus (or any other PBaaS-chain), it is highly recommended to try it out on testnet first. \n:::\n\nLet's use this example definition to launch the currency:\n``` json\n./verus -chain=VRSCTEST definecurrency '{\n \"name\":\"MyBrand\",\n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Influencer@\":100}]\n}'\n```\n\nEntering the above command into the command-line interface wallet gives a `HEX` value as output. Take that HEX and do the following command below. \u26a0\ufe0f IMPORTANT: make sure there are enough funds in the rootID for the currency fee (200.0002 VRSC) and the initial contribution (when in parameters).\n\n``` json\n./verus -chain=VRSCTEST sendrawtransaction \"HEX\"\n```\n\nAfter doing the command above the currency has started, the funds from the rootID are taken, and it takes a minimum of 20 blocks (or startblock) to actually launch it (and if all preconversion goals are met).\n\nDuring the preconversion time frame and after the launch you can lookup all kinds of information on the currency with the following command:\n\n``` json\n./verus -chain=VRSCTEST getcurrency \"MyBrand\"\n```",
            "./raw_text_input_docs/launch-currency.md"
        ]
    ]
]