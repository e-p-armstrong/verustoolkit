[
    "## Conversation that answers the provided questions:\n**User:**\nHi, I'm having some issues with my testnet and mainnet. I think I need to reset my mainnet, but I'm not sure how to do it. Can you help me?\n\n**AI Assistant:**\nI'd be happy to help you! However, I need to clarify that you don't reset your mainnet by deleting the testnet directories. The instructions for resetting your testnet involve deleting specific directories, which vary depending on your operating system.\n\nOn Linux, you would delete `~/.Komodo/vrsctest` and `~/.verustest`. On Mac OS, you would delete `~/Library/Application Support/Komodo/VRSC` and `~/Library/Application Support/VerusTest`. On Windows 10, you would delete `%AppData%\\Roaming\\Komodo\\VRSC\\` and `%AppData%\\Roaming\\VerusTest`.\n\nAfter deleting these directories, you need to restart the testnet daemon or relaunch Verus Desktop, deactivate verustest, and re-add verustest native. Would you like me to guide you through the process?\n\n**User:**\nThanks for the clarification. I have another question. Can I use the same command to export an ID to a PBaaS chain and sign transactions from multi-signature IDs?\n\n**AI Assistant:**\nNo, you cannot use the same command for both exporting an ID to a PBaaS chain and signing transactions from multi-signature IDs.\n\nThe command for exporting an ID to a PBaaS chain is:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nOn the other hand, the commands for signing transactions from multi-signature IDs involve creating a transaction, getting raw transaction data, signing the raw transaction with each additional wallet containing additional signing addresses/IDs, and broadcasting the signed transaction on the network.\n\nWould you like me to provide more information on how to sign transactions from multi-signature IDs?\n\n**User:**\nYes, that would be helpful. Do I need to broadcast the raw hex transaction data on the network after signing it?\n\n**AI Assistant:**\nNo, you don't broadcast the raw hex transaction data on the network after signing it. After signing the raw hex transaction data, you need to broadcast the raw hex signed transaction on the network using the command:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\nThis will broadcast the signed transaction on the network, allowing it to be verified and confirmed by the blockchain.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I reset my mainnet by deleting the testnet directories?",
            "You don't reset your mainnet by deleting the testnet directories. The instructions provided are for resetting your testnet by deleting specific directories, which vary depending on your operating system (Linux, Mac OS, or Windows 10). These directories are `~/.Komodo/vrsctest` and `~/.verustest` on Linux, `~/Library/Application Support/Komodo/VRSC` and `~/Library/Application Support/VerusTest` on Mac OS, and `%AppData%\\Roaming\\Komodo\\VRSC\\` and `%AppData%\\Roaming\\VerusTest` on Windows 10. After deleting these directories, you need to restart the testnet daemon or relaunch Verus Desktop, deactivate verustest, and re-add verustest native.",
            "To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/VRSC`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Can I use the same command to export an ID to a PBaaS chain and sign transactions from multi-signature IDs?",
            "No, you cannot use the same command for both exporting an ID to a PBaaS chain and signing transactions from multi-signature IDs. The command for exporting an ID to a PBaaS chain is:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nWhile the commands for signing transactions from multi-signature IDs involve creating a transaction, getting raw transaction data, signing the raw transaction with each additional wallet containing additional signing addresses/IDs, and broadcasting the signed transaction on the network.",
            "To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/VRSC`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Do I need to broadcast the raw hex transaction data on the network after signing it?",
            "No, you don't broadcast the raw hex transaction data on the network after signing it. After signing the raw hex transaction data, you need to broadcast the raw hex signed transaction on the network using the command:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```",
            "To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/VRSC`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]