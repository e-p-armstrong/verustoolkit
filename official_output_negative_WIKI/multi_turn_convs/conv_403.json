[
    "## Conversation that answers the provided questions:\n**User:**\nI've got a question about using the \"sendcurrency\" API. How do you burn a base currency using this API?\n\n**AI Assistant:**\nActually, you can't burn a base currency using the \"sendcurrency\" API. The \"burn\" parameter is only applicable to tokens or fractional currencies. If \"burn\" is set to 1, the currency sent will be officially removed from that currency's supply. But this doesn't apply to base currencies.\n\n**User:**\nOkay, thanks for clarifying that. I've also got a question about the new conversion mechanism. Does it allow for front running and price differences between conversion directions?\n\n**AI Assistant:**\nNo, the new conversion mechanism eliminates front running and ensures that all conversions are processed at the same rate, with no spread between conversion to and from a currency. All transactions in an aggregation of import blocks are simultaneously solved in all currency conversion directions, and all get the same price in each direction. So, you don't have to worry about price differences or front running when using the new conversion mechanism.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you burn a base currency using the \"sendcurrency\" API?",
            "You can't burn a base currency using the \"sendcurrency\" API. The \"burn\" parameter is only applicable to tokens or fractional currencies. If \"burn\" is set to 1, the currency sent will be officially removed from that currency's supply.",
            "# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-5 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.# An end to front running\nConversion will always be at the same rate as all conversions processed in one group of transactions. There is also no spread between the conversion to and from a currency. All transactions in a aggregation of import blocks, which will be detailed in later documentation, are simultaneously solved in all currency conversion directions and all converted at the same rate, all getting the same price in each direction as any person who may be exchanging in the other.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Does the new conversion mechanism allow for front running and price differences between conversion directions?",
            "No, the new conversion mechanism eliminates front running and ensures that all conversions are processed at the same rate, with no spread between conversion to and from a currency. All transactions in an aggregation of import blocks are simultaneously solved in all currency conversion directions, and all get the same price in each direction.",
            "# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-5 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.# An end to front running\nConversion will always be at the same rate as all conversions processed in one group of transactions. There is also no spread between the conversion to and from a currency. All transactions in a aggregation of import blocks, which will be detailed in later documentation, are simultaneously solved in all currency conversion directions and all converted at the same rate, all getting the same price in each direction as any person who may be exchanging in the other.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]