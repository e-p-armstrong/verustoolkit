[
    "## Conversation that answers the provided question:\n**User:**\nHi, I'm a bit stuck. I'm trying to export an ID to a PBaaS chain using the `definecurrency` command, but I'm not sure how to do it. Can you help me out?\n\n**AI Assistant:**\nI think there might be some confusion. You don't export an ID to a PBaaS chain using the `definecurrency` command. The `definecurrency` command is actually used to define a new currency on the Verus network.\n\n**User:**\nOh, I see! So how do I export an ID to a PBaaS chain then? I've been trying to figure it out for hours.\n\n**AI Assistant:**\nTo export an ID to a PBaaS chain, you would use the `sendcurrency` command with the `exportto` and `exportid` options. Here's an example of how you might do it:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nJust replace `IDNAME` with the actual name of your ID, `PBaaSChainName` with the name of the PBaaS chain you're exporting to, and `vrsctest` with the currency you're using.\n\n**User:**\nThank you so much! I think I understand now. I'll give it a try.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you export an ID to a PBaaS chain using the `definecurrency` command?",
            "You don't export an ID to a PBaaS chain using the `definecurrency` command. The `definecurrency` command is used to define a new currency on the Verus network. To export an ID to a PBaaS chain, you would use the `sendcurrency` command with the `exportto` and `exportid` options, like this:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```",
            "Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\n#### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]