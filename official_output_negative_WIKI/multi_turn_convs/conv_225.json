[
    "## Conversation that answers the provided questions:\n**User:**\nI've got a few more questions about VerusIDs. How can I modify the revocation state of an ID using the recovery authority?\n\n**AI Assistant:**\nYou cannot modify the revocation state of an ID using the recovery authority. The recovery authority can only recover the identity through redefining its primary state and the recovery state, but it cannot modify the revocation state. Similarly, the revocation authority cannot modify the recovery state, unless both authorities are controlled by the same underlying authority.\n\n**User:**\nThat makes sense. Another question I had was, are VerusIDs public, meaning that anyone can see the claims and attestations associated with them?\n\n**AI Assistant:**\nNo, VerusIDs are private. Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes. These features allow for private yet selectively provable claims and attestations, which can be used to provide strong identity verification without revealing sensitive information.\n\n**User:**\nI've also been wondering about the impact of VerusHash 2.1 on mining on the Verus network. Will it lead to a significant increase in the cost of FPGAs for mining?\n\n**AI Assistant:**\nNo, the introduction of VerusHash 2.1 is designed to tilt the balance slightly more in favor of CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. This means that FPGAs will still be able to mine and stake on the Verus network, but they may not have as significant of a performance advantage over CPUs as they did with VerusHash 2.0.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How can I modify the revocation state of an ID using the recovery authority?",
            "You cannot modify the revocation state of an ID using the recovery authority. The recovery authority can only recover the identity through redefining its primary state and the recovery state, but it cannot modify the revocation state. Similarly, the revocation authority cannot modify the recovery state, unless both authorities are controlled by the same underlying authority.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Are VerusIDs public, meaning that anyone can see the claims and attestations associated with them?",
            "No, VerusIDs are private. Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes. These features allow for private yet selectively provable claims and attestations, which can be used to provide strong identity verification without revealing sensitive information.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Will the introduction of VerusHash 2.1 lead to a significant increase in the cost of FPGAs for mining on the Verus network?",
            "No, the introduction of VerusHash 2.1 is designed to tilt the balance slightly more in favor of CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. This means that FPGAs will still be able to mine and stake on the Verus network, but they may not have as significant of a performance advantage over CPUs as they did with VerusHash 2.0.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]