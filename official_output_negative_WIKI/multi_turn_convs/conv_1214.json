[
    "## Conversation that answers the provided question:\n**User:**\nHey, I'm trying to create a tokenized ID control, but I'm not sure how to do it without specifying a max supply. Can you help me out?\n\n**AI Assistant:**\nActually, you can't create a tokenized ID control without specifying a max supply. When creating a tokenized ID control (next generation NFT), you must specify a max supply of 1 satoshi that is either pre-allocated or pre-converted to. This is a requirement for the currency definition.\n\nLet me give you an example to illustrate this. Take a look at this command: `verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'`. As you can see, a max supply is indeed specified.\n\nSo, unfortunately, it's not possible to create a tokenized ID control without specifying a max supply. But I hope this example helps clarify things for you! Do you have any other questions about tokenized ID controls or Verus in general?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I create a tokenized ID control without specifying a max supply?",
            "When creating a tokenized ID control (next generation NFT), you must specify a max supply of 1 satoshi that is either pre-allocated or pre-converted to. This is a requirement for the currency definition. In the example provided, the command `verus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'` shows that a max supply is indeed specified.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]