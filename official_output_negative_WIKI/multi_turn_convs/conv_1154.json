[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to create a transaction from a single-signature ID. Is it the same process as creating a transaction from a multi-signature ID?\n\n**AI Assistant:**\nNo, it's actually a bit simpler. To create a transaction from a single-signature ID, you would simply use the `verus sendcurrency` command without needing to gather signatures from multiple wallets. The instructions I provided earlier were actually for creating a transaction from a multi-signature ID. Does that make sense?\n\n**User:**\nThat helps, thanks! I also have a question about creating a tokenized ID control. Can I create one with a max supply of 10 satoshis?\n\n**AI Assistant:**\nNo, actually, according to the instructions, the max supply for a tokenized ID control (next generation NFT) must be 1 satoshi, either pre-allocated or pre-converted to. The example command shows how to define a currency with a max supply of 1 satoshi. So, unfortunately, 10 satoshis isn't an option. Do you have any more questions about tokenized ID controls?\n\n**User:**\nOne more question. How do I create an identity with a parent currency and a referrer using `registernamecommitment`?\n\n**AI Assistant:**\nThe example I provided earlier actually shows how to create an identity with a parent currency, but no referrer. To create an identity with a parent currency and a referrer, you would need to specify the referrer address as an additional argument to the `registernamecommitment` command. Does that make sense?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I create a transaction from a single-signature ID?",
            "The instructions provided are actually for creating a transaction from a multi-signature ID. To create a transaction from a single-signature ID, you would simply use the `verus sendcurrency` command without needing to gather signatures from multiple wallets.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Can I create a tokenized ID control with a max supply of 10 satoshis?",
            "No, according to the instructions, the max supply for a tokenized ID control (next generation NFT) must be 1 satoshi, either pre-allocated or pre-converted to. The example command shows how to define a currency with a max supply of 1 satoshi.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I create an identity with a parent currency and a referrer using `registernamecommitment`?",
            "The example provided actually shows how to create an identity with a parent currency, but no referrer. To create an identity with a parent currency and a referrer, you would need to specify the referrer address as an additional argument to the `registernamecommitment` command.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]