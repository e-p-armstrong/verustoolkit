[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to use the `getnotarizationdata` command and I'm not sure about its default behavior. What does it do when it comes to returning notarization evidence?\n\n**AI Assistant:**\nThe default behavior of the `getnotarizationdata` command is to not return notarization evidence. In order to return notarization evidence, the `getevidence` argument must be set to `true`. So if you want to get the evidence, you need to explicitly specify that.\n\n**User:**\nGot it, thanks! Another question, is it valid to have a challenge request with both `confirmnotarization` and `confirmroot`?\n\n**AI Assistant:**\nNo, it is not valid to have a challenge request with both `confirmnotarization` and `confirmroot`. Those two parameters are mutually exclusive, so you can only use one or the other, not both together.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the default behavior of the `getnotarizationdata` command when it comes to returning notarization evidence?",
            "The default behavior of the `getnotarizationdata` command is to not return notarization evidence. In order to return notarization evidence, the `getevidence` argument must be set to `true`.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "Is it valid to have a challenge request with both `confirmnotarization` and `confirmroot`?",
            "No, it is not valid to have a challenge request with both `confirmnotarization` and `confirmroot`.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]