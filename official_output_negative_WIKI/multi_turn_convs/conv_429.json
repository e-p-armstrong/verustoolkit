[
    "## Conversation that answers the provided questions:\n**User:**\nI've been experimenting with the Verus daemon, and I'm wondering if the current version, v0.7.1-4, is suitable for use on the mainnet?\n\n**AI Assistant:**\nUnfortunately, no, Verus daemon v0.7.1-4 is not yet considered hardened for mainnet use. While it offers several enhancements and new features, such as support for multi-currency transactions and currency burn functions, it is still intended for use on the testnet. It's great that you're experimenting, but for now, it's best to stick with the testnet until a more stable version is released.\n\n**User:**\nI've been playing around with the \"sendcurrency\" API, and I was wondering what happens if the \"burn\" parameter is set to 0?\n\n**AI Assistant:**\nThe behavior of the \"sendcurrency\" API when the \"burn\" parameter is set to 0 is not specified. If \"burn\" is set to 1, a currency sent (which must be a token or fractional currency) is officially removed from that currency's supply. So, in this case, setting \"burn\" to 0 doesn't have a defined behavior. It's always a good idea to check the documentation and ensure you're using the API correctly to avoid any unexpected results.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "Is Verus daemon v0.7.1-4 suitable for use on the mainnet?",
            "No, Verus daemon v0.7.1-4 is not yet considered hardened for mainnet use. While it offers several enhancements and new features, such as support for multi-currency transactions and currency burn functions, it is still intended for use on the testnet.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What happens if the \"burn\" parameter is set to 0 when using the \"sendcurrency\" API?",
            "The behavior of the \"sendcurrency\" API when the \"burn\" parameter is set to 0 is not specified. If \"burn\" is set to 1, a currency sent (which must be a token or fractional currency) is officially removed from that currency's supply.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]