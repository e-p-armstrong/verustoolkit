[
    "## Conversation that answers the provided questions:\n**User:**\nI'm still learning about VerusIDs and I'm curious about how they work. Can you tell me, how does the recovery authority modify the revocation state of an ID?\n\n**AI Assistant:**\nThe recovery authority cannot modify the revocation state of an ID, unless they are both controlled by the same underlying authority. The recovery authority can only recover the identity through redefining its primary state and the recovery state.\n\n**User:**\nThat makes sense. I'm also wondering, are VerusIDs public, meaning anyone can access their private addresses and content maps?\n\n**AI Assistant:**\nNo, VerusIDs are private. Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong identity, attested to with a quantum secure signature when that is available.\n\n**User:**\nI've heard about VerusHash and its updates. Did VerusHash 2.0 block FPGAs from being used on the Verus network?\n\n**AI Assistant:**\nNo, VerusHash 2.0 did not block FPGAs from being used on the Verus network. In fact, it was developed to equalize FPGAs and modern CPUs, and VerusHash 2.1 introduces an adjustment to the equalization technology to further balance the performance between FPGAs and CPUs.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How does the recovery authority modify the revocation state of an ID?",
            "The recovery authority cannot modify the revocation state of an ID, unless they are both controlled by the same underlying authority. The recovery authority can only recover the identity through redefining its primary state and the recovery state.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Are VerusIDs public, meaning anyone can access their private addresses and content maps?",
            "No, VerusIDs are private. Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong identity, attested to with a quantum secure signature when that is available.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Did VerusHash 2.0 block FPGAs from being used on the Verus network?",
            "No, VerusHash 2.0 did not block FPGAs from being used on the Verus network. In fact, it was developed to equalize FPGAs and modern CPUs, and VerusHash 2.1 introduces an adjustment to the equalization technology to further balance the performance between FPGAs and CPUs.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]