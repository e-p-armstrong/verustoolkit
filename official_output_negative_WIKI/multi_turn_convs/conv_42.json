[
    "## Conversation that answers the provided questions:\n**User:**\nI've been experimenting with currency definitions, and I'm not entirely sure what some of the settings do. Can you help me out? Specifically, what does it mean when you set `proofprotocol` to 1 in a currency definition?\n\n**AI Assistant:**\nThe meaning of setting `proofprotocol` to 1 in a currency definition is actually not specified. However, I can tell you that setting `proofprotocol` to 2 means that the controller of the chain ID can mint new coins, which corresponds to PROOF_CHAINID. If you're unsure about the other settings, feel free to ask and I'll do my best to explain them to you!\n\n**User:**\nThanks for the clarification! I've also been trying to set up a new node in the PBaaSChain network, but I'm not sure how to do it. Can you walk me through the process?\n\n**AI Assistant:**\nDefining a new node in the PBaaSChain network is actually pretty straightforward. To do it, you'll need to add a new object to the \"nodes\" array, specifying the \"networkaddress\" and \"nodeidentity\" of the new node. Here's an example of what that might look like:\n```json\n{\n  \"networkaddress\": \"111.111.111.113:10000\",\n  \"nodeidentity\": \"Node3@\"\n}\n```\nJust fill in the relevant information for your new node, and you should be good to go! If you have any more questions or need further assistance, don't hesitate to ask.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does it mean when you set `proofprotocol` to 1 in a currency definition?",
            "The meaning of setting `proofprotocol` to 1 in a currency definition is not specified. However, setting `proofprotocol` to 2 means that the controller of the chain ID can mint new coins, which corresponds to PROOF_CHAINID.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do you define a new node in the PBaaSChain network?",
            "You define a new node in the PBaaSChain network by adding a new object to the \"nodes\" array, specifying the \"networkaddress\" and \"nodeidentity\" of the new node. For example:\n```json\n{\n  \"networkaddress\": \"111.111.111.113:10000\",\n  \"nodeidentity\": \"Node3@\"\n}\n```",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]