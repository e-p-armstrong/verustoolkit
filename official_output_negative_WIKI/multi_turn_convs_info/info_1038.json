[
    [
        [
            "Why does the `signfile` command generate a SHA256D hash of the file?",
            "The `signfile` command actually generates a SHA256 hash of the file, not SHA256D. The documentation incorrectly states that it generates a SHA256D hash.",
            "### `signfile \"address or identity\" \"filepath/filename\" \"curentsig\"`\nGenerates a SHA256D hash of the file, returns the hash, and signs the hash with the private key specified#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing.\n2. \"filename\"    (string, required) Local file to sign\n2. \"cursig\"     (string) The current signature of the message encoded in base 64 if multisig ID#### Result:\n```json\n{\n \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)\n \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful\n}\n```Examples:Create the signature\n```bash\n> verus signfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"filepath/filename\"\n```\nVerify the signature\n```bash\n> verus verifyfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"filepath/filename\"\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signfile\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `signmessage \"address or identity\" \"message\" \"curentsig\"`\nSign a message with the private key of a t-addr or the authorities present in this wallet for an identity#### Arguments:\n1. \"t-addr or identity\"    (string, required) The transparent address or identity to use for signing.\n2. \"message\"          (string, required) The message to create a signature of.\n2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `signmessage` command?",
            "The `signmessage` command signs a message with the private key of a transparent address or the authorities present in the wallet for an identity. It does not create a new identity or wallet, as you might have thought.",
            "### `signfile \"address or identity\" \"filepath/filename\" \"curentsig\"`\nGenerates a SHA256D hash of the file, returns the hash, and signs the hash with the private key specified#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing.\n2. \"filename\"    (string, required) Local file to sign\n2. \"cursig\"     (string) The current signature of the message encoded in base 64 if multisig ID#### Result:\n```json\n{\n \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)\n \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful\n}\n```Examples:Create the signature\n```bash\n> verus signfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"filepath/filename\"\n```\nVerify the signature\n```bash\n> verus verifyfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"filepath/filename\"\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signfile\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `signmessage \"address or identity\" \"message\" \"curentsig\"`\nSign a message with the private key of a t-addr or the authorities present in this wallet for an identity#### Arguments:\n1. \"t-addr or identity\"    (string, required) The transparent address or identity to use for signing.\n2. \"message\"          (string, required) The message to create a signature of.\n2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "Can I use the `signfile` command to sign a message?",
            "No, you cannot use the `signfile` command to sign a message. The `signfile` command is used to sign a file, while the `signmessage` command is used to sign a message. The two commands serve different purposes and have different arguments.",
            "### `signfile \"address or identity\" \"filepath/filename\" \"curentsig\"`\nGenerates a SHA256D hash of the file, returns the hash, and signs the hash with the private key specified#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing.\n2. \"filename\"    (string, required) Local file to sign\n2. \"cursig\"     (string) The current signature of the message encoded in base 64 if multisig ID#### Result:\n```json\n{\n \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)\n \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful\n}\n```Examples:Create the signature\n```bash\n> verus signfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"filepath/filename\"\n```\nVerify the signature\n```bash\n> verus verifyfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"filepath/filename\"\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signfile\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `signmessage \"address or identity\" \"message\" \"curentsig\"`\nSign a message with the private key of a t-addr or the authorities present in this wallet for an identity#### Arguments:\n1. \"t-addr or identity\"    (string, required) The transparent address or identity to use for signing.\n2. \"message\"          (string, required) The message to create a signature of.\n2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "7f3fe9bb-9670-495d-9a5c-bd0e188a4402"
]