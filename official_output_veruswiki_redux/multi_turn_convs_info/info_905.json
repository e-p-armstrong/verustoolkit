[
    [
        [
            "What is the purpose of the `prioritisetransaction` command in Verus?",
            "The `prioritisetransaction` command in Verus is used to adjust the priority of a specific transaction. This is done by adding or subtracting a priority delta and a fee delta to the transaction's current values. This adjustment affects how the transaction selection algorithm considers the transaction when selecting transactions to include in a block.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the required arguments for the `prioritisetransaction` command, and what do they represent?",
            "The `prioritisetransaction` command requires three arguments:\n\n1. `txid`: The transaction ID of the transaction to be prioritized.\n2. `priority delta`: A numeric value representing the priority to add or subtract from the transaction.\n3. `fee delta`: A numeric value representing the fee value (in satoshis) to add or subtract from the transaction.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How does the `setminingdistribution` command in Verus work?",
            "The `setminingdistribution` command in Verus is used to set multiple mining outputs with relative values that will be used to calculate the distribution of rewards to each address. This is done by providing a JSON object with destination addresses as keys and their corresponding relative values as values.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the format of the JSON object required for the `setminingdistribution` command?",
            "The JSON object required for the `setminingdistribution` command should have the following format:\n\n```json\n{\n  \"uniquedestination1\": value,\n  \"uniquedestination2\": value,\n ...\n}\n```\n\nWhere `uniquedestination1`, `uniquedestination2`, etc. are valid destination addresses, and `value` is the relative value output to each address.",
            "#### Arguments:\n```\n1. \"txid\"     (string, required) The transaction id.\n2. priority delta (numeric, required) The priority to add or subtract.\n         The transaction selection algorithm considers the tx as it would have a higher priority.\n         (priority of a transaction is calculated: coinage * value_in_satoshis / txsize)\n3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\n         The fee is not actually paid, only the algorithm for selecting transactions into a block\n         considers the transaction as it would have paid a higher (or lower) fee.\n```\n#### Results:\n```\ntrue       (boolean) Returns true\n```\nExamples:\n```bash\n> verus prioritisetransaction \"txid\" 0.0 10000\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `setminingdistribution ( \"jsonminingdistribution\" )`\nSets multiple mining outputs with amounts that will be used to calculate relative outputs to each address for any reward\n#### Arguments\n```json\n{\n \"uniquedestination1\":value  (key/number, required) valid destination address and relative value output to it\n \"uniquedestination2\":value  (key/number, optional) destination address and relative value output\n ...\n}\n```\n#### Result\nNULL for success, exception otherwise\n#### Examples:\n```bash\n> verus setminingdistribution {\"myaddress\":0.5, \"otheraddress\":0.5}\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"setminingdistribution\", \"params\": [{\"myaddress\":0.5, \"otheraddress\":0.5}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "55b994b2-ab04-4992-8d80-4e65eaf65c12"
]