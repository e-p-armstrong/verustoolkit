[
    [
        [
            "How can I specify the network to connect to when running a Verus node?",
            "You can specify the network to connect to using the `-onlynet=<net>` option, where `<net>` is either `ipv4`, `ipv6`, or `onion`.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ],
        [
            "What is the purpose of the `-permitbaremultisig` option, and what is its default value?",
            "The `-permitbaremultisig` option allows relaying non-P2SH multisig transactions. Its default value is 1, which means it is enabled by default.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ],
        [
            "How can I enable filtering of blocks and transactions using Bloom filters?",
            "You can enable filtering of blocks and transactions using Bloom filters by using the `-peerbloomfilters` option. This option is enabled by default, but you can toggle it off by setting it to 0.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ],
        [
            "How can I specify the port to listen for connections on when running a Verus node?",
            "You can specify the port to listen for connections on using the `-port=<port>` option, where `<port>` is the desired port number. The default port is 7770 for the main network and 17770 for the test network.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ],
        [
            "How can I connect to a Verus node through a SOCKS5 proxy?",
            "You can connect to a Verus node through a SOCKS5 proxy by using the `-proxy=<ip:port>` option, where `<ip:port>` is the address and port of the proxy.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ],
        [
            "What is the purpose of the `-torcontrol=<ip>:<port>` option, and what is its default value?",
            "The `-torcontrol=<ip>:<port>` option specifies the Tor control port to use if onion listening is enabled. Its default value is `127.0.0.1:9051`.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ],
        [
            "How can I set a custom User Agent for my Verus node?",
            "You can set a custom User Agent for your Verus node using the `-uacomment=<string>` option, where `<string>` is the desired User Agent string. Note that using this option can have implications on your anonymity.",
            "`-onlynet=<net>`\n    Only connect to nodes in network <net> (ipv4, ipv6 or onion)`-permitbaremultisig`\n    Relay non-P2SH multisig (default: 1)`-peerbloomfilters`\n    Support filtering of blocks and transaction with Bloom filters (default:\n    1)`-port=<port>`\n    Listen for connections on <port> (default: 7770 or testnet: 17770)`-proxy=<ip:port>`\n    Connect through SOCKS5 proxy`-proxyrandomize`\n    Randomize credentials for every proxy connection. This enables Tor\n    stream isolation (default: 1)`-seednode=<ip>`\n    Connect to a node to retrieve peer addresses, and disconnect`-timeout=<n>`\n    Specify connection timeout in milliseconds (minimum: 1, default: 5000)`-torcontrol=<ip>:<port>`\n    Tor control port to use if onion listening enabled (default:\n    127.0.0.1:9051)`-torpassword=<pass>`\n    Tor control port password (default: empty)`-tlsdisable=<0 or 1>`\n    Disable TLS connections. (default: 0)`-tlsenforcement=<0 or 1>`\n   Only connect to TLS compatible peers. (default: 0)`-tlsfallbacknontls=<0 or 1>`\n   If a TLS connection fails, the next connection attempt of the same peer\n   (based on IP address) takes place without TLS (default: 1)`-tlsvalidate=<0 or 1>`\n   Connect to peers only with valid certificates (default: 0)`-tlskeypath=<path>`\n   Full path to a private key`-tlskeypwd=<password>`\n   Password for a private key encryption (default: not set, i.e. private\n   key will be stored unencrypted)`-tlscertpath=<path>`\n   Full path to a certificate`-tlstrustdir=<path>`\n   Full path to a trusted certificates directory`-uacomment=<string>`\n    Set a User Agent to your daemon. (default: disabled/none)\n    Shows as appended text in the `\"subver\"` string on connected nodes\n    Using this option has implications on your anonymity!",
            "./raw_text_input_wiki/clifaq-01_verusd_options.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c2924f5f-be59-47f6-ae3d-4a181fb6ca9c"
]