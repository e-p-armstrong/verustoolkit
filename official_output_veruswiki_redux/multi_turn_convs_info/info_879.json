[
    [
        [
            "What is the purpose of the \"returntx\" parameter when updating an identity in Verus?",
            "The \"returntx\" parameter is a boolean optional parameter that defaults to false. If set to true, the transaction is signed by the wallet and returned, rather than being sent.",
            "\"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned\n\"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update\n                           which enables changing the revocation or recovery IDs, even if the wallet holding the token does not\n                           control either.\n\"feeoffer\"            (bool,  optional) non-standard fee amount to pay for the transaction\n\"sourceoffunds\"          (string,  optional) transparent or private address to source all funds for fees to preserve privacy of the identity\n```#### Result:\n  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is trueExamples:\n```bash\n> verus updateidentity '{\"name\" : \"myname\"}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifyfile \"address or identity\" \"signature\" \"filepath/filename\" \"checklatest\"`\nVerify a signed file#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the file.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signfile).\n3. \"filename\"      (string, required) The file, which must be available locally to the daemon and that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What does the \"tokenupdate\" parameter do when updating an identity in Verus?",
            "The \"tokenupdate\" parameter is a boolean optional parameter that defaults to false. If set to true, the tokenized ID control token, if one exists, will be used to update, which enables changing the revocation or recovery IDs, even if the wallet holding the token does not control either.",
            "\"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned\n\"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update\n                           which enables changing the revocation or recovery IDs, even if the wallet holding the token does not\n                           control either.\n\"feeoffer\"            (bool,  optional) non-standard fee amount to pay for the transaction\n\"sourceoffunds\"          (string,  optional) transparent or private address to source all funds for fees to preserve privacy of the identity\n```#### Result:\n  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is trueExamples:\n```bash\n> verus updateidentity '{\"name\" : \"myname\"}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifyfile \"address or identity\" \"signature\" \"filepath/filename\" \"checklatest\"`\nVerify a signed file#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the file.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signfile).\n3. \"filename\"      (string, required) The file, which must be available locally to the daemon and that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I specify a non-standard fee amount to pay for a transaction when updating an identity in Verus?",
            "You can specify a non-standard fee amount to pay for a transaction by using the \"feeoffer\" parameter.",
            "\"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned\n\"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update\n                           which enables changing the revocation or recovery IDs, even if the wallet holding the token does not\n                           control either.\n\"feeoffer\"            (bool,  optional) non-standard fee amount to pay for the transaction\n\"sourceoffunds\"          (string,  optional) transparent or private address to source all funds for fees to preserve privacy of the identity\n```#### Result:\n  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is trueExamples:\n```bash\n> verus updateidentity '{\"name\" : \"myname\"}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifyfile \"address or identity\" \"signature\" \"filepath/filename\" \"checklatest\"`\nVerify a signed file#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the file.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signfile).\n3. \"filename\"      (string, required) The file, which must be available locally to the daemon and that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the \"sourceoffunds\" parameter when updating an identity in Verus?",
            "The \"sourceoffunds\" parameter is a string optional parameter that allows you to specify a transparent or private address to source all funds for fees, which helps preserve the privacy of the identity.",
            "\"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned\n\"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update\n                           which enables changing the revocation or recovery IDs, even if the wallet holding the token does not\n                           control either.\n\"feeoffer\"            (bool,  optional) non-standard fee amount to pay for the transaction\n\"sourceoffunds\"          (string,  optional) transparent or private address to source all funds for fees to preserve privacy of the identity\n```#### Result:\n  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is trueExamples:\n```bash\n> verus updateidentity '{\"name\" : \"myname\"}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifyfile \"address or identity\" \"signature\" \"filepath/filename\" \"checklatest\"`\nVerify a signed file#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the file.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signfile).\n3. \"filename\"      (string, required) The file, which must be available locally to the daemon and that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I verify a signed file in Verus?",
            "You can verify a signed file in Verus by using the `verifyfile` command, which takes four parameters: the transparent address or identity that signed the file, the signature provided by the signer in base 64 encoding, the file path and name, and an optional boolean parameter \"checklatest\" that determines how the signature validity is checked. The command returns true if the signature is verified, and false otherwise.",
            "\"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned\n\"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update\n                           which enables changing the revocation or recovery IDs, even if the wallet holding the token does not\n                           control either.\n\"feeoffer\"            (bool,  optional) non-standard fee amount to pay for the transaction\n\"sourceoffunds\"          (string,  optional) transparent or private address to source all funds for fees to preserve privacy of the identity\n```#### Result:\n  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is trueExamples:\n```bash\n> verus updateidentity '{\"name\" : \"myname\"}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifyfile \"address or identity\" \"signature\" \"filepath/filename\" \"checklatest\"`\nVerify a signed file#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the file.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signfile).\n3. \"filename\"      (string, required) The file, which must be available locally to the daemon and that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d4b77b90-96d8-40e9-8452-265d209261d2"
]