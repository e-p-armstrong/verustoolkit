[
    [
        [
            "What is the purpose of the `getnetworkhashps` command in Verus?",
            "The `getnetworkhashps` command is used to estimate the network solutions per second based on the last n blocks. It is deprecated and has been replaced by `getnetworksolps` for backwards-compatibility.",
            "### `getnetworkhashps ( blocks height )`\nDEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.Returns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworkhashps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnetworksolps ( blocks height )`\nReturns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworksolps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `prioritisetransaction <txid> <priority delta> <fee delta>`\nAccepts the transaction into mined blocks at a higher (or lower) priority",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `getnetworksolps` command to estimate the network speed at a certain block height?",
            "You can use the `getnetworksolps` command to estimate the network speed at a certain block height by passing the block height as an argument. For example: `verus getnetworksolps <height>`.",
            "### `getnetworkhashps ( blocks height )`\nDEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.Returns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworkhashps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnetworksolps ( blocks height )`\nReturns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworksolps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `prioritisetransaction <txid> <priority delta> <fee delta>`\nAccepts the transaction into mined blocks at a higher (or lower) priority",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the optional arguments for the `getnetworksolps` command?",
            "The `getnetworksolps` command has two optional arguments:\n\n1. `blocks`: The number of blocks to consider, or -1 for blocks over the difficulty averaging window. The default value is 120.\n2. `height`: The block height at which to estimate the network speed. The default value is -1.",
            "### `getnetworkhashps ( blocks height )`\nDEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.Returns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworkhashps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnetworksolps ( blocks height )`\nReturns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworksolps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `prioritisetransaction <txid> <priority delta> <fee delta>`\nAccepts the transaction into mined blocks at a higher (or lower) priority",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `prioritisetransaction` command in Verus?",
            "The `prioritisetransaction` command is used to accept a transaction into mined blocks at a higher (or lower) priority. It takes three arguments: `<txid>`, `<priority delta>`, and `<fee delta>`.",
            "### `getnetworkhashps ( blocks height )`\nDEPRECATED - left for backwards-compatibility. Use getnetworksolps instead.Returns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworkhashps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnetworksolps ( blocks height )`\nReturns the estimated network solutions per second based on the last n blocks.\nPass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window.\nPass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments:\n```\n1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window.\n2. height   (numeric, optional, default=-1) To estimate at the time of the given height.\n```\n#### Result:\n```\nx       (numeric) Solutions per second estimated\n```\nExamples:\n```bash\n> verus getnetworksolps\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `prioritisetransaction <txid> <priority delta> <fee delta>`\nAccepts the transaction into mined blocks at a higher (or lower) priority",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "2637db6a-e074-45e8-8acd-72ce11b4ce6f"
]