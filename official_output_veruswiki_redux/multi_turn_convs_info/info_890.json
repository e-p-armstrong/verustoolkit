[
    [
        [
            "What information does the `getmininginfo` command provide in Verus?",
            "The `getmininginfo` command in Verus returns a JSON object containing various mining-related information, including:\n\n* The current block number\n* The last block size\n* The last block transaction\n* The average block fees over the past 100 blocks\n* The current difficulty\n* The current estimated total staking supply\n* Current errors\n* Whether generation is on or off\n* The processor limit for generation\n* The average local solution rate in Sol/s since the node was started\n* The estimated network solution rate in Sol/s\n* The size of the mem pool\n* Whether the node is on the testnet or not\n* The current network name\n* Whether the instance is mining or staking\n* Whether staking is enabled\n* The number of CPU threads mining\n* The number of blockchains being merge mined with\n* A list of blockchain names being merge mined with (optional)",
            "### `getmininginfo`\nReturns a json object containing mining-related information.\n#### Result:\n```\n{\n \"blocks\": nnn,       (numeric) The current block\n \"currentblocksize\": nnn,  (numeric) The last block size\n \"currentblocktx\": nnn,   (numeric) The last block transaction\n \"averageblockfees\": xxx.xxxxx (numeric) The average block fees, in addition to block reward, over the past 100 blocks\n \"difficulty\": xxx.xxxxx  (numeric) The current difficulty\n \"stakingsupply\": xxx.xxxxx (numeric) The current estimated total staking supply\n \"errors\": \"...\"      (string) Current errors\n \"generate\": true|false   (boolean) If the generation is on or off (see getgenerate or setgenerate calls)\n \"genproclimit\": n     (numeric) The processor limit for generation. -1 if no generation. (see getgenerate or setgenerate calls)\n \"localsolps\": xxx.xxxxx  (numeric) The average local solution rate in Sol/s since this node was started\n \"networksolps\": x     (numeric) The estimated network solution rate in Sol/s\n \"pooledtx\": n       (numeric) The size of the mem pool\n \"testnet\": true|false   (boolean) If using testnet or not\n \"chain\": \"xxxx\",      (string) current network name as defined in BIP70 (main, test, regtest)\n \"generate\": true|false   (boolean) If this instance is mining or staking\n \"staking\": true|false   (boolean) If staking\n \"numthreads\": n      (numeric) Number of CPU threads mining\n \"mergemining\": n      (numeric) Number of blockchains we are merge mining with\n \"mergeminedchains\": []   (optional, list of names) Blockchain names that are being merge mined with this blockchain\n}\n```\nExamples:\n```bash\n> verus getmininginfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `getmininginfo` command in Verus?",
            "You can use the `getmininginfo` command in Verus by running `verus getmininginfo` in the command line. Alternatively, you can use a curl command to access the same information through the RPC interface. The format of the curl command is:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `myusername` with your actual username and the URL with the correct RPC endpoint for your Verus node.",
            "### `getmininginfo`\nReturns a json object containing mining-related information.\n#### Result:\n```\n{\n \"blocks\": nnn,       (numeric) The current block\n \"currentblocksize\": nnn,  (numeric) The last block size\n \"currentblocktx\": nnn,   (numeric) The last block transaction\n \"averageblockfees\": xxx.xxxxx (numeric) The average block fees, in addition to block reward, over the past 100 blocks\n \"difficulty\": xxx.xxxxx  (numeric) The current difficulty\n \"stakingsupply\": xxx.xxxxx (numeric) The current estimated total staking supply\n \"errors\": \"...\"      (string) Current errors\n \"generate\": true|false   (boolean) If the generation is on or off (see getgenerate or setgenerate calls)\n \"genproclimit\": n     (numeric) The processor limit for generation. -1 if no generation. (see getgenerate or setgenerate calls)\n \"localsolps\": xxx.xxxxx  (numeric) The average local solution rate in Sol/s since this node was started\n \"networksolps\": x     (numeric) The estimated network solution rate in Sol/s\n \"pooledtx\": n       (numeric) The size of the mem pool\n \"testnet\": true|false   (boolean) If using testnet or not\n \"chain\": \"xxxx\",      (string) current network name as defined in BIP70 (main, test, regtest)\n \"generate\": true|false   (boolean) If this instance is mining or staking\n \"staking\": true|false   (boolean) If staking\n \"numthreads\": n      (numeric) Number of CPU threads mining\n \"mergemining\": n      (numeric) Number of blockchains we are merge mining with\n \"mergeminedchains\": []   (optional, list of names) Blockchain names that are being merge mined with this blockchain\n}\n```\nExamples:\n```bash\n> verus getmininginfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `getmininginfo` command in Verus?",
            "The `getmininginfo` command in Verus is used to retrieve information about the current state of mining and staking on the node. This information can be useful for monitoring the performance of the node, troubleshooting issues, and making informed decisions about mining and staking strategies.",
            "### `getmininginfo`\nReturns a json object containing mining-related information.\n#### Result:\n```\n{\n \"blocks\": nnn,       (numeric) The current block\n \"currentblocksize\": nnn,  (numeric) The last block size\n \"currentblocktx\": nnn,   (numeric) The last block transaction\n \"averageblockfees\": xxx.xxxxx (numeric) The average block fees, in addition to block reward, over the past 100 blocks\n \"difficulty\": xxx.xxxxx  (numeric) The current difficulty\n \"stakingsupply\": xxx.xxxxx (numeric) The current estimated total staking supply\n \"errors\": \"...\"      (string) Current errors\n \"generate\": true|false   (boolean) If the generation is on or off (see getgenerate or setgenerate calls)\n \"genproclimit\": n     (numeric) The processor limit for generation. -1 if no generation. (see getgenerate or setgenerate calls)\n \"localsolps\": xxx.xxxxx  (numeric) The average local solution rate in Sol/s since this node was started\n \"networksolps\": x     (numeric) The estimated network solution rate in Sol/s\n \"pooledtx\": n       (numeric) The size of the mem pool\n \"testnet\": true|false   (boolean) If using testnet or not\n \"chain\": \"xxxx\",      (string) current network name as defined in BIP70 (main, test, regtest)\n \"generate\": true|false   (boolean) If this instance is mining or staking\n \"staking\": true|false   (boolean) If staking\n \"numthreads\": n      (numeric) Number of CPU threads mining\n \"mergemining\": n      (numeric) Number of blockchains we are merge mining with\n \"mergeminedchains\": []   (optional, list of names) Blockchain names that are being merge mined with this blockchain\n}\n```\nExamples:\n```bash\n> verus getmininginfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "97e56e1d-8606-4d13-98b8-7dff9b28527c"
]