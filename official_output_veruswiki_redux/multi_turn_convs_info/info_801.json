[
    [
        [
            "What is the purpose of the `z_validatepaymentdisclosure` command, and how can I enable it?",
            "The `z_validatepaymentdisclosure` command is used to validate a payment disclosure. To enable it, you need to restart verusd with the `-experimentalfeatures` and `-paymentdisclosure` command-line options, or add the following two lines to the `zcash.conf` file:\n```\nexperimentalfeatures=1\npaymentdisclosure=1\n```",
            "WARNING: z_validatepaymentdisclosure is disabled.\nTo enable it, restart verusd with the `-experimentalfeatures` and\n`-paymentdisclosure` commandline options, or add these two lines\nto the zcash.conf file:\n```\nexperimentalfeatures=1\npaymentdisclosure=1\n```\n#### Arguments:\n```\n1. \"paymentdisclosure\"   (string, required) Hex data string, with \"zpd:\" prefix.\n```\nExamples:\n```bash\n> verus z_validatepaymentdisclosure \"zpd:706462ff004c561a0447ba2ec51184e6c204...\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_validatepaymentdisclosure\", \"params\": [\"zpd:706462ff004c561a0447ba2ec51184e6c204...\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Generating\n### `generate numblocks`\nMine blocks immediately (before the RPC call returns)Note: this function can only be used on the regtest network#### Arguments:\n```\n1. numblocks  (numeric) How many blocks are generated immediately.\n```\n### Result:\n```json\n[ blockhashes ]   (array) hashes of blocks generated\n```\nExamples:Generate 11 blocks\n```bash\n> verus generate 11\n```### `getgenerate`\nReturn if the server is set to mine and/or mint coins or not. The default is false.\nIt is set with the command line argument `-gen` (or `VRSC.conf` setting `gen`) and `-mint`\nIt can also be set with the `setgenerate` call.Result\n```json\n{\n \"staking\": true|false   (boolean) If staking is on or off (see setgenerate)\n \"generate\": true|false   (boolean) If mining is on or off (see setgenerate)\n \"numthreads\": n      (numeric) The processor limit for mining. (see setgenerate)\n}\n```\n####Examples:\n```bash\n> verus getgenerate\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getgenerate\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `z_validatepaymentdisclosure` command, and what arguments does it take?",
            "The `z_validatepaymentdisclosure` command takes a single argument, which is a string in the format of a hex data string with a \"zpd:\" prefix. You can use it in the Verus command-line interface or through an RPC call using `curl`.",
            "WARNING: z_validatepaymentdisclosure is disabled.\nTo enable it, restart verusd with the `-experimentalfeatures` and\n`-paymentdisclosure` commandline options, or add these two lines\nto the zcash.conf file:\n```\nexperimentalfeatures=1\npaymentdisclosure=1\n```\n#### Arguments:\n```\n1. \"paymentdisclosure\"   (string, required) Hex data string, with \"zpd:\" prefix.\n```\nExamples:\n```bash\n> verus z_validatepaymentdisclosure \"zpd:706462ff004c561a0447ba2ec51184e6c204...\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_validatepaymentdisclosure\", \"params\": [\"zpd:706462ff004c561a0447ba2ec51184e6c204...\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Generating\n### `generate numblocks`\nMine blocks immediately (before the RPC call returns)Note: this function can only be used on the regtest network#### Arguments:\n```\n1. numblocks  (numeric) How many blocks are generated immediately.\n```\n### Result:\n```json\n[ blockhashes ]   (array) hashes of blocks generated\n```\nExamples:Generate 11 blocks\n```bash\n> verus generate 11\n```### `getgenerate`\nReturn if the server is set to mine and/or mint coins or not. The default is false.\nIt is set with the command line argument `-gen` (or `VRSC.conf` setting `gen`) and `-mint`\nIt can also be set with the `setgenerate` call.Result\n```json\n{\n \"staking\": true|false   (boolean) If staking is on or off (see setgenerate)\n \"generate\": true|false   (boolean) If mining is on or off (see setgenerate)\n \"numthreads\": n      (numeric) The processor limit for mining. (see setgenerate)\n}\n```\n####Examples:\n```bash\n> verus getgenerate\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getgenerate\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `generate` command, and how can I use it?",
            "The `generate` command is used to mine blocks immediately on the regtest network. It takes a single argument, `numblocks`, which specifies the number of blocks to generate. You can use it to generate a specified number of blocks on the regtest network.",
            "WARNING: z_validatepaymentdisclosure is disabled.\nTo enable it, restart verusd with the `-experimentalfeatures` and\n`-paymentdisclosure` commandline options, or add these two lines\nto the zcash.conf file:\n```\nexperimentalfeatures=1\npaymentdisclosure=1\n```\n#### Arguments:\n```\n1. \"paymentdisclosure\"   (string, required) Hex data string, with \"zpd:\" prefix.\n```\nExamples:\n```bash\n> verus z_validatepaymentdisclosure \"zpd:706462ff004c561a0447ba2ec51184e6c204...\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_validatepaymentdisclosure\", \"params\": [\"zpd:706462ff004c561a0447ba2ec51184e6c204...\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Generating\n### `generate numblocks`\nMine blocks immediately (before the RPC call returns)Note: this function can only be used on the regtest network#### Arguments:\n```\n1. numblocks  (numeric) How many blocks are generated immediately.\n```\n### Result:\n```json\n[ blockhashes ]   (array) hashes of blocks generated\n```\nExamples:Generate 11 blocks\n```bash\n> verus generate 11\n```### `getgenerate`\nReturn if the server is set to mine and/or mint coins or not. The default is false.\nIt is set with the command line argument `-gen` (or `VRSC.conf` setting `gen`) and `-mint`\nIt can also be set with the `setgenerate` call.Result\n```json\n{\n \"staking\": true|false   (boolean) If staking is on or off (see setgenerate)\n \"generate\": true|false   (boolean) If mining is on or off (see setgenerate)\n \"numthreads\": n      (numeric) The processor limit for mining. (see setgenerate)\n}\n```\n####Examples:\n```bash\n> verus getgenerate\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getgenerate\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What information does the `getgenerate` command provide, and how can I use it?",
            "The `getgenerate` command returns information about the server's mining and minting settings. It provides three pieces of information: whether staking is on or off, whether mining is on or off, and the processor limit for mining. You can use it to check the current mining and minting settings of the server.",
            "WARNING: z_validatepaymentdisclosure is disabled.\nTo enable it, restart verusd with the `-experimentalfeatures` and\n`-paymentdisclosure` commandline options, or add these two lines\nto the zcash.conf file:\n```\nexperimentalfeatures=1\npaymentdisclosure=1\n```\n#### Arguments:\n```\n1. \"paymentdisclosure\"   (string, required) Hex data string, with \"zpd:\" prefix.\n```\nExamples:\n```bash\n> verus z_validatepaymentdisclosure \"zpd:706462ff004c561a0447ba2ec51184e6c204...\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_validatepaymentdisclosure\", \"params\": [\"zpd:706462ff004c561a0447ba2ec51184e6c204...\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Generating\n### `generate numblocks`\nMine blocks immediately (before the RPC call returns)Note: this function can only be used on the regtest network#### Arguments:\n```\n1. numblocks  (numeric) How many blocks are generated immediately.\n```\n### Result:\n```json\n[ blockhashes ]   (array) hashes of blocks generated\n```\nExamples:Generate 11 blocks\n```bash\n> verus generate 11\n```### `getgenerate`\nReturn if the server is set to mine and/or mint coins or not. The default is false.\nIt is set with the command line argument `-gen` (or `VRSC.conf` setting `gen`) and `-mint`\nIt can also be set with the `setgenerate` call.Result\n```json\n{\n \"staking\": true|false   (boolean) If staking is on or off (see setgenerate)\n \"generate\": true|false   (boolean) If mining is on or off (see setgenerate)\n \"numthreads\": n      (numeric) The processor limit for mining. (see setgenerate)\n}\n```\n####Examples:\n```bash\n> verus getgenerate\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getgenerate\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "bc77e952-9392-4b13-8c47-750da4f5e4fb"
]