[
    [
        [
            "How do I use the `getlastimportfrom` command to retrieve the last import from a system on the current chain?",
            "You can use the `getlastimportfrom` command by running `verus getlastimportfrom \"systemname\"` in the command line, replacing \"systemname\" with the name or ID of the system you want to retrieve the last import from. Alternatively, you can use the `curl` command with the JSON-RPC API to achieve the same result.",
            "#### Arguments:\n```\n  \"systemname\"        (string, required) name or ID of the system to retrieve the last import from\n```\n#### Result:\n```json\n{\n  \"lastimport\" :         (object) last import from the indicated system on this chain\n   {\n   }\n  \"lastconfirmednotarization\" :  (object) last confirmed notarization of the indicated system on this chain\n   {\n   }\n}\n```\nExamples:\n```bash\n> verus getlastimportfrom \"systemname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlastimportfrom\", \"params\": \"systemname\" }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getlaunchinfo \"currencyid\"`\nReturns the launch notarization data and partial transaction proof of the launch notarization for the specifed currencyid.#### Arguments:\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on#### Result:\n```json\n{\n \"currencydefinition\" : {},   (json) Full currency definition\n \"txid\" : \"hexstr\",       (hexstr) transaction ID\n \"voutnum\" : \"n\",        (number) vout index of the launch notarization\n \"transactionproof\" : {},    (json) Partial transaction proof of the launch transaction and output\n \"launchnotarization\" : {},   (json) Final CPBaaSNotarization clearing launch or refund\n \"notarynotarization\" : {},   (json) Current notarization of this chain\n}\n```Examples:\n```bash\n> verus getlaunchinfo \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlaunchinfo\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationdata \"currencyid\" (getevidence) (separatecounterevidence)`\nReturns the latest PBaaS notarization data for the specifed currencyid.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What information does the `getlaunchinfo` command return about a specified currency ID?",
            "The `getlaunchinfo` command returns a JSON object containing the launch notarization data and partial transaction proof of the launch notarization for the specified currency ID. This includes the full currency definition, transaction ID, vout index of the launch notarization, partial transaction proof of the launch transaction and output, final CPBaaSNotarization clearing launch or refund, and the current notarization of the chain.",
            "#### Arguments:\n```\n  \"systemname\"        (string, required) name or ID of the system to retrieve the last import from\n```\n#### Result:\n```json\n{\n  \"lastimport\" :         (object) last import from the indicated system on this chain\n   {\n   }\n  \"lastconfirmednotarization\" :  (object) last confirmed notarization of the indicated system on this chain\n   {\n   }\n}\n```\nExamples:\n```bash\n> verus getlastimportfrom \"systemname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlastimportfrom\", \"params\": \"systemname\" }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getlaunchinfo \"currencyid\"`\nReturns the launch notarization data and partial transaction proof of the launch notarization for the specifed currencyid.#### Arguments:\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on#### Result:\n```json\n{\n \"currencydefinition\" : {},   (json) Full currency definition\n \"txid\" : \"hexstr\",       (hexstr) transaction ID\n \"voutnum\" : \"n\",        (number) vout index of the launch notarization\n \"transactionproof\" : {},    (json) Partial transaction proof of the launch transaction and output\n \"launchnotarization\" : {},   (json) Final CPBaaSNotarization clearing launch or refund\n \"notarynotarization\" : {},   (json) Current notarization of this chain\n}\n```Examples:\n```bash\n> verus getlaunchinfo \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlaunchinfo\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationdata \"currencyid\" (getevidence) (separatecounterevidence)`\nReturns the latest PBaaS notarization data for the specifed currencyid.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How do I use the `getlaunchinfo` command to retrieve launch information about a currency ID?",
            "You can use the `getlaunchinfo` command by running `verus getlaunchinfo \"currencyid\"` in the command line, replacing \"currencyid\" with the hex-encoded ID or string name of the currency you want to retrieve launch information about. Alternatively, you can use the `curl` command with the JSON-RPC API to achieve the same result.",
            "#### Arguments:\n```\n  \"systemname\"        (string, required) name or ID of the system to retrieve the last import from\n```\n#### Result:\n```json\n{\n  \"lastimport\" :         (object) last import from the indicated system on this chain\n   {\n   }\n  \"lastconfirmednotarization\" :  (object) last confirmed notarization of the indicated system on this chain\n   {\n   }\n}\n```\nExamples:\n```bash\n> verus getlastimportfrom \"systemname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlastimportfrom\", \"params\": \"systemname\" }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getlaunchinfo \"currencyid\"`\nReturns the launch notarization data and partial transaction proof of the launch notarization for the specifed currencyid.#### Arguments:\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on#### Result:\n```json\n{\n \"currencydefinition\" : {},   (json) Full currency definition\n \"txid\" : \"hexstr\",       (hexstr) transaction ID\n \"voutnum\" : \"n\",        (number) vout index of the launch notarization\n \"transactionproof\" : {},    (json) Partial transaction proof of the launch transaction and output\n \"launchnotarization\" : {},   (json) Final CPBaaSNotarization clearing launch or refund\n \"notarynotarization\" : {},   (json) Current notarization of this chain\n}\n```Examples:\n```bash\n> verus getlaunchinfo \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlaunchinfo\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationdata \"currencyid\" (getevidence) (separatecounterevidence)`\nReturns the latest PBaaS notarization data for the specifed currencyid.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9d704231-2fc4-4395-8226-248f395cde84"
]