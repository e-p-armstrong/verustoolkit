[
    [
        [
            "What is a PBaaS blockchain, and how is it defined in Verus?",
            "A PBaaS (Public Blockchain as a Service) blockchain is a type of blockchain that can be defined and customized using Verus. It is defined using a JSON object that specifies the chain's properties, such as its name, options, currencies, conversions, eras, notaries, nodes, and gateway converter settings. This definition is then passed to the `definecurrency` command to create the PBaaS blockchain.",
            "### Defining a PBaaS blockchain\n```json\n {\n \"name\": \"PBaaSChain\",\n \"options\": 264,\n \"currencies\": [\n  \"VRSCTEST\"\n ],\n \"conversions\": [\n  1\n ],\n \"eras\": [\n  {\n   \"reward\": 1200000000,\n   \"decay\": 0,\n   \"halving\": 0,\n   \"eraend\": 0\n  }\n ],\n \"notaries\": [\n  \"Notary1@\",\n  \"Notary2@\",\n  \"Notary3@\",\n ],\n \"minnotariesconfirm\": 2,\n \"nodes\": [\n  {\n   \"networkaddress\": \"111.111.111.111:10000\",\n   \"nodeidentity\": \"Node1@\"\n  },\n  {\n   \"networkaddress\": \"111.111.111.112:10000\",\n   \"nodeidentity\": \"Node2@\"\n  }\n ],\n \"gatewayconvertername\": \"Bridge\",\n \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n {\n \"currencies\": [\n  \"VRSCTEST\",\n  \"PBaaSChain\",\n  \"USD\"\n ],\n \"initialcontributions\": [\n  380228.12033701,\n  0,\n  1000000\n ],\n \"initialsupply\": 3000000\n}\n```Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What are the key components of a PBaaS blockchain definition in Verus?",
            "The key components of a PBaaS blockchain definition in Verus include:\n\n1. `name`: The name of the PBaaS chain.\n2. `options`: An integer that specifies the chain's options.\n3. `currencies`: An array of currencies that can be used on the chain.\n4. `conversions`: An array of conversion ratios between currencies.\n5. `eras`: An array of objects that define the block reward, decay, halving, and end of each era in the chain's lifecycle.\n6. `notaries`: An array of VerusIDs that serve as notaries on the chain.\n7. `minnotariesconfirm`: An integer that specifies the minimum number of notaries required to confirm a block.\n8. `nodes`: An array of objects that define the network addresses and identities of the nodes on the chain.\n9. `gatewayconvertername`: The name of the gateway converter.\n10. `gatewayconverterissuance`: The initial issuance of the gateway converter's native token.",
            "### Defining a PBaaS blockchain\n```json\n {\n \"name\": \"PBaaSChain\",\n \"options\": 264,\n \"currencies\": [\n  \"VRSCTEST\"\n ],\n \"conversions\": [\n  1\n ],\n \"eras\": [\n  {\n   \"reward\": 1200000000,\n   \"decay\": 0,\n   \"halving\": 0,\n   \"eraend\": 0\n  }\n ],\n \"notaries\": [\n  \"Notary1@\",\n  \"Notary2@\",\n  \"Notary3@\",\n ],\n \"minnotariesconfirm\": 2,\n \"nodes\": [\n  {\n   \"networkaddress\": \"111.111.111.111:10000\",\n   \"nodeidentity\": \"Node1@\"\n  },\n  {\n   \"networkaddress\": \"111.111.111.112:10000\",\n   \"nodeidentity\": \"Node2@\"\n  }\n ],\n \"gatewayconvertername\": \"Bridge\",\n \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n {\n \"currencies\": [\n  \"VRSCTEST\",\n  \"PBaaSChain\",\n  \"USD\"\n ],\n \"initialcontributions\": [\n  380228.12033701,\n  0,\n  1000000\n ],\n \"initialsupply\": 3000000\n}\n```Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the bridge definition in a PBaaS blockchain, and how is it specified?",
            "The bridge definition specifies the properties of the bridge that connects the PBaaS chain to other chains. It is an optional component of the PBaaS blockchain definition and has overridable defaults. The bridge definition includes the currencies supported by the bridge, the initial contributions to the bridge, and the initial supply of the bridge's native token.",
            "### Defining a PBaaS blockchain\n```json\n {\n \"name\": \"PBaaSChain\",\n \"options\": 264,\n \"currencies\": [\n  \"VRSCTEST\"\n ],\n \"conversions\": [\n  1\n ],\n \"eras\": [\n  {\n   \"reward\": 1200000000,\n   \"decay\": 0,\n   \"halving\": 0,\n   \"eraend\": 0\n  }\n ],\n \"notaries\": [\n  \"Notary1@\",\n  \"Notary2@\",\n  \"Notary3@\",\n ],\n \"minnotariesconfirm\": 2,\n \"nodes\": [\n  {\n   \"networkaddress\": \"111.111.111.111:10000\",\n   \"nodeidentity\": \"Node1@\"\n  },\n  {\n   \"networkaddress\": \"111.111.111.112:10000\",\n   \"nodeidentity\": \"Node2@\"\n  }\n ],\n \"gatewayconvertername\": \"Bridge\",\n \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n {\n \"currencies\": [\n  \"VRSCTEST\",\n  \"PBaaSChain\",\n  \"USD\"\n ],\n \"initialcontributions\": [\n  380228.12033701,\n  0,\n  1000000\n ],\n \"initialsupply\": 3000000\n}\n```Now pass those definitions to `definecurrency`\n```shell\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":264,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "52e0d360-2d82-4193-80c4-65dd5c57e9a4"
]