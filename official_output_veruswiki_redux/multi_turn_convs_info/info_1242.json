[
    [
        [
            "What are the required arguments for the `z_sendmany` command in Verus?",
            "The `z_sendmany` command in Verus requires two arguments: `fromaddress` and `amounts`. `fromaddress` is a string representing the taddr or zaddr to send funds from, and `amounts` is an array of JSON objects representing the amounts to send.",
            "#### Arguments:\n1. \"fromaddress\"     (string, required) The taddr or zaddr to send the funds from. Also `\"idname@:private\"` can be used\n             to get the source from a private address attached to an ID.\n2. \"amounts\"       (array, required) An array of json objects representing the amounts to send.\n```json\n  [{\n   \"address\":address (string, required) The address is a taddr or zaddr. Also `\"idname@:private\"` can be used\n             to send to a private address attached to an ID.\n   \"amount\":amount  (numeric, required) The numeric amount in KMD is the value\n   \"memo\":memo    (string, optional) If the address is a zaddr, raw data represented in hexadecimal string format\n  }, ... ]\n```\n3. minconf        (numeric, optional, default=1) Only use funds confirmed at least this many times.\n4. fee          (numeric, optional, default=0.0001) The fee amount to attach to this transaction.#### Result:\n\"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation.Examples:\n```bash\n> verus z_sendmany \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" '[{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_sendmany\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", [{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the format of the `amounts` argument in the `z_sendmany` command?",
            "The `amounts` argument in the `z_sendmany` command is an array of JSON objects, each with three properties: `address`, `amount`, and `memo` (which is optional). `address` is a string representing the taddr or zaddr to send to, `amount` is a numeric value representing the amount to send, and `memo` is a string representing raw data in hexadecimal string format (only applicable if the address is a zaddr).",
            "#### Arguments:\n1. \"fromaddress\"     (string, required) The taddr or zaddr to send the funds from. Also `\"idname@:private\"` can be used\n             to get the source from a private address attached to an ID.\n2. \"amounts\"       (array, required) An array of json objects representing the amounts to send.\n```json\n  [{\n   \"address\":address (string, required) The address is a taddr or zaddr. Also `\"idname@:private\"` can be used\n             to send to a private address attached to an ID.\n   \"amount\":amount  (numeric, required) The numeric amount in KMD is the value\n   \"memo\":memo    (string, optional) If the address is a zaddr, raw data represented in hexadecimal string format\n  }, ... ]\n```\n3. minconf        (numeric, optional, default=1) Only use funds confirmed at least this many times.\n4. fee          (numeric, optional, default=0.0001) The fee amount to attach to this transaction.#### Result:\n\"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation.Examples:\n```bash\n> verus z_sendmany \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" '[{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_sendmany\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", [{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the optional arguments for the `z_sendmany` command in Verus?",
            "The `z_sendmany` command in Verus has two optional arguments: `minconf` and `fee`. `minconf` is a numeric value specifying the minimum number of confirmations required for the funds to be used in the transaction (default is 1), and `fee` is a numeric value specifying the fee amount to attach to the transaction (default is 0.0001).",
            "#### Arguments:\n1. \"fromaddress\"     (string, required) The taddr or zaddr to send the funds from. Also `\"idname@:private\"` can be used\n             to get the source from a private address attached to an ID.\n2. \"amounts\"       (array, required) An array of json objects representing the amounts to send.\n```json\n  [{\n   \"address\":address (string, required) The address is a taddr or zaddr. Also `\"idname@:private\"` can be used\n             to send to a private address attached to an ID.\n   \"amount\":amount  (numeric, required) The numeric amount in KMD is the value\n   \"memo\":memo    (string, optional) If the address is a zaddr, raw data represented in hexadecimal string format\n  }, ... ]\n```\n3. minconf        (numeric, optional, default=1) Only use funds confirmed at least this many times.\n4. fee          (numeric, optional, default=0.0001) The fee amount to attach to this transaction.#### Result:\n\"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation.Examples:\n```bash\n> verus z_sendmany \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" '[{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_sendmany\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", [{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the result of the `z_sendmany` command in Verus?",
            "The result of the `z_sendmany` command in Verus is an `operationid` string, which can be used with the `z_getoperationstatus` command to get the result of the operation.",
            "#### Arguments:\n1. \"fromaddress\"     (string, required) The taddr or zaddr to send the funds from. Also `\"idname@:private\"` can be used\n             to get the source from a private address attached to an ID.\n2. \"amounts\"       (array, required) An array of json objects representing the amounts to send.\n```json\n  [{\n   \"address\":address (string, required) The address is a taddr or zaddr. Also `\"idname@:private\"` can be used\n             to send to a private address attached to an ID.\n   \"amount\":amount  (numeric, required) The numeric amount in KMD is the value\n   \"memo\":memo    (string, optional) If the address is a zaddr, raw data represented in hexadecimal string format\n  }, ... ]\n```\n3. minconf        (numeric, optional, default=1) Only use funds confirmed at least this many times.\n4. fee          (numeric, optional, default=0.0001) The fee amount to attach to this transaction.#### Result:\n\"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation.Examples:\n```bash\n> verus z_sendmany \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" '[{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_sendmany\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", [{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `z_sendmany` command in Verus to send funds to multiple addresses?",
            "You can use the `z_sendmany` command in Verus to send funds to multiple addresses by passing an array of JSON objects in the `amounts` argument, each representing the amount to send to a specific address.",
            "#### Arguments:\n1. \"fromaddress\"     (string, required) The taddr or zaddr to send the funds from. Also `\"idname@:private\"` can be used\n             to get the source from a private address attached to an ID.\n2. \"amounts\"       (array, required) An array of json objects representing the amounts to send.\n```json\n  [{\n   \"address\":address (string, required) The address is a taddr or zaddr. Also `\"idname@:private\"` can be used\n             to send to a private address attached to an ID.\n   \"amount\":amount  (numeric, required) The numeric amount in KMD is the value\n   \"memo\":memo    (string, optional) If the address is a zaddr, raw data represented in hexadecimal string format\n  }, ... ]\n```\n3. minconf        (numeric, optional, default=1) Only use funds confirmed at least this many times.\n4. fee          (numeric, optional, default=0.0001) The fee amount to attach to this transaction.#### Result:\n\"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation.Examples:\n```bash\n> verus z_sendmany \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" '[{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_sendmany\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", [{\"address\": \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" ,\"amount\": 5.0}]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "257f239e-b1b5-4326-b83f-1d86ffee27f8"
]