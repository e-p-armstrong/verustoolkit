[
    [
        [
            "What information does the `gettxoutsetinfo` command provide about the current state of the blockchain?",
            "The `gettxoutsetinfo` command provides information about the current state of the blockchain, including the current block height, the best block hash, the number of transactions, the number of output transactions, the serialized size, the serialized hash, and the total amount.",
            "#### Result:\n```json\n{\n \"height\":n,         (numeric) The current block height (index)\n \"bestblock\": \"hex\",     (string) the best block hash hex\n \"transactions\": n,      (numeric) The number of transactions\n \"txouts\": n,         (numeric) The number of output transactions\n \"bytes_serialized\": n,    (numeric) The serialized size\n \"hash_serialized\": \"hash\",  (string) The serialized hash\n \"total_amount\": x.xxx    (numeric) The total amount\n}\n```\nExamples:\n```bash\n> verus gettxoutsetinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `kvsearch key`\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments:\n```\n1. key           (string, required) search the chain for this key\n```\n#### Result:\n```json\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,  (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,     (string) length of the key\n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key\n \"height\": xxxxx,     (numeric) height the key was stored at\n \"expiration\": xxxxx,   (numeric) height the key will expire\n \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx    (string) amount of characters stored\n}\n```\nExamples:\n```bash\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `gettxoutsetinfo` command to get information about the current state of the blockchain?",
            "You can use the `gettxoutsetinfo` command by running `verus gettxoutsetinfo` in the command line, or by sending a JSON-RPC request to the Verus node with the method `gettxoutsetinfo` and an empty parameter list.",
            "#### Result:\n```json\n{\n \"height\":n,         (numeric) The current block height (index)\n \"bestblock\": \"hex\",     (string) the best block hash hex\n \"transactions\": n,      (numeric) The number of transactions\n \"txouts\": n,         (numeric) The number of output transactions\n \"bytes_serialized\": n,    (numeric) The serialized size\n \"hash_serialized\": \"hash\",  (string) The serialized hash\n \"total_amount\": x.xxx    (numeric) The total amount\n}\n```\nExamples:\n```bash\n> verus gettxoutsetinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `kvsearch key`\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments:\n```\n1. key           (string, required) search the chain for this key\n```\n#### Result:\n```json\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,  (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,     (string) length of the key\n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key\n \"height\": xxxxx,     (numeric) height the key was stored at\n \"expiration\": xxxxx,   (numeric) height the key will expire\n \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx    (string) amount of characters stored\n}\n```\nExamples:\n```bash\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `kvsearch` command, and what kind of chains does it work with?",
            "The `kvsearch` command is used to search for a key stored via the `kvupdate` command. This feature is only available for asset chains.",
            "#### Result:\n```json\n{\n \"height\":n,         (numeric) The current block height (index)\n \"bestblock\": \"hex\",     (string) the best block hash hex\n \"transactions\": n,      (numeric) The number of transactions\n \"txouts\": n,         (numeric) The number of output transactions\n \"bytes_serialized\": n,    (numeric) The serialized size\n \"hash_serialized\": \"hash\",  (string) The serialized hash\n \"total_amount\": x.xxx    (numeric) The total amount\n}\n```\nExamples:\n```bash\n> verus gettxoutsetinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `kvsearch key`\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments:\n```\n1. key           (string, required) search the chain for this key\n```\n#### Result:\n```json\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,  (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,     (string) length of the key\n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key\n \"height\": xxxxx,     (numeric) height the key was stored at\n \"expiration\": xxxxx,   (numeric) height the key will expire\n \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx    (string) amount of characters stored\n}\n```\nExamples:\n```bash\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What information does the `kvsearch` command provide about a key stored on an asset chain?",
            "The `kvsearch` command provides information about a key stored on an asset chain, including the chain the key is stored on, the current height of the chain, the key itself, the length of the key, the owner of the key, the height the key was stored at, the height the key will expire, flags indicating whether the key was created with a password, the stored value, and the size of the stored value.",
            "#### Result:\n```json\n{\n \"height\":n,         (numeric) The current block height (index)\n \"bestblock\": \"hex\",     (string) the best block hash hex\n \"transactions\": n,      (numeric) The number of transactions\n \"txouts\": n,         (numeric) The number of output transactions\n \"bytes_serialized\": n,    (numeric) The serialized size\n \"hash_serialized\": \"hash\",  (string) The serialized hash\n \"total_amount\": x.xxx    (numeric) The total amount\n}\n```\nExamples:\n```bash\n> verus gettxoutsetinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `kvsearch key`\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments:\n```\n1. key           (string, required) search the chain for this key\n```\n#### Result:\n```json\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,  (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,     (string) length of the key\n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key\n \"height\": xxxxx,     (numeric) height the key was stored at\n \"expiration\": xxxxx,   (numeric) height the key will expire\n \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx    (string) amount of characters stored\n}\n```\nExamples:\n```bash\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `kvsearch` command to search for a key stored on an asset chain?",
            "You can use the `kvsearch` command by running `verus kvsearch <key>` in the command line, or by sending a JSON-RPC request to the Verus node with the method `kvsearch` and the key as a parameter.",
            "#### Result:\n```json\n{\n \"height\":n,         (numeric) The current block height (index)\n \"bestblock\": \"hex\",     (string) the best block hash hex\n \"transactions\": n,      (numeric) The number of transactions\n \"txouts\": n,         (numeric) The number of output transactions\n \"bytes_serialized\": n,    (numeric) The serialized size\n \"hash_serialized\": \"hash\",  (string) The serialized hash\n \"total_amount\": x.xxx    (numeric) The total amount\n}\n```\nExamples:\n```bash\n> verus gettxoutsetinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `kvsearch key`\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments:\n```\n1. key           (string, required) search the chain for this key\n```\n#### Result:\n```json\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,  (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,     (string) length of the key\n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key\n \"height\": xxxxx,     (numeric) height the key was stored at\n \"expiration\": xxxxx,   (numeric) height the key will expire\n \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx    (string) amount of characters stored\n}\n```\nExamples:\n```bash\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "99f6ae42-06dc-4c90-a5b9-30e1681185bd"
]