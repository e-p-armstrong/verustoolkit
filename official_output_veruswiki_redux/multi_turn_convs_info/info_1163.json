[
    [
        [
            "What is the purpose of the `listunspent` command in Verus?",
            "The `listunspent` command in Verus is used to list unspent transaction outputs (UTXOs) that can be used as inputs for new transactions. It filters UTXOs based on the specified arguments, such as minimum and maximum confirmations, addresses, and whether to include shared outputs.",
            "#### Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. \"addresses \"  (string) A json array of VRSC addresses to filter\n```json\n  [\n   \"address\"   (string) VRSC address\n   ,...\n  ]\n```\n4. includeshared  (bool, optional, default=false) Include outputs that can also be spent by others\nResult\n```json\n[          (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id\n  \"vout\" : n,        (numeric) the vout value\n  \"generated\" : true|false (boolean) true if txout is a coinbase transaction output\n  \"address\" : \"address\",  (string) the Zcash address\n  \"account\" : \"account\",  (string) DEPRECATED. The associated account, or \"\" for the default account\n  \"scriptPubKey\" : \"key\",  (string) the script key\n  \"amount\" : x.xxx,     (numeric) the transaction amount in VRSC\n  \"confirmations\" : n,   (numeric) The number of confirmations\n  \"redeemScript\" : n    (string) The redeemScript if scriptPubKey is P2SH\n  \"spendable\" : xxx     (bool) Whether we have the private keys to spend this output\n }\n ,...\n]\n```Examples\n```bash\n> verus listunspent\n> verus listunspent 6 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listunspent\", \"params\": [6, 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the required and optional arguments for the `listunspent` command?",
            "The `listunspent` command takes four arguments:\n\n1. `minconf` (optional, default=1): The minimum number of confirmations to filter.\n2. `maxconf` (optional, default=9999999): The maximum number of confirmations to filter.\n3. `addresses` (required): A JSON array of VRSC addresses to filter.\n4. `includeshared` (optional, default=false): A boolean indicating whether to include outputs that can also be spent by others.",
            "#### Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. \"addresses \"  (string) A json array of VRSC addresses to filter\n```json\n  [\n   \"address\"   (string) VRSC address\n   ,...\n  ]\n```\n4. includeshared  (bool, optional, default=false) Include outputs that can also be spent by others\nResult\n```json\n[          (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id\n  \"vout\" : n,        (numeric) the vout value\n  \"generated\" : true|false (boolean) true if txout is a coinbase transaction output\n  \"address\" : \"address\",  (string) the Zcash address\n  \"account\" : \"account\",  (string) DEPRECATED. The associated account, or \"\" for the default account\n  \"scriptPubKey\" : \"key\",  (string) the script key\n  \"amount\" : x.xxx,     (numeric) the transaction amount in VRSC\n  \"confirmations\" : n,   (numeric) The number of confirmations\n  \"redeemScript\" : n    (string) The redeemScript if scriptPubKey is P2SH\n  \"spendable\" : xxx     (bool) Whether we have the private keys to spend this output\n }\n ,...\n]\n```Examples\n```bash\n> verus listunspent\n> verus listunspent 6 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listunspent\", \"params\": [6, 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What information is returned by the `listunspent` command?",
            "The `listunspent` command returns an array of JSON objects, each containing information about an unspent transaction output. The returned information includes:\n\n* `txid`: The transaction ID.\n* `vout`: The vout value.\n* `generated`: A boolean indicating whether the transaction output is a coinbase transaction output.\n* `address`: The VRSC address.\n* `account`: The associated account (DEPRECATED).\n* `scriptPubKey`: The script key.\n* `amount`: The transaction amount in VRSC.\n* `confirmations`: The number of confirmations.\n* `redeemScript`: The redeem script if the scriptPubKey is P2SH.\n* `spendable`: A boolean indicating whether the output can be spent with the available private keys.",
            "#### Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. \"addresses \"  (string) A json array of VRSC addresses to filter\n```json\n  [\n   \"address\"   (string) VRSC address\n   ,...\n  ]\n```\n4. includeshared  (bool, optional, default=false) Include outputs that can also be spent by others\nResult\n```json\n[          (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id\n  \"vout\" : n,        (numeric) the vout value\n  \"generated\" : true|false (boolean) true if txout is a coinbase transaction output\n  \"address\" : \"address\",  (string) the Zcash address\n  \"account\" : \"account\",  (string) DEPRECATED. The associated account, or \"\" for the default account\n  \"scriptPubKey\" : \"key\",  (string) the script key\n  \"amount\" : x.xxx,     (numeric) the transaction amount in VRSC\n  \"confirmations\" : n,   (numeric) The number of confirmations\n  \"redeemScript\" : n    (string) The redeemScript if scriptPubKey is P2SH\n  \"spendable\" : xxx     (bool) Whether we have the private keys to spend this output\n }\n ,...\n]\n```Examples\n```bash\n> verus listunspent\n> verus listunspent 6 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listunspent\", \"params\": [6, 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `listunspent` command to filter UTXOs based on specific addresses?",
            "You can use the `listunspent` command to filter UTXOs based on specific addresses by providing a JSON array of addresses as the third argument. For example:\n```\nverus listunspent 6 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"\n```\nThis command will list unspent transaction outputs that have at least 6 confirmations, up to a maximum of 9999999 confirmations, and are associated with the specified addresses.",
            "#### Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. \"addresses \"  (string) A json array of VRSC addresses to filter\n```json\n  [\n   \"address\"   (string) VRSC address\n   ,...\n  ]\n```\n4. includeshared  (bool, optional, default=false) Include outputs that can also be spent by others\nResult\n```json\n[          (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id\n  \"vout\" : n,        (numeric) the vout value\n  \"generated\" : true|false (boolean) true if txout is a coinbase transaction output\n  \"address\" : \"address\",  (string) the Zcash address\n  \"account\" : \"account\",  (string) DEPRECATED. The associated account, or \"\" for the default account\n  \"scriptPubKey\" : \"key\",  (string) the script key\n  \"amount\" : x.xxx,     (numeric) the transaction amount in VRSC\n  \"confirmations\" : n,   (numeric) The number of confirmations\n  \"redeemScript\" : n    (string) The redeemScript if scriptPubKey is P2SH\n  \"spendable\" : xxx     (bool) Whether we have the private keys to spend this output\n }\n ,...\n]\n```Examples\n```bash\n> verus listunspent\n> verus listunspent 6 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listunspent\", \"params\": [6, 9999999 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "33d17d2f-8016-4098-bf87-3e8082a7df83"
]