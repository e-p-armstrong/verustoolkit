[
    "## Conversation that answers the provided questions:\n**User:**\nI'm really interested in the capabilities of the Verus network. What kind of blockchains can be set up on the Verus network, and how do they interact with each other?\n\n**AI Assistant:**\nOn the Verus network, you can set up both public and private, internal blockchains. These private blockchains are easy to set up and can be bridged to public currencies, allowing for the transfer of assets between the public chain and the private network. The private network has all the features and currencies of the public chain, but with restricted access. There is no limit to the number of blockchains that can operate and interoperate on the Verus network. This allows for a high degree of flexibility and customization for different use cases.\n\n**User:**\nThat's really interesting. I've also got a question about ID management on the Verus network. How do I lock an ID on the Verus network, and what are the different types of locks available?\n\n**AI Assistant:**\nOn the Verus network, you can lock an ID using the `setidentitytimelock` command. There are two types of locks available: Time Lock and Time Delay. A Time Lock sets a specific block height at which the ID will unlock, while a Time Delay sets a delay in blocks before the ID unlocks after the flags are set back to an unlocked state. Note that revoking an identity will clear its locked status, regardless of the time delay or unlock height, and a locked identity cannot revoke itself. This provides an additional layer of security and control over your VerusID.\n\n**User:**\nI'm also interested in exploring the APIs available on the Verus network. What is the `getcurrencyconverters` API, and how do I use it to retrieve conversion information on the Verus network?\n\n**AI Assistant:**\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API to find currencies that have markets at or above a certain liquidity threshold. For example, you can use the command `verus -chain=VRSCTEST getcurrencyconverters btc eth` to retrieve all currencies that have BTC/ETH markets at or above the liquidity threshold. This API can be very useful for finding reliable and liquid markets on the Verus network.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What kind of blockchains can be set up on the Verus network, and how do they interact with each other?",
            "On the Verus network, you can set up both public and private, internal blockchains. These private blockchains are easy to set up and can be bridged to public currencies, allowing for the transfer of assets between the public chain and the private network. The private network has all the features and currencies of the public chain, but with restricted access. There is no limit to the number of blockchains that can operate and interoperate on the Verus network.",
            " well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n#### Locking and Unlocking IDs\n- **Time Lock:**\n The unlockatblock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}'\n```\n- **Time Delay:**\n The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I lock an ID on the Verus network, and what are the different types of locks available?",
            "On the Verus network, you can lock an ID using the `setidentitytimelock` command. There are two types of locks available: Time Lock and Time Delay. A Time Lock sets a specific block height at which the ID will unlock, while a Time Delay sets a delay in blocks before the ID unlocks after the flags are set back to an unlocked state. Note that revoking an identity will clear its locked status, regardless of the time delay or unlock height, and a locked identity cannot revoke itself.",
            " well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n#### Locking and Unlocking IDs\n- **Time Lock:**\n The unlockatblock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}'\n```\n- **Time Delay:**\n The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the `getcurrencyconverters` API, and how do I use it to retrieve conversion information on the Verus network?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API to find currencies that have markets at or above a certain liquidity threshold. For example, you can use the command `verus -chain=VRSCTEST getcurrencyconverters btc eth` to retrieve all currencies that have BTC/ETH markets at or above the liquidity threshold.",
            " well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n#### Locking and Unlocking IDs\n- **Time Lock:**\n The unlockatblock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}'\n```\n- **Time Delay:**\n The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]