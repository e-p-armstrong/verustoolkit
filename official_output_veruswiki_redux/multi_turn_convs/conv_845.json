[
    "## Conversation that answers the provided questions:\n**User:**\nHi, I've been following the development of Verus and I'm curious about the auto-notarization feature on TestNet. What was the main issue with the initial rollout of auto-notarization on TestNet?\n\n**AI Assistant:**\nThe initial rollout of auto-notarization on TestNet encountered two main issues. The first issue was a notarization bug that caused notarizations to fork, simulating a worst-case, unmitigated attack on the notarization system. Although it didn't cause the system to fail, it resulted in the generation of many perceived, although not real, notarization forks on the network.\n\nThe second issue was that the protocol was taking too long and generating too large proofs to be reasonable, which was due to the effort to err on the side of more evidence than necessary. This made the system less efficient than it could be. Do you have any further questions about this?\n\n**User:**\nYes, I do. What changes are being made to the auto-notarization protocol to address the issues encountered on TestNet?\n\n**AI Assistant:**\nTo address the issues encountered on TestNet, some parameters in the auto-notarization protocol will be changed to reduce the total and maximum amount of proof required, while still providing a sufficient level of cryptographic proof, similar in strength to the current proof model. This will be done by making more efficient and selective proof choices. This should improve the performance and efficiency of the system.\n\n**User:**\nThat's great to hear. What is the current state of TestNet, and how long is it expected to remain in this state?\n\n**AI Assistant:**\nTestNet is currently in a pre-PBaaS to mainnet preparatory state. This state is expected to last for a few days, until the necessary changes to the auto-notarization protocol are completed. Once these changes are finished, TestNet will be ready for the next phase of development.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What was the main issue with the initial rollout of auto-notarization on TestNet?",
            "The initial rollout of auto-notarization on TestNet encountered two main issues. The first issue was a notarization bug that caused notarizations to fork, simulating a worst-case, unmitigated attack on the notarization system. Although it didn't cause the system to fail, it resulted in the generation of many perceived, although not real, notarization forks on the network.\n\nThe second issue was that the protocol was taking too long and generating too large proofs to be reasonable, which was due to the effort to err on the side of more evidence than necessary.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What changes are being made to the auto-notarization protocol to address the issues encountered on TestNet?",
            "To address the issues encountered on TestNet, some parameters in the auto-notarization protocol will be changed to reduce the total and maximum amount of proof required, while still providing a sufficient level of cryptographic proof, similar in strength to the current proof model. This will be done by making more efficient and selective proof choices.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the current state of TestNet, and how long is it expected to remain in this state?",
            "TestNet is currently in a pre-PBaaS to mainnet preparatory state. This state is expected to last for a few days, until the necessary changes to the auto-notarization protocol are completed.",
            "#### What\u2019s New for TestNet\nThis release re-enables cross-chain notarization, and represents the completion of a great deal of learning from the first roll out of auto notarization. Basically, we encountered two issues:1) There was a notarization bug in a significantly updated approach that caused notarizations to fork, effectively simulating a worst case, unmitigated attack on the notarization system. While that did not cause the system to fail per se, it resulted in the generation of many perceived, although not real, notarization forks on the network.2) Due to our effort to err on the side of more evidence than we believed was sufficient with auto notarization, then optimize to reduce the proofs required, the protocol was simply taking too long and generating too large proofs to be reasonable, required, or what we need on mainnet in any real scenario.As a result, we will take a few days to change some parameters in the auto notarization protocol that will both reduce the total and maximum amount of proof required, as well as provide a sufficient level of cryptographic proof, similar in strength to the current proof model with more efficient and selective proof choices. We don\u2019t expect this important step to take long, and until then, we will leave testnet on the pre-PBaaS to mainnet preparatory state.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]