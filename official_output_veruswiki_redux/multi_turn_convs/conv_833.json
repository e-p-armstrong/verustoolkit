[
    "## Conversation that answers the provided questions:\n**User:**\nHi, I'm trying to figure out how to sign a transaction from a multi-signature ID on both testnet and mainnet using Verus. Can you help me with that?\n\n**AI Assistant:**\nTo sign a transaction from a multi-signature ID, you need to follow these steps:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency` and `verus z_getoperationstatus`.\n2. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and sign it using `verus signrawtransaction`.\n3. After the last necessary signature is applied, broadcast the transaction on the network using `verus sendrawtransaction`.\n\nDoes that make sense? Do you have any further questions about signing transactions with multi-signature IDs?\n\n**User:**\nI'm also interested in tokenizing ID control, similar to a next-generation NFT, when defining a currency on Verus. What are the requirements for that?\n\n**AI Assistant:**\nTo tokenize ID control, similar to a next-generation NFT, when defining a currency on Verus, you need to set the `options` flag to `OPTION_NFT_TOKEN + OPTION_TOKEN`, and set the maximum supply to 1 satoshi. Additionally, if the token is pre-allocated, the maximum pre-conversion must be 0.\n\nDo you have any more questions about tokenizing ID control on Verus?\n\n**User:**\nOne more thing, how do I create an identity with a fractional currency as its parent on Verus?\n\n**AI Assistant:**\nTo create an identity with a fractional currency as its parent on Verus, you can use the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and use `z_addresses` to fund the name commitment and identity registration.\n\nFor example, you can specify a parent currency, such as `vrsc-btc`, but no referrer. Does that help? Let me know if you have any other questions about creating identities on Verus!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I sign a transaction from a multi-signature ID on both testnet and mainnet using Verus?",
            "To sign a transaction from a multi-signature ID, you need to follow these steps:\n\n1. Create a transaction and get the raw transaction data using `verus sendcurrency` and `verus z_getoperationstatus`.\n2. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and sign it using `verus signrawtransaction`.\n3. After the last necessary signature is applied, broadcast the transaction on the network using `verus sendrawtransaction`.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What are the requirements for tokenizing ID control, similar to a next-generation NFT, when defining a currency on Verus?",
            "To tokenize ID control, similar to a next-generation NFT, when defining a currency on Verus, you need to set the `options` flag to `OPTION_NFT_TOKEN + OPTION_TOKEN`, and set the maximum supply to 1 satoshi. Additionally, if the token is pre-allocated, the maximum pre-conversion must be 0.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How do I create an identity with a fractional currency as its parent on Verus?",
            "To create an identity with a fractional currency as its parent on Verus, you can use the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and use `z_addresses` to fund the name commitment and identity registration.\n\nFor example, you can specify a parent currency, such as `vrsc-btc`, but no referrer.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]