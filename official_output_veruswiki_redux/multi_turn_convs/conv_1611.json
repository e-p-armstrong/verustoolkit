[
    "## Conversation that answers the provided questions:\n**User:**\nHi, I'm learning about the Verus CLI commands and I'm a bit unsure about the `getnotarizationdata` command. Can you tell me what it does?\n\n**AI Assistant:**\nThe `getnotarizationdata` command is used to retrieve notarization data for a specific currency ID. It can also return notarization evidence and counter-evidence if the optional arguments are provided. Do you know what kind of data you're trying to retrieve?\n\n**User:**\nThat helps, thanks. What are the optional arguments for the `getnotarizationdata` command?\n\n**AI Assistant:**\nThe `getnotarizationdata` command has two optional arguments: `getevidence` and `separatecounterevidence`. If `getevidence` is set to `true`, the command returns notarization evidence in addition to other data. If `separatecounterevidence` is set to `true`, counter-evidence is processed and returned with proof roots. Do you want to know more about the result format?\n\n**User:**\nYes, that would be helpful. What is the format of the result returned by the `getnotarizationdata` command?\n\n**AI Assistant:**\nThe result returned by the `getnotarizationdata` command is a JSON object that includes the notarization protocol version. It's pretty straightforward. Now, would you like to know how to use the command?\n\n**User:**\nYeah, that would be great. How can I use the `getnotarizationdata` command to retrieve notarization data for a specific currency ID?\n\n**AI Assistant:**\nYou can use the `getnotarizationdata` command by passing the currency ID as an argument, like this: `verus getnotarizationdata \"currencyid\"`. Alternatively, you can use the JSON-RPC API by sending a POST request to `http://127.0.0.1:27486/` with the following JSON payload: `{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }`. Do you have any other questions about this command?\n\n**User:**\nActually, I do. I was also looking at the `getnotarizationproofs` command. What's the purpose of that command?\n\n**AI Assistant:**\nThe `getnotarizationproofs` command returns proofs to a caller for requested challenges. These proofs can be used to invalidate or force a competing chain to provide more proofs in order to confirm any pending cross-chain notarization of an alternate chain that may not agree with the current chain. It's a useful tool for resolving conflicts between chains. Do you have any other questions about Verus commands or notarization?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `getnotarizationdata` command in Verus?",
            "The `getnotarizationdata` command is used to retrieve notarization data for a specific currency ID. It can also return notarization evidence and counter-evidence if the optional arguments are provided.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the optional arguments for the `getnotarizationdata` command?",
            "The `getnotarizationdata` command has two optional arguments: `getevidence` and `separatecounterevidence`. If `getevidence` is set to `true`, the command returns notarization evidence in addition to other data. If `separatecounterevidence` is set to `true`, counter-evidence is processed and returned with proof roots.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the format of the result returned by the `getnotarizationdata` command?",
            "The result returned by the `getnotarizationdata` command is a JSON object that includes the notarization protocol version.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `getnotarizationdata` command to retrieve notarization data for a specific currency ID?",
            "You can use the `getnotarizationdata` command by passing the currency ID as an argument, like this: `verus getnotarizationdata \"currencyid\"`. Alternatively, you can use the JSON-RPC API by sending a POST request to `http://127.0.0.1:27486/` with the following JSON payload: `{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }`.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `getnotarizationproofs` command in Verus?",
            "The `getnotarizationproofs` command returns proofs to a caller for requested challenges. These proofs can be used to invalidate or force a competing chain to provide more proofs in order to confirm any pending cross-chain notarization of an alternate chain that may not agree with the current chain.",
            "Arguments\n```\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on\n2. \"(getevidence)\" \t      (bool, optional)  if true, returns notarization evidence as well as other data\n3. \"(separatecounterevidence)\"  (bool, optional)  if true, counter-evidence is processed and returned with proofroots\n```\n#### Result:\n```json\n{\n \"version\" : n,         (numeric) The notarization protocol version\n}\n```\nExamples:\n```bash\n> verus getnotarizationdata \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnotarizationdata\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationproofs {json object}`\nReturns proofs to a caller for requested challenges. Some proofs can either independently or in combination\nwith other proofs over time invalidate or force a competing chain to provide more proofs in order to confirm\nany pending cross-chain notarization of an alternate chain that may not agree with us.* It is not valid to have a challenge request with both confirmnotarization and confirmroot.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]