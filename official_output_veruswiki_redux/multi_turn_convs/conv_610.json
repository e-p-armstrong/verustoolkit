[
    "## Conversation that answers the provided questions:\n**User:**\nI've got another question about VerusIDs. What is the purpose of the recovery authority in a VerusID?\n\n**AI Assistant:**\nThe recovery authority in a VerusID is a separate authority that can recover the identity by redefining its primary state and recovery state. This authority cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority. By default, the recovery authority is set to the identity itself. Does that clarify things for you?\n\n**User:**\nThat helps! I also had a question about the private addresses contained within a VerusID. What kind of private addresses are they?\n\n**AI Assistant:**\nEach VerusID contains a set of zero-knowledge private addresses that can be used as messaging, financial, or voting endpoints. Additionally, each ID contains a content map of key-value hashes that can be used to provide private yet selectively provable claims and attestations, as well as selectively provable components of a strong identity. This allows for a high degree of control and flexibility in how you use your VerusID.\n\n**User:**\nI've also been wondering about the VerusHash algorithm. What was the goal of the VerusHash 2.0 algorithm, and how did it achieve it?\n\n**AI Assistant:**\nThe goal of the VerusHash 2.0 algorithm was to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and modern CPUs on the Verus network. It achieved this goal by explicitly equalizing FPGAs and modern CPUs, keeping FPGA performance for the price under 2x of CPU. This helps to create a more level playing field for different types of hardware on the network.\n\n**User:**\nAnd what about VerusHash 2.1? What's the purpose of that algorithm, and how does it differ from VerusHash 2.0?\n\n**AI Assistant:**\nThe purpose of the VerusHash 2.1 algorithm is to further adjust the equalization technology introduced in VerusHash 2.0, with the expectation of tilting the balance more favorably towards CPUs while still enabling FPGAs to operate on the hash algorithm with minor modifications. So, it's a refinement of the previous algorithm, aimed at creating an even more balanced and efficient network.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the recovery authority in a VerusID?",
            "The recovery authority in a VerusID is a separate authority that can recover the identity by redefining its primary state and recovery state. This authority cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority. By default, the recovery authority is set to the identity itself.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What kind of private addresses are contained within a VerusID?",
            "Each VerusID contains a set of zero-knowledge private addresses that can be used as messaging, financial, or voting endpoints. Additionally, each ID contains a content map of key-value hashes that can be used to provide private yet selectively provable claims and attestations, as well as selectively provable components of a strong identity.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What was the goal of the VerusHash 2.0 algorithm, and how did it achieve it?",
            "The goal of the VerusHash 2.0 algorithm was to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and modern CPUs on the Verus network. It achieved this goal by explicitly equalizing FPGAs and modern CPUs, keeping FPGA performance for the price under 2x of CPU.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the VerusHash 2.1 algorithm, and how does it differ from VerusHash 2.0?",
            "The purpose of the VerusHash 2.1 algorithm is to further adjust the equalization technology introduced in VerusHash 2.0, with the expectation of tilting the balance more favorably towards CPUs while still enabling FPGAs to operate on the hash algorithm with minor modifications.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]