[
    "## Conversation that answers the provided questions:\n**User:**\nI'm still trying to understand some of the features of VerusIDs. What does it mean for a VerusID to be recoverable?\n\n**AI Assistant:**\nA VerusID is recoverable because it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.\n\n**User:**\nThat's really interesting. What kind of privacy features do VerusIDs have?\n\n**AI Assistant:**\nVerusIDs have private addresses and a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations, as well as selectively provable components of a strong identity. These private addresses can be used as messaging, financial, or voting endpoints.\n\n**User:**\nI've heard of VerusHash 2.1. What's its purpose?\n\n**AI Assistant:**\nVerusHash 2.1 is an adjustment to the equalization technology introduced in VerusHash 2.0, which aimed to equalize the performance of FPGAs and modern CPUs. The new algorithm is designed to tilt the balance more favorably towards CPUs while still allowing FPGAs to operate on the hash algorithm with minor modifications.\n\n**User:**\nThat's interesting. I've also heard that the Verus developers reached out to FPGA manufacturers. Why did they do that?\n\n**AI Assistant:**\nThe Verus developers proactively reached out to FPGA manufacturers to make the new VerusHash 2.1 algorithm available to them, ensuring that everyone would have an opportunity to mine and stake on the Verus network when it becomes active. This way, everyone has a fair chance to participate in the Verus ecosystem.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does it mean for a VerusID to be recoverable?",
            "A VerusID is recoverable because it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What kind of privacy features do VerusIDs have?",
            "VerusIDs have private addresses and a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations, as well as selectively provable components of a strong identity. These private addresses can be used as messaging, financial, or voting endpoints.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of VerusHash 2.1?",
            "VerusHash 2.1 is an adjustment to the equalization technology introduced in VerusHash 2.0, which aimed to equalize the performance of FPGAs and modern CPUs. The new algorithm is designed to tilt the balance more favorably towards CPUs while still allowing FPGAs to operate on the hash algorithm with minor modifications.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Why did the Verus developers reach out to FPGA manufacturers?",
            "The Verus developers proactively reached out to FPGA manufacturers to make the new VerusHash 2.1 algorithm available to them, ensuring that everyone would have an opportunity to mine and stake on the Verus network when it becomes active.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]