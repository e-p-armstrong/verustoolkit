[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I heard there was a new release of Verus. What was the main issue fixed in this release, and how does it affect nodes?\n\n**AI Assistant:**\nThe main issue fixed in this release of Verus was a rare case where a node could deadlock on the mainnet. This fix prevents nodes from reaching a deadlock state, ensuring the network remains stable and functional.\n\n**User:**\nThat's great to hear! I've been hearing a lot about security lately. What's the benefit of starting the Verus daemon with the \"-tlsenforcement\" flag?\n\n**AI Assistant:**\nStarting the Verus daemon with the \"-tlsenforcement\" flag ensures that all connections between nodes on the mainnet and testnet are encrypted with TLS. This adds an extra layer of security to the network, protecting node connections from potential attacks.\n\n**User:**\nI've been playing around with the Verus API, and I noticed some new ones were added. What new APIs were added to the Verus mainnet and testnet in this release, and what do they enable?\n\n**AI Assistant:**\nThe new APIs added are `getidentitywithaddress`, `getidentitywithrevocation`, and `getidentitywithrecovery`. These APIs enable developers to lookup identities by their primary addresses or revocation and recovery addresses, making it easier to build applications that graph or display public relationships between identities, transparent addresses, and transactions.\n\n**User:**\nI've heard the term \"tokenized ID control\" thrown around, but I'm not entirely sure what it means. Can you explain it to me?\n\n**AI Assistant:**\nTokenized ID control is a feature in Verus that allows anyone to create a new kind of currency with a 1 Satoshi supply, which gives the holder power over the ID that issued it. This currency can be treated like a super NFT over all copies of the source ID on all chains that were exported to other chains after the currency was created. Does that make sense?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What was the main issue fixed in this release of Verus, and how does it affect nodes?",
            "The main issue fixed in this release of Verus was a rare case where a node could deadlock on the mainnet. This fix prevents nodes from reaching a deadlock state, ensuring the network remains stable and functional.",
            "This release fixes a mainnet issue that may, in rare cases, cause a node to deadlock.\nIt also adds the following new features to mainnet:\n- Auto TLS encrypted connections between nodes on mainnet and testnet, no action needed, but you can require that all connections be encrypted by starting the daemon with \u201c-tlsenforcement\u201d.\n- A new \u201c-idindex\u201d flag that enables 3 new APIs to lookup identities by their primary addresses or revocation and recovery addresses, `getidentitywithaddress`, `getidentitywithrevocation`, and `getidentitywithrecovery`.\n Generally improved multithreading within the daemon.\n- These improvements allow anyone to now write applications to easily graph or display public relationships between identities, transparent addresses, and transactions without compromising the privacy of private addresses, messages, or transactions between identities using name@:private endpoints, z-addresses or communicating via off-chain channels.For testnet, this is RC2 of the PBaaS protocol and has some significant and important advances and changes. In addition to a great deal of progress hardening for mainnet, v0.9.4 introduces the following new features to the PBaaS testnet:\n- All features above for mainnet\n- NFT mapped tokens and tokenized ID control - In v0.9.4, as with v0.9.3, you can use root identities to create any kind of currencies, *.veth IDs to create Ethereum mapped currencies, and what is new in v0.9.4 is that you can now use any type of ID or sub-ID to create a new kind of currency that will always have a 1 Satoshi supply and enable anyone holding it to have power over the ID that issued it. This type of currency is called tokenized ID control and can be treated like a super NFT over all copies of the source ID on all chains that were exported to other chains after the currency was created. Once the Ethereum contracts are upgraded with this capability, *.ve",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the benefit of starting the Verus daemon with the \"-tlsenforcement\" flag?",
            "Starting the Verus daemon with the \"-tlsenforcement\" flag ensures that all connections between nodes on the mainnet and testnet are encrypted with TLS. This adds an extra layer of security to the network, protecting node connections from potential attacks.",
            "This release fixes a mainnet issue that may, in rare cases, cause a node to deadlock.\nIt also adds the following new features to mainnet:\n- Auto TLS encrypted connections between nodes on mainnet and testnet, no action needed, but you can require that all connections be encrypted by starting the daemon with \u201c-tlsenforcement\u201d.\n- A new \u201c-idindex\u201d flag that enables 3 new APIs to lookup identities by their primary addresses or revocation and recovery addresses, `getidentitywithaddress`, `getidentitywithrevocation`, and `getidentitywithrecovery`.\n Generally improved multithreading within the daemon.\n- These improvements allow anyone to now write applications to easily graph or display public relationships between identities, transparent addresses, and transactions without compromising the privacy of private addresses, messages, or transactions between identities using name@:private endpoints, z-addresses or communicating via off-chain channels.For testnet, this is RC2 of the PBaaS protocol and has some significant and important advances and changes. In addition to a great deal of progress hardening for mainnet, v0.9.4 introduces the following new features to the PBaaS testnet:\n- All features above for mainnet\n- NFT mapped tokens and tokenized ID control - In v0.9.4, as with v0.9.3, you can use root identities to create any kind of currencies, *.veth IDs to create Ethereum mapped currencies, and what is new in v0.9.4 is that you can now use any type of ID or sub-ID to create a new kind of currency that will always have a 1 Satoshi supply and enable anyone holding it to have power over the ID that issued it. This type of currency is called tokenized ID control and can be treated like a super NFT over all copies of the source ID on all chains that were exported to other chains after the currency was created. Once the Ethereum contracts are upgraded with this capability, *.ve",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What new APIs were added to the Verus mainnet and testnet in this release, and what do they enable?",
            "The new APIs added are `getidentitywithaddress`, `getidentitywithrevocation`, and `getidentitywithrecovery`. These APIs enable developers to lookup identities by their primary addresses or revocation and recovery addresses, making it easier to build applications that graph or display public relationships between identities, transparent addresses, and transactions.",
            "This release fixes a mainnet issue that may, in rare cases, cause a node to deadlock.\nIt also adds the following new features to mainnet:\n- Auto TLS encrypted connections between nodes on mainnet and testnet, no action needed, but you can require that all connections be encrypted by starting the daemon with \u201c-tlsenforcement\u201d.\n- A new \u201c-idindex\u201d flag that enables 3 new APIs to lookup identities by their primary addresses or revocation and recovery addresses, `getidentitywithaddress`, `getidentitywithrevocation`, and `getidentitywithrecovery`.\n Generally improved multithreading within the daemon.\n- These improvements allow anyone to now write applications to easily graph or display public relationships between identities, transparent addresses, and transactions without compromising the privacy of private addresses, messages, or transactions between identities using name@:private endpoints, z-addresses or communicating via off-chain channels.For testnet, this is RC2 of the PBaaS protocol and has some significant and important advances and changes. In addition to a great deal of progress hardening for mainnet, v0.9.4 introduces the following new features to the PBaaS testnet:\n- All features above for mainnet\n- NFT mapped tokens and tokenized ID control - In v0.9.4, as with v0.9.3, you can use root identities to create any kind of currencies, *.veth IDs to create Ethereum mapped currencies, and what is new in v0.9.4 is that you can now use any type of ID or sub-ID to create a new kind of currency that will always have a 1 Satoshi supply and enable anyone holding it to have power over the ID that issued it. This type of currency is called tokenized ID control and can be treated like a super NFT over all copies of the source ID on all chains that were exported to other chains after the currency was created. Once the Ethereum contracts are upgraded with this capability, *.ve",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is tokenized ID control, and how does it work in Verus?",
            "Tokenized ID control is a feature in Verus that allows anyone to create a new kind of currency with a 1 Satoshi supply, which gives the holder power over the ID that issued it. This currency can be treated like a super NFT over all copies of the source ID on all chains that were exported to other chains after the currency was created.",
            "This release fixes a mainnet issue that may, in rare cases, cause a node to deadlock.\nIt also adds the following new features to mainnet:\n- Auto TLS encrypted connections between nodes on mainnet and testnet, no action needed, but you can require that all connections be encrypted by starting the daemon with \u201c-tlsenforcement\u201d.\n- A new \u201c-idindex\u201d flag that enables 3 new APIs to lookup identities by their primary addresses or revocation and recovery addresses, `getidentitywithaddress`, `getidentitywithrevocation`, and `getidentitywithrecovery`.\n Generally improved multithreading within the daemon.\n- These improvements allow anyone to now write applications to easily graph or display public relationships between identities, transparent addresses, and transactions without compromising the privacy of private addresses, messages, or transactions between identities using name@:private endpoints, z-addresses or communicating via off-chain channels.For testnet, this is RC2 of the PBaaS protocol and has some significant and important advances and changes. In addition to a great deal of progress hardening for mainnet, v0.9.4 introduces the following new features to the PBaaS testnet:\n- All features above for mainnet\n- NFT mapped tokens and tokenized ID control - In v0.9.4, as with v0.9.3, you can use root identities to create any kind of currencies, *.veth IDs to create Ethereum mapped currencies, and what is new in v0.9.4 is that you can now use any type of ID or sub-ID to create a new kind of currency that will always have a 1 Satoshi supply and enable anyone holding it to have power over the ID that issued it. This type of currency is called tokenized ID control and can be treated like a super NFT over all copies of the source ID on all chains that were exported to other chains after the currency was created. Once the Ethereum contracts are upgraded with this capability, *.ve",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]