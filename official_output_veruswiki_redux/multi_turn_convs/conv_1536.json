[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm learning about Verus and I was wondering about the `submitblock` command. What does it do?\n\n**AI Assistant:**\nThe `submitblock` command attempts to submit a new block to the network. It takes two arguments: the hex-encoded block data to submit, and an optional JSON object of parameters. Do you have any questions about how to use it or what happens when you submit a block?\n\n**User:**\nYeah, what if I try to submit a block that the node already has a valid copy of?\n\n**AI Assistant:**\nIf you try to submit a block that the node already has a valid copy of, the result will be `\"duplicate\"`, indicating that the node already has a valid copy of the block.\n\n**User:**\nWhat if the block is invalid or has not been validated by the node?\n\n**AI Assistant:**\nIf the node already has a block but it is invalid, the result will be `\"duplicate-invalid\"`. If the node has a block but has not validated it, the result will be `\"duplicate-inconclusive\"`.\n\n**User:**\nOkay, got it. How can I submit a block to the network using the `submitblock` command?\n\n**AI Assistant:**\nYou can submit a block to the network using the `submitblock` command by providing the hex-encoded block data as an argument, like this: `verus submitblock \"mydata\"`. Alternatively, you can use a tool like `curl` to send a JSON-RPC request to the Verus daemon.\n\n**User:**\nWhile we're on the topic of block submission, what's the purpose of the `addmergedblock` command in Verus?\n\n**AI Assistant:**\nThe `addmergedblock` command adds a fully prepared block and its header to the current merge mining queue of the Verus daemon. It allows you to control what happens if adding the block would exceed the available merge mining slots. By default, if adding the block would exceed the available space, the daemon will replace the choice with the least ROI if the new block provides more. Does that make sense?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does the `submitblock` command do in Verus?",
            "The `submitblock` command attempts to submit a new block to the network. It takes two arguments: the hex-encoded block data to submit, and an optional JSON object of parameters.",
            "### `submitblock \"hexdata\" ( \"jsonparametersobject\" )`\nAttempts to submit new block to network.\nThe 'jsonparametersobject' parameter is currently ignored.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.#### Arguments:\n```\n1. \"hexdata\"  (string, required) the hex-encoded block data to submit\n2. \"jsonparametersobject\"   (string, optional) object of optional parameters\n  {\n   \"workid\" : \"id\"  (string, optional) if the server provided a workid, it MUST be included with submissions\n  }\n```\n#### Result:\n```\n\"duplicate\" - node already has valid copy of block\n\"duplicate-invalid\" - node already has block, but it is invalid\n\"duplicate-inconclusive\" - node already has block but has not validated it\n\"inconclusive\" - node has not validated the block, it may not be on the node's current best chain\n\"rejected\" - block was rejected as invalid\nFor more information on submitblock parameters and results, see: https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki#block-submission\n```\nExamples:\n```bash\n> verus submitblock \"mydata\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Multichain### `addmergedblock \"hexdata\" ( \"jsonparametersobject\" )`\nAdds a fully prepared block and its header to the current merge mining queue of this daemon.\nParameters determine the action to take if adding this block would exceed the available merge mining slots.\nDefault action to take if adding would exceed available space is to replace the choice with the least ROI if this block provides more.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What happens if I try to submit a block that the node already has a valid copy of?",
            "If you try to submit a block that the node already has a valid copy of, the result will be `\"duplicate\"`, indicating that the node already has a valid copy of the block.",
            "### `submitblock \"hexdata\" ( \"jsonparametersobject\" )`\nAttempts to submit new block to network.\nThe 'jsonparametersobject' parameter is currently ignored.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.#### Arguments:\n```\n1. \"hexdata\"  (string, required) the hex-encoded block data to submit\n2. \"jsonparametersobject\"   (string, optional) object of optional parameters\n  {\n   \"workid\" : \"id\"  (string, optional) if the server provided a workid, it MUST be included with submissions\n  }\n```\n#### Result:\n```\n\"duplicate\" - node already has valid copy of block\n\"duplicate-invalid\" - node already has block, but it is invalid\n\"duplicate-inconclusive\" - node already has block but has not validated it\n\"inconclusive\" - node has not validated the block, it may not be on the node's current best chain\n\"rejected\" - block was rejected as invalid\nFor more information on submitblock parameters and results, see: https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki#block-submission\n```\nExamples:\n```bash\n> verus submitblock \"mydata\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Multichain### `addmergedblock \"hexdata\" ( \"jsonparametersobject\" )`\nAdds a fully prepared block and its header to the current merge mining queue of this daemon.\nParameters determine the action to take if adding this block would exceed the available merge mining slots.\nDefault action to take if adding would exceed available space is to replace the choice with the least ROI if this block provides more.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What if the block is invalid or has not been validated by the node?",
            "If the node already has a block but it is invalid, the result will be `\"duplicate-invalid\"`. If the node has a block but has not validated it, the result will be `\"duplicate-inconclusive\"`.",
            "### `submitblock \"hexdata\" ( \"jsonparametersobject\" )`\nAttempts to submit new block to network.\nThe 'jsonparametersobject' parameter is currently ignored.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.#### Arguments:\n```\n1. \"hexdata\"  (string, required) the hex-encoded block data to submit\n2. \"jsonparametersobject\"   (string, optional) object of optional parameters\n  {\n   \"workid\" : \"id\"  (string, optional) if the server provided a workid, it MUST be included with submissions\n  }\n```\n#### Result:\n```\n\"duplicate\" - node already has valid copy of block\n\"duplicate-invalid\" - node already has block, but it is invalid\n\"duplicate-inconclusive\" - node already has block but has not validated it\n\"inconclusive\" - node has not validated the block, it may not be on the node's current best chain\n\"rejected\" - block was rejected as invalid\nFor more information on submitblock parameters and results, see: https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki#block-submission\n```\nExamples:\n```bash\n> verus submitblock \"mydata\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Multichain### `addmergedblock \"hexdata\" ( \"jsonparametersobject\" )`\nAdds a fully prepared block and its header to the current merge mining queue of this daemon.\nParameters determine the action to take if adding this block would exceed the available merge mining slots.\nDefault action to take if adding would exceed available space is to replace the choice with the least ROI if this block provides more.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I submit a block to the network using the `submitblock` command?",
            "You can submit a block to the network using the `submitblock` command by providing the hex-encoded block data as an argument, like this: `verus submitblock \"mydata\"`. Alternatively, you can use a tool like `curl` to send a JSON-RPC request to the Verus daemon.",
            "### `submitblock \"hexdata\" ( \"jsonparametersobject\" )`\nAttempts to submit new block to network.\nThe 'jsonparametersobject' parameter is currently ignored.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.#### Arguments:\n```\n1. \"hexdata\"  (string, required) the hex-encoded block data to submit\n2. \"jsonparametersobject\"   (string, optional) object of optional parameters\n  {\n   \"workid\" : \"id\"  (string, optional) if the server provided a workid, it MUST be included with submissions\n  }\n```\n#### Result:\n```\n\"duplicate\" - node already has valid copy of block\n\"duplicate-invalid\" - node already has block, but it is invalid\n\"duplicate-inconclusive\" - node already has block but has not validated it\n\"inconclusive\" - node has not validated the block, it may not be on the node's current best chain\n\"rejected\" - block was rejected as invalid\nFor more information on submitblock parameters and results, see: https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki#block-submission\n```\nExamples:\n```bash\n> verus submitblock \"mydata\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Multichain### `addmergedblock \"hexdata\" ( \"jsonparametersobject\" )`\nAdds a fully prepared block and its header to the current merge mining queue of this daemon.\nParameters determine the action to take if adding this block would exceed the available merge mining slots.\nDefault action to take if adding would exceed available space is to replace the choice with the least ROI if this block provides more.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `addmergedblock` command in Verus?",
            "The `addmergedblock` command adds a fully prepared block and its header to the current merge mining queue of the Verus daemon. It allows you to control what happens if adding the block would exceed the available merge mining slots. By default, if adding the block would exceed the available space, the daemon will replace the choice with the least ROI if the new block provides more.",
            "### `submitblock \"hexdata\" ( \"jsonparametersobject\" )`\nAttempts to submit new block to network.\nThe 'jsonparametersobject' parameter is currently ignored.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.#### Arguments:\n```\n1. \"hexdata\"  (string, required) the hex-encoded block data to submit\n2. \"jsonparametersobject\"   (string, optional) object of optional parameters\n  {\n   \"workid\" : \"id\"  (string, optional) if the server provided a workid, it MUST be included with submissions\n  }\n```\n#### Result:\n```\n\"duplicate\" - node already has valid copy of block\n\"duplicate-invalid\" - node already has block, but it is invalid\n\"duplicate-inconclusive\" - node already has block but has not validated it\n\"inconclusive\" - node has not validated the block, it may not be on the node's current best chain\n\"rejected\" - block was rejected as invalid\nFor more information on submitblock parameters and results, see: https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki#block-submission\n```\nExamples:\n```bash\n> verus submitblock \"mydata\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Multichain### `addmergedblock \"hexdata\" ( \"jsonparametersobject\" )`\nAdds a fully prepared block and its header to the current merge mining queue of this daemon.\nParameters determine the action to take if adding this block would exceed the available merge mining slots.\nDefault action to take if adding would exceed available space is to replace the choice with the least ROI if this block provides more.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]