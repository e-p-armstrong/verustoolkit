[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I've got a question about the `setidentitytimelock` command in Verus. What's its purpose?\n\n**AI Assistant:**\nThe `setidentitytimelock` command is used to enable timelocking and unlocking of funds access for an on-chain VerusID. This allows the user to set a specific block height or delay for the identity to be unlocked, after which the identity will be able to spend funds on the blockchain. Do you have any experience with VerusIDs or is this a new concept for you?\n\n**User:**\nNo, I've used VerusIDs before, but I've never really understood the difference between \"unlockatblock\" and \"setunlockdelay\" in the `setidentitytimelock` command. Can you explain?\n\n**AI Assistant:**\n\"unlockatblock\" sets an absolute block height at which the identity will be automatically unlocked, whereas \"setunlockdelay\" sets a delay in blocks after the identity has been unlocked before it can spend funds. The key difference is that \"unlockatblock\" is an absolute time lock, whereas \"setunlockdelay\" only starts counting down once the identity is unlocked. Does that make sense?\n\n**User:**\nThat's helpful, thanks! I was also wondering, if I set a timelock on a VerusID, will it affect its lock status on other chains?\n\n**AI Assistant:**\nNo, setting a timelock on a VerusID will only affect the lock status of that specific ID on the current blockchain. It will not affect the lock status of the same ID on other chains, including chains that the ID has been exported to. Each chain is separate, so you need to set the timelock individually for each chain if you want to lock the ID on multiple chains.\n\n**User:**\nOne more question, how does the `setidentitytimelock` command impact services that support VerusID authentication?\n\n**AI Assistant:**\nServices that support VerusID authentication may choose to prevent funds transfers when an ID is locked. This means that if an ID has been locked using the `setidentitytimelock` command, services may restrict access to funds associated with that ID until the lock has been removed. Does that make sense?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `setidentitytimelock` command in Verus?",
            "The `setidentitytimelock` command is used to enable timelocking and unlocking of funds access for an on-chain VerusID. This allows the user to set a specific block height or delay for the identity to be unlocked, after which the identity will be able to spend funds on the blockchain.",
            "### `setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)`\nEnables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the difference between \"unlockatblock\" and \"setunlockdelay\" in the `setidentitytimelock` command?",
            "\"unlockatblock\" sets an absolute block height at which the identity will be automatically unlocked, whereas \"setunlockdelay\" sets a delay in blocks after the identity has been unlocked before it can spend funds. The key difference is that \"unlockatblock\" is an absolute time lock, whereas \"setunlockdelay\" only starts counting down once the identity is unlocked.",
            "### `setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)`\nEnables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "Will setting a timelock on a VerusID affect its lock status on other chains?",
            "No, setting a timelock on a VerusID will only affect the lock status of that specific ID on the current blockchain. It will not affect the lock status of the same ID on other chains, including chains that the ID has been exported to.",
            "### `setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)`\nEnables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How does the `setidentitytimelock` command impact services that support VerusID authentication?",
            "Services that support VerusID authentication may choose to prevent funds transfers when an ID is locked. This means that if an ID has been locked using the `setidentitytimelock` command, services may restrict access to funds associated with that ID until the lock has been removed.",
            "### `setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)`\nEnables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]