[
    "## Conversation that answers the provided questions:\n**User:**\nI've been trying to use some of the commands in Verus, but I'm not entirely sure what they do. Can you help me out? Specifically, what does the `z_importviewingkey` command do?\n\n**AI Assistant:**\nThe `z_importviewingkey` command imports a viewing key into the Verus wallet. This command takes several arguments, including the viewing key itself, an optional rescan parameter, a start height parameter, and an optional zaddr parameter for Sapling addresses. Do you have any specific questions about how to use this command or what these arguments do?\n\n**User:**\nActually, yes. What are the possible values for the `rescan` parameter in the `z_importviewingkey` command?\n\n**AI Assistant:**\nThe `rescan` parameter in the `z_importviewingkey` command can take three possible values: \"yes\", \"no\", or \"whenkeyisnew\". \"yes\" will rescan the entire wallet, \"no\" will not rescan the wallet, and \"whenkeyisnew\" will rescan the wallet only if the key is new.\n\n**User:**\nHow can I import a viewing key for a Sapling address using the `z_importviewingkey` command?\n\n**AI Assistant:**\nTo import a viewing key for a Sapling address, you need to provide the zaddr parameter along with the viewing key and other optional parameters. For example: `verus z_importviewingkey \"vkey\" no 0 \"zaddr\"`. This will import the viewing key for the specified Sapling address.\n\n**User:**\nWhat does the `z_importwallet` command do in Verus?\n\n**AI Assistant:**\nThe `z_importwallet` command imports taddr and zaddr keys from a wallet export file. This command takes a single argument, the filename or path to the wallet export file. It's useful for restoring your wallet from a backup.\n\n**User:**\nAnd how can I export my wallet in Verus?\n\n**AI Assistant:**\nYou can export your wallet in Verus using the `z_exportwallet` command, which takes a single argument, the filename or path to save the wallet export file. For example: `verus z_exportwallet \"nameofbackup\"`. This will create a backup of your wallet that you can use to restore it later.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does the `z_importviewingkey` command do in Verus?",
            "The `z_importviewingkey` command imports a viewing key into the Verus wallet. This command takes several arguments, including the viewing key itself, an optional rescan parameter, a start height parameter, and an optional zaddr parameter for Sapling addresses.",
            "#### Arguments:\n1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan from\n4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key\n```bash\n> verus z_importviewingkey \"vkey\"\n```\nImport the viewing key without rescan\n```bash\n> verus z_importviewingkey \"vkey\", no\n```\nImport the viewing key with partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" whenkeyisnew 30000\n```\nRe-import the viewing key with longer partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" yes 20000\n```\nImport the viewing key for Sapling address\n```bash\n> verus z_importviewingkey \"vkey\" no 0 \"zaddr\"\n```\nAs a JSON-RPC call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importwallet \"filename\"`\nImports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments:\n1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet\n```bash\n> verus z_exportwallet \"nameofbackup\"\n```\nImport the wallet\n```bash\n> verus z_importwallet \"path/to/exportdir/nameofbackup\"\n```\nImport using the json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the possible values for the `rescan` parameter in the `z_importviewingkey` command?",
            "The `rescan` parameter in the `z_importviewingkey` command can take three possible values: \"yes\", \"no\", or \"whenkeyisnew\". \"yes\" will rescan the entire wallet, \"no\" will not rescan the wallet, and \"whenkeyisnew\" will rescan the wallet only if the key is new.",
            "#### Arguments:\n1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan from\n4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key\n```bash\n> verus z_importviewingkey \"vkey\"\n```\nImport the viewing key without rescan\n```bash\n> verus z_importviewingkey \"vkey\", no\n```\nImport the viewing key with partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" whenkeyisnew 30000\n```\nRe-import the viewing key with longer partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" yes 20000\n```\nImport the viewing key for Sapling address\n```bash\n> verus z_importviewingkey \"vkey\" no 0 \"zaddr\"\n```\nAs a JSON-RPC call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importwallet \"filename\"`\nImports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments:\n1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet\n```bash\n> verus z_exportwallet \"nameofbackup\"\n```\nImport the wallet\n```bash\n> verus z_importwallet \"path/to/exportdir/nameofbackup\"\n```\nImport using the json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I import a viewing key for a Sapling address using the `z_importviewingkey` command?",
            "To import a viewing key for a Sapling address, you need to provide the zaddr parameter along with the viewing key and other optional parameters. For example: `verus z_importviewingkey \"vkey\" no 0 \"zaddr\"`.",
            "#### Arguments:\n1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan from\n4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key\n```bash\n> verus z_importviewingkey \"vkey\"\n```\nImport the viewing key without rescan\n```bash\n> verus z_importviewingkey \"vkey\", no\n```\nImport the viewing key with partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" whenkeyisnew 30000\n```\nRe-import the viewing key with longer partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" yes 20000\n```\nImport the viewing key for Sapling address\n```bash\n> verus z_importviewingkey \"vkey\" no 0 \"zaddr\"\n```\nAs a JSON-RPC call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importwallet \"filename\"`\nImports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments:\n1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet\n```bash\n> verus z_exportwallet \"nameofbackup\"\n```\nImport the wallet\n```bash\n> verus z_importwallet \"path/to/exportdir/nameofbackup\"\n```\nImport using the json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `z_importwallet` command do in Verus?",
            "The `z_importwallet` command imports taddr and zaddr keys from a wallet export file. This command takes a single argument, the filename or path to the wallet export file.",
            "#### Arguments:\n1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan from\n4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key\n```bash\n> verus z_importviewingkey \"vkey\"\n```\nImport the viewing key without rescan\n```bash\n> verus z_importviewingkey \"vkey\", no\n```\nImport the viewing key with partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" whenkeyisnew 30000\n```\nRe-import the viewing key with longer partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" yes 20000\n```\nImport the viewing key for Sapling address\n```bash\n> verus z_importviewingkey \"vkey\" no 0 \"zaddr\"\n```\nAs a JSON-RPC call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importwallet \"filename\"`\nImports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments:\n1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet\n```bash\n> verus z_exportwallet \"nameofbackup\"\n```\nImport the wallet\n```bash\n> verus z_importwallet \"path/to/exportdir/nameofbackup\"\n```\nImport using the json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "How can I export my wallet in Verus?",
            "You can export your wallet in Verus using the `z_exportwallet` command, which takes a single argument, the filename or path to save the wallet export file. For example: `verus z_exportwallet \"nameofbackup\"`.",
            "#### Arguments:\n1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan from\n4. zaddr        (string, optional, default=\"\") zaddr in case of importing viewing key for SaplingNote: This call can take minutes to complete if rescan is true.Examples:Import a viewing key\n```bash\n> verus z_importviewingkey \"vkey\"\n```\nImport the viewing key without rescan\n```bash\n> verus z_importviewingkey \"vkey\", no\n```\nImport the viewing key with partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" whenkeyisnew 30000\n```\nRe-import the viewing key with longer partial rescan\n```bash\n> verus z_importviewingkey \"vkey\" yes 20000\n```\nImport the viewing key for Sapling address\n```bash\n> verus z_importviewingkey \"vkey\" no 0 \"zaddr\"\n```\nAs a JSON-RPC call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_importwallet \"filename\"`\nImports taddr and zaddr keys from a wallet export file (see z_exportwallet).#### Arguments:\n1. \"filename\"  (string, required) The wallet fileExamples:Dump the wallet\n```bash\n> verus z_exportwallet \"nameofbackup\"\n```\nImport the wallet\n```bash\n> verus z_importwallet \"path/to/exportdir/nameofbackup\"\n```\nImport using the json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importwallet\", \"params\": [\"path/to/exportdir/nameofbackup\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]