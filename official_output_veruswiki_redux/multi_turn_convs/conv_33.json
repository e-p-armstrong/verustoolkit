[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to understand how transactions work in Verus. Can you tell me about the \"outputs\" field in a Verus transaction, and what it contains?\n\n**AI Assistant:**\nThe \"outputs\" field in a Verus transaction is an array of JSON objects that represent the currencies, amounts, and destinations to send. Each object in the array contains information such as the source currency, amount, destination address, and optional fields like conversion, export, and fee settings. Do you have any specific questions about the \"outputs\" field or its contents?\n\n**User:**\nYeah, I was wondering what the required fields are in an \"outputs\" object. Can you tell me that?\n\n**AI Assistant:**\nThe required fields in an \"outputs\" object in a Verus transaction are:\n\n1. \"currency\" - the name of the source currency to send\n2. \"amount\" - the numeric amount of currency to send\n3. \"address\" - the destination address to send the currency to\n\nThese three fields are the minimum required to specify an output in a Verus transaction. Do you have any further questions about these fields or the \"outputs\" object in general?\n\n**User:**\nI've seen an \"convertto\" field in some \"outputs\" objects. What does that do?\n\n**AI Assistant:**\nThe \"convertto\" field in an \"outputs\" object is an optional field that specifies a valid currency to convert the source currency to. This allows for automatic conversion of currencies during a transaction. For example, if you're sending Verus Coin (VRSC) but the recipient wants to receive Bitcoin (BTC), you could specify \"BTC\" in the \"convertto\" field, and the transaction would automatically convert the VRSC to BTC before sending it to the recipient.\n\n**User:**\nWhat about the \"exportto\" field? I've seen that in some \"outputs\" objects too.\n\n**AI Assistant:**\nThe \"exportto\" field in an \"outputs\" object is an optional field that specifies a valid chain or system name or ID to export the currency to. This allows for cross-chain transactions and exports. For instance, if you want to send a currency from the Verus blockchain to the Ethereum blockchain, you would specify the Ethereum chain ID in the \"exportto\" field.\n\n**User:**\nI've also seen an \"exportid\" field in some \"outputs\" objects. What does that do?\n\n**AI Assistant:**\nThe \"exportid\" field in an \"outputs\" object is an optional boolean field that, if set to true, exports the ID to the destination chain. This will incur an export cost. It's useful when you want to export not only the currency but also the associated ID to the destination chain.\n\n**User:**\nFinally, I've seen a \"feecurrency\" field in some \"outputs\" objects. What does that do?\n\n**AI Assistant:**\nThe \"feecurrency\" field in an \"outputs\" object is an optional field that specifies a valid currency to use to pay the transaction fee. This allows for flexible fee payment options. For example, if you're sending a transaction that involves multiple currencies, you might want to pay the transaction fee in a different currency than the one being sent. The \"feecurrency\" field lets you specify that currency.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the \"outputs\" field in a Verus transaction, and what does it contain?",
            "The \"outputs\" field in a Verus transaction is an array of JSON objects that represent the currencies, amounts, and destinations to send. Each object in the array contains information such as the source currency, amount, destination address, and optional fields like conversion, export, and fee settings.",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What are the required fields in an \"outputs\" object in a Verus transaction?",
            "The required fields in an \"outputs\" object in a Verus transaction are:\n\n1. \"currency\" - the name of the source currency to send\n2. \"amount\" - the numeric amount of currency to send\n3. \"address\" - the destination address to send the currency to",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"convertto\" field in an \"outputs\" object, and what does it do?",
            "The \"convertto\" field in an \"outputs\" object is an optional field that specifies a valid currency to convert the source currency to. This allows for automatic conversion of currencies during a transaction.",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"exportto\" field in an \"outputs\" object, and what does it do?",
            "The \"exportto\" field in an \"outputs\" object is an optional field that specifies a valid chain or system name or ID to export the currency to. This allows for cross-chain transactions and exports.",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"exportid\" field in an \"outputs\" object, and what does it do?",
            "The \"exportid\" field in an \"outputs\" object is an optional boolean field that, if set to true, exports the ID to the destination chain. This will incur an export cost.",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ],
        [
            "What is the \"feecurrency\" field in an \"outputs\" object, and what does it do?",
            "The \"feecurrency\" field in an \"outputs\" object is an optional field that specifies a valid currency to use to pay the transaction fee. This allows for flexible fee payment options.",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]