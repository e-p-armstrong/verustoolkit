[
    "## Conversation that answers the provided questions:\n**User:**\nI'm trying to use Verus to sign transactions from multi-signature IDs, but I'm not sure how to do it. Can you help me?\n\n**AI Assistant:**\nTo sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. Create a transaction using the `sendcurrency` command, specifying the multi-signature ID and the destination address and amount.\n2. Get the raw transaction data using the `z_getoperationstatus` command with the operation ID returned by `sendcurrency`.\n3. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n4. Use the `signrawtransaction` command to sign the raw transaction data.\n5. After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command.\n\nDo you have any questions about these steps or would you like me to clarify anything?\n\n**User:**\nAnother question, what are the requirements for tokenizing ID control using Verus?\n\n**AI Assistant:**\nTo tokenize ID control using Verus, the currency definition must have flags `OPTION_NFT_TOKEN` and `OPTION_TOKEN`, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n\nIs that clear? Or would you like more information about tokenizing ID control?\n\n**User:**\nOne more thing, how can I create an identity with a fractional currency as its parent using Verus?\n\n**AI Assistant:**\nYou can create an identity with a fractional currency as its parent using the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and specify a parent currency and a funding address to create the identity.\n\nLet me know if you have any questions about this process or if there's anything else I can help you with!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I sign transactions from multi-signature IDs on the testnet and mainnet using Verus?",
            "To sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. Create a transaction using the `sendcurrency` command, specifying the multi-signature ID and the destination address and amount.\n2. Get the raw transaction data using the `z_getoperationstatus` command with the operation ID returned by `sendcurrency`.\n3. Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs.\n4. Use the `signrawtransaction` command to sign the raw transaction data.\n5. After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What are the requirements for tokenizing ID control using Verus?",
            "To tokenize ID control using Verus, the currency definition must have flags `OPTION_NFT_TOKEN` and `OPTION_TOKEN`, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I create an identity with a fractional currency as its parent using Verus?",
            "You can create an identity with a fractional currency as its parent using the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and specify a parent currency and a funding address to create the identity.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]