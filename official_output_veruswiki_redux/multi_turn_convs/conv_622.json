[
    "## Conversation that answers the provided questions:\n**User:**\nAnother question I had about VerusIDs: what does it mean for a VerusID to be recoverable?\n\n**AI Assistant:**\nA VerusID is recoverable because it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority. Does that make sense?\n\n**User:**\nThat's helpful, thanks! I was also wondering about some of the features of a VerusID that provide privacy and selective proof of claims. Can you tell me more about that?\n\n**AI Assistant:**\nEach VerusID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints. Additionally, each ID contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide private yet selectively provable claims and attestations, as well as selectively provable components of a strong identity. These features allow you to control your data and prove your identity without giving away more information than needed.\n\n**User:**\nI've heard about the VerusHash 2.1 algorithm. What's the purpose of that, and how does it affect the performance of FPGAs and CPUs?\n\n**AI Assistant:**\nThe! VerusHash 2.1 algorithm is designed to equalize the performance of FPGAs and modern CPUs. It builds upon the VerusHash 2.0 algorithm, which was the first to significantly reduce the dominance of FPGAs over CPUs. The adjustment in VerusHash 2.1 is expected to tilt the balance slightly more in favor of CPUs, while still allowing FPGAs to operate on the hash algorithm with minor modifications.\n\n**User:**\nThat's interesting. I heard that Verus developers reached out to FPGA manufacturers regarding the VerusHash 2.1 algorithm. Why was that?\n\n**AI Assistant:**\nVerus developers proactively reached out to FPGA manufacturers to make the new algorithm available to them, ensuring that everyone will have an opportunity to mine and stake when the Verus economy begins to roll out, and identity rewards start streaming from the network. This outreach was intended to promote a level playing field and fair access to the Verus ecosystem.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does it mean for a VerusID to be recoverable?",
            "A VerusID is recoverable because it includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What are some of the features of a VerusID that provide privacy and selective proof of claims?",
            "Each VerusID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints. Additionally, each ID contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide private yet selectively provable claims and attestations, as well as selectively provable components of a strong identity.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the VerusHash 2.1 algorithm, and how does it affect the performance of FPGAs and CPUs?",
            "The VerusHash 2.1 algorithm is designed to equalize the performance of FPGAs and modern CPUs. It builds upon the VerusHash 2.0 algorithm, which was the first to significantly reduce the dominance of FPGAs over CPUs. The adjustment in VerusHash 2.1 is expected to tilt the balance slightly more in favor of CPUs, while still allowing FPGAs to operate on the hash algorithm with minor modifications.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "Why did Verus developers reach out to FPGA manufacturers regarding the VerusHash 2.1 algorithm?",
            "Verus developers proactively reached out to FPGA manufacturers to make the new algorithm available to them, ensuring that everyone will have an opportunity to mine and stake when the Verus economy begins to roll out, and identity rewards start streaming from the network.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]