[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm testing out the \"sendcurrency\" API on Verus Testnet and I was wondering, what's the main difference between the \"sendcurrency\" API on Verus mainnet and on Verus Testnet?\n\n**AI Assistant:**\nThe \"sendcurrency\" API on Verus Testnet has been enhanced with new multi-currency parameters, allowing for more complex transactions and currency conversions. Specifically, it includes the \"currency\" parameter to specify the source currency, and the \"convertto\" parameter to convert to another currency. Does that make sense?\n\n**User:**\nThat does! So how can I specify the source currency when using the \"sendcurrency\" API on Verus Testnet?\n\n**AI Assistant:**\nYou can specify the source currency by using the \"currency\" parameter, followed by the name of the currency. For example, \"currency\":\"vrsctest\" would specify the source currency as \"vrsctest\", which is the default on Testnet.\n\n**User:**\nWhat's the purpose of the \"convertto\" parameter in the \"sendcurrency\" API on Verus Testnet?\n\n**AI Assistant:**\nThe \"convertto\" parameter allows you to convert from one currency to another, either a fractional currency where it is a reserve or a reserve of the fractional currency of the source. \n\n**User:**\nI'm also curious about the Verus daemon v0.7.1-4 on Testnet. What are some of the key features?\n\n**AI Assistant:**\nVerus daemon v0.7.1-4 on Testnet offers increased scale over previous versions, as well as the ability to apply both fractional and centralized attributes to a currency. It also enables a new parameter to the \"sendcurrency\" API called \"burn\", which allows for the removal of a currency from its supply.\n\n**User:**\nWhat happens if I set \"burn\" to 1 when using the \"sendcurrency\" API on Verus Testnet?\n\n**AI Assistant:**\nIf \"burn\" is set to 1, the currency sent (which must be a token or fractional currency) is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the main difference between the \"sendcurrency\" API on Verus mainnet and on Verus Testnet?",
            "The \"sendcurrency\" API on Verus Testnet has been enhanced with new multi-currency parameters, allowing for more complex transactions and currency conversions. Specifically, it includes the \"currency\" parameter to specify the source currency, and the \"convertto\" parameter to convert to another currency.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I specify the source currency when using the \"sendcurrency\" API on Verus Testnet?",
            "You can specify the source currency by using the \"currency\" parameter, followed by the name of the currency. For example, \"currency\":\"vrsctest\" would specify the source currency as \"vrsctest\", which is the default on Testnet.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of the \"convertto\" parameter in the \"sendcurrency\" API on Verus Testnet?",
            "The \"convertto\" parameter allows you to convert from one currency to another, either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What are some of the key features of Verus daemon v0.7.1-4 on Testnet?",
            "Verus daemon v0.7.1-4 on Testnet offers increased scale over previous versions, as well as the ability to apply both fractional and centralized attributes to a currency. It also enables a new parameter to the \"sendcurrency\" API called \"burn\", which allows for the removal of a currency from its supply.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the effect of setting \"burn\" to 1 when using the \"sendcurrency\" API on Verus Testnet?",
            "If \"burn\" is set to 1, the currency sent (which must be a token or fractional currency) is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "While Verus daemon v0.7.1-4 has no improvements for mainnet operation, it offers full support for the new Verus Testnet multi-currency technology preview. On testnet, the new \"sendcurrency\" API, which is already available on Verus mainnet in its simplified form, is enhanced with new multi-currency parameters. The first parameter, \"currency\":\"currencyname\" - where the default on testnet for currency name is \"vrsctest\", specifies the source currency of the send. The next, \"convertto\":\"currencyname\", allows conversion from one currency to either a fractional currency where it is a reserve or a reserve of the fractional currency of the source.# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies\nVersion v0.7.1-4 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]