[
    "## Conversation that answers the provided questions:\n**User:**\nAnother question about security: how does a locked VerusID protect against unauthorized access, and what role do revocation and recovery authority identities play in this process?\n\n**AI Assistant:**\nA locked VerusID can be protected against unauthorized access by setting a predetermined unlock time, which requires anyone with the primary keys (including multisig primary keys) to wait before they can spend or access funds. Meanwhile, the revocation and recovery authority identities can always revoke and recover the ID, circumventing the lock. This allows for decentralized funds recovery and protection against the \"5 dollar wrench attack\". Does that answer your question?\n\n**User:**\nI'd like to know more about Verus Vault. What is its purpose, and how does it extend the security features of VerusIDs?\n\n**AI Assistant:**\nVerus Vault provides an additional layer of security and decentralized funds recovery for VerusIDs, as well as NFTs. It allows for time locks to be set for various purposes, such as vesting schedules, trusts, and inheritance, ensuring the protection and recovery of funds and assets. With Verus Vault, users can safeguard their blockchain wealth from common forms of crypto loss or theft, without relying on a centralized entity like a bank. Is this what you were looking for?\n\n**User:**\nI have a more technical question. How can I export an ID to a PBaaS chain using the command line and Verus?\n\n**AI Assistant:**\nYou can export an ID to a PBaaS chain using the `sendcurrency` command on the command line. The format for this command is:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nThis command exports the ID \"IDNAME@\" to the PBaaS chain \"PBaaSChainName\" with an amount of 100 and currency \"vrsctest\". Just replace the placeholders with your specific values. Does that help?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How does a locked VerusID protect against unauthorized access, and what role do revocation and recovery authority identities play in this process?",
            "A locked VerusID can be protected against unauthorized access by setting a predetermined unlock time, which requires anyone with the primary keys (including multisig primary keys) to wait before they can spend or access funds. Meanwhile, the revocation and recovery authority identities can always revoke and recover the ID, circumventing the lock. This allows for decentralized funds recovery and protection against the \"5 dollar wrench attack\".",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "What is the purpose of Verus Vault, and how does it extend the security features of VerusIDs?",
            "Verus Vault provides an additional layer of security and decentralized funds recovery for VerusIDs, as well as NFTs. It allows for time locks to be set for various purposes, such as vesting schedules, trusts, and inheritance, ensuring the protection and recovery of funds and assets. With Verus Vault, users can safeguard their blockchain wealth from common forms of crypto loss or theft, without relying on a centralized entity like a bank.",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ],
        [
            "How can I export an ID to a PBaaS chain using the command line and Verus?",
            "You can export an ID to a PBaaS chain using the `sendcurrency` command on the command line. The format for this command is:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nThis command exports the ID \"IDNAME@\" to the PBaaS chain \"PBaaSChainName\" with an amount of 100 and currency \"vrsctest\".",
            "A locked VerusID can always be revoked and recovered by its revocation and recovery authority identities, which circumvents the lock. At the same time, anyone with only the primary keys, even a multisig of primary keys must first unlock, then wait for the predetermined unlock time before they can spend or access funds. This gives you, or maybe a company that specializes in watching the blockchain to whom you've assigned the revocation ID to revoke and recover whenever an unauthorized unlock occurs. That means that like a bank, setting a 24 hour unlock delay on your locked IDs actually provides the first decentralized solution to the infamous 5 dollar wrench attack.In addition to a new level of blockchain protection and decentralized funds recovery, Verus Vault provides the same security for your IDs and NFTs as well as time locks for other purposes, such as vesting schedules, trusts, and inheritance. With Verus Vault, you can now protect and recover your funds, preserving all your assets and generational blockchain wealth from common forms of crypto loss or theft, no bank required.### Exporting an ID to a PBaaS chain\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]