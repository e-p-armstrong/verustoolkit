[
    "What is the purpose of the `getcurrencystate` command in Verus?",
    "The `getcurrencystate` command returns the total amount of preconversions that have been confirmed on the blockchain for a specified chain, given a currency name or ID, and optionally, a specific connected system ID.",
    "#### Arguments:\n\"currencyname\"          : \"string\" ... (string(s), one or more) all selected currencies are returned with their current state\n\"paramobject\"           : \"object\" ... (one or more parameters) advanced query with slippage options\n```json\n    {\n      \"convertto\":\"destcurrency\"       \"string\"        target currency\n      \"fromcurrency\":\"sourcecurrency\" | [...] \"string\" | object array (string(s), one or more) currencies to convert from\n      \"targetprice\":n | [n,...]        \"number(s)\" ...     (number(s), one or more) target price within slippage required\n      \"amount\":n               \"number\"        (number) amount of tocurrency needed\n      \"slippage\":n              \"number\"        (number) max slippage with no other conversions max is 50000000 == 50%\n    }\n```\nResult:\n```json\n\"[{currency1}, {currency2}]\" : \"array of objects\" (string) All currencies, last currency state, and last amount to convert if amount specified\n```\nExamples:\n```bash\n> verus getcurrencyconverters '[\"currency1\",\"currency2\",...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencyconverters\", \"params\": ['[\"currency1\",\"currency2\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getcurrencystate \"currencynameorid\" (\"n | m,n | m,n,o\") (\"connectedsystemid\")`\nReturns the total amount of preconversions that have been confirmed on the blockchain for the specified chain.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]