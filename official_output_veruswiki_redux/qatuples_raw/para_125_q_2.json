[
    "How do I validate a payment disclosure in Verus?",
    "To validate a payment disclosure, you can use the `z_validatepaymentdisclosure` command. This command is also an experimental feature and requires the `-experimentalfeatures` and `-paymentdisclosure` command-line options to be enabled, or the corresponding lines to be added to the `zcash.conf` file. It takes one argument, the `paymentdisclosure` string, and returns a validation result.",
    "### `migrate_converttoexport rawTx dest_symbol export_amount`\nConvert a raw transaction to a cross-chain export.\nIf necesary, the transaction should be funded using `fundrawtransaction`.\nFinally, the transaction should be signed using `signrawtransaction`.\nThe finished export transaction, plus the payouts, should be passed to the \"`migrate_createimporttransactio`n\" method on a KMD node to get the corresponding import transaction.### `migrate_createimporttransaction burnTx payouts`\nCreate an importTx given a burnTx and the corresponding payouts, hex encoded### `scanNotarisationsDB blockHeight symbol [blocksLimit=1440]`\nScans notarisationsdb backwards from height for a notarisation of given symbol## Disclosure\n### `z_getpaymentdisclosure \"txid\" \"js_index\" \"output_index\" (\"message\")`\nGenerate a payment disclosure for a given joinsplit output.EXPERIMENTAL FEATUREWARNING: z_getpaymentdisclosure is disabled.\nTo enable it, restart verusd with the `-experimentalfeatures` and `-paymentdisclosure` commandline options, or add these two lines to the zcash.conf file:\n```\nexperimentalfeatures=1\npaymentdisclosure=1\n```\n#### Arguments:\n```\n1. \"txid\"      (string, required)\n2. \"js_index\"    (string, required)\n3. \"output_index\"  (string, required)\n4. \"message\"     (string, optional)\n```\n#### Result:\n```\n\"paymentdisclosure\" (string) Hex data string, with \"zpd:\" prefix.\n```\nExamples:\n```bash\n> verus z_getpaymentdisclosure 96f12882450429324d5f3b48630e3168220e49ab7b0f066e5c2935a6b88bb0f2 0 0 \"refund\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getpaymentdisclosure\", \"params\": [\"96f12882450429324d5f3b48630e3168220e49ab7b0f066e5c2935a6b88bb0f2\", 0, 0, \"refund\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `z_validatepaymentdisclosure \"paymentdisclosure\"`\nValidates a payment disclosure.EXPERIMENTAL FEATURE",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]