[
    "How can I retrieve the history of a specific identity using Verus?",
    "To retrieve the history of a specific identity, you can use the `getidentityhistory` command in Verus. You can do this in two ways: using the Verus command-line interface or by making a JSON-RPC request using `curl`.\n\nUsing the Verus command-line interface:\n```\nverus getidentityhistory \"name@\"\n```\nUsing `curl` to make a JSON-RPC request:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentityhistory\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "#### Examples:\n```bash\n> verus getidentityhistory \"name@\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentityhistory\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getidentitytrust '[\"id\",...]'`\n#### Arguments:\n```json\n\"[\"id\",...]\"                    (strarray, optional) if specified, only returns rating values for specified IDs, otherwise all\n```\n#### Result:\n```json\n{\n \"setratings\":{\"id\":JSONRatingObject,...},    (jsonobj) an ID/ratings key/value object\n \"identitytrustmode\":<n>              (int) 0 = no restriction on sync, 1 = only sync to IDs rated approved, 2 = sync to all IDs but those on block list\n}\n```\n####Examples:\n```bash\n> verus getidentitytrust '[\"id\",...]'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitytrust\", \"params\": ['[\"id\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `listidentities (includecanspend) (includecansign) (includewatchonly)`\n#### Arguments:\n  \"includecanspend\"  (bool, optional, default=true)  Include identities for which we can spend/authorize\n  \"includecansign\"   (bool, optional, default=true)  Include identities that we can only sign for but not spend\n  \"includewatchonly\"  (bool, optional, default=false)  Include identities that we can neither sign nor spend, but are either watched or are co-signers with us#### Result:\n```json\n[\n {\n  \"identity\": {\n   \"version\": n,          (integer) version number\n   \"flags\": n,           (integer) flag\n   \"primaryaddresses\": [\n    \"xxxx\"            (text) Public address that controls this ID\n   ],\n   \"minimumsignatures\": n,     (integer) Amount of signatures required to spend UTXOs on this ID\n   \"identityaddress\": \"xxxx\",  ",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]