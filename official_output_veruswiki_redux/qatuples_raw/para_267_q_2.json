[
    "What is the purpose of the `includeWatchonly` argument when filtering transactions in Verus?",
    "The `includeWatchonly` argument is a boolean that indicates whether to include watchonly addresses when filtering transactions in Verus. If set to true, the filter will also include transactions related to watchonly addresses. If set to false (default), only transactions related to non-watchonly addresses will be included.",
    "#### Arguments:\n1. minconf     (numeric, optional, default=1) The minimum confirmations to filter\n2. maxconf     (numeric, optional, default=9999999) The maximum confirmations to filter\n3. includeWatchonly (bool, optional, default=false) Also include watchonly addresses (see 'z_importviewingkey')\n4. \"addresses\"   (string) A json array of zaddrs (both Sprout and Sapling) to filter on. Duplicate addresses not allowed.\n```json\n  [\n   \"address\"   (string) zaddr\n   ,...\n  ]\n```\nResult\n```json\n[               (array of json object)\n {\n  \"txid\" : \"txid\",     (string) the transaction id\n  \"jsindex\" (sprout) : n,    (numeric) the joinsplit index\n  \"jsoutindex\" (sprout) : n,    (numeric) the output index of the joinsplit\n  \"outindex\" (sapling) : n,    (numeric) the output index\n  \"confirmations\" : n,    (numeric) the number of confirmations\n  \"spendable\" : true|false, (boolean) true if note can be spent by wallet, false if address is watchonly\n  \"address\" : \"address\",  (string) the shielded address\n  \"amount\": xxxxx,     (numeric) the amount of value in the note\n  \"memo\": xxxxx,      (string) hexademical string representation of memo field\n  \"change\": true|false,   (boolean) true if the address that received the note is also one of the sending addresses\n }\n ,...\n]\n```",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]