[
    "What does the `getvdxfid` command do in Verus, and what is the format of the result?",
    "The `getvdxfid` command in Verus processes a given string with the VDXF (Verus Data eXchange Format) and returns an object with both base58check and hex vdxfid values of the string and its parents. The result is a JSON object containing the following properties:\n\n* `vdxfid`: The base58check i-ID of the URI processed with the VDXF and all combined parameters.\n* `hash160result`: A 20-byte hash in hex of the URL string passed in, processed with the VDXF.\n* `qualifiedname`: An object with separate name and parent ID values.\n* `bounddata`: An object containing additional data bound to create the value, if applicable.",
    "#### Result:\n```json\n{                   (object) object with both base58check and hex vdxfid values of string and parents\n \"vdxfid\"               (base58check) i-ID of the URI processed with the VDXF & all combined parameters\n \"hash160result\"           (hexstring) 20 byte hash in hex of the URL string passed in, processed with the VDXF\n \"qualifiedname\":           (object) separate name and parent ID value\n {\n  \"name\": \"namestr\"         (string) leaf name\n  \"parentid\" | \"namespace\":\"string\" (string) parent ID (or namespace if VDXF key) of name\n }\n \"bounddata\": {            (object) if additional data is bound to create the value, it is returned here {\n  \"vdxfkey\":\"i-address or vdxfkey\"  (string) i-address that was combined via hash\n  \"uint256\":\"32bytehex\"       (hexstr) 256 bit hash combined with hash\n  \"indexnum\":int           (integer) int32_t combined with hash\n }\n}```\nExamples:\n```bash\nCreate the signature\n> verus getvdxfid \"system.currency.export\"Verify the signature\n> verus getvdxfid \"idname::userdefinedgroup.subgroup.publishedname\"As json rpc\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getvdxfid\", \"params\": [\"idname::userdefinedgroup.subgroup.publishedname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```## Wallet### `addmultisigaddress nrequired [\"key\",...] ( \"account\" )`\nAdd a nrequired-to-sign multisignature address to the wallet.\nEach key is a VRSC address or hex-encoded public key.\nIf 'account' is specified (DEPRECATED), assign address to that account.",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]