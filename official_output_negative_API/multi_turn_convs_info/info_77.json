[
    [
        [
            "How do I use the `setidentitytimelock` command to lock a VerusID on all chains, including the one it was exported to?",
            "The `setidentitytimelock` command only locks a VerusID on the current blockchain and does not affect the lock status of VerusIDs on other chains, including VerusIDs with the same identity that have been exported to another chain. If you want to lock a VerusID on multiple chains, you would need to perform the `setidentitytimelock` command on each chain separately.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ],
        [
            "Can I use the `setunlockdelay` option to immediately unlock a VerusID?",
            "No, the `setunlockdelay` option does not immediately unlock a VerusID. Instead, it sets a time unlock delay on an identity, which means that once the identity has been unlocked, the specified number of blocks must pass before the identity will be able to spend funds on this blockchain.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ],
        [
            "What happens if I set an `unlockatblock` height that is in the past?",
            "If you set an `unlockatblock` height that is in the past, it will not unlock the identity. The `unlockatblock` option sets an absolute block height at which the identity will be unlocked, so if the specified block height has already passed, the identity will not be unlocked. To unlock an identity immediately, you would need to set the `unlockatblock` height to the current block height, which will still require waiting for the specified unlock delay.",
            "setidentitytimelock \"id@\" '{\"unlockatblock\":absoluteblockheight || \"setunlockdelay\":numberofblocksdelayafterunlock}' (returntx) (feeoffer) (sourceoffunds)Enables timelocking and unlocking of funds access for an on-chain VerusID. This does not affect the lock status of VerusIDs on other chains,\nincluding VerusIDs with the same identity as this one, which has been exported to another chain.Use \"setunlockdelay\" to set a time unlock delay on an identity, which means that once the identity has been unlocked,\nnumberofblocksdelayafterunlock must then pass before the identity will be able to spend funds on this blockchain. Services\nwhich support VerusID authentication and recognize this setting may also choose to prevent funds transfers when an ID is locked.Use \"unlockatblock\" to either unlock, by passing the current block, which will still require waiting for the specified unlock\ndelay, or to set a future unlock height that immediately begins counting down. Unlike an unlock delay, which only starts counting\ndown when the ID is unlocked, an \"unlockatblock\" time lock is absolute and will automatically unlock when the specified\nblock passes.",
            "./raw_text_input_api_text/setidentitytimelock"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9cc8f774-b8c2-4e3b-98bb-844ce017485e"
]