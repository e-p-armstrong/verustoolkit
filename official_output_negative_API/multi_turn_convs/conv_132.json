[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I have a few questions about some specific parameters in Verus. What is the default value of \"minnotariesconfirm\" if it's not specified?\n\n**AI Assistant:**\nThe \"minnotariesconfirm\" parameter does not have a default value if it's not specified. It's an optional parameter, and if you don't provide a value for it, it will not have a default value.\n\n**User:**\nGot it, that makes sense. What about the \"proofprotocol\" parameter? Is it possible to set it to 0?\n\n**AI Assistant:**\nNo, it's not possible to set the \"proofprotocol\" to 0. The possible values for \"proofprotocol\" are 1, 2, or 3, which correspond to PROOF_PBAASMMR, PROOF_CHAINID, and PROOF_ETHNOTARIZATION, respectively.\n\n**User:**\nOkay, that's helpful to know. What happens if I set \"idreferrallevels\" to 0?\n\n**AI Assistant:**\nIt's not possible to set \"idreferrallevels\" to 0, as it's a required parameter that specifies the number of levels ID referrals go back in reward. A value of 0 would not make sense in this context, as it would imply that there are no levels of referral rewards.\n\n**User:**\nOne more question. Can I set \"proofprotocol\" to 2 for a native currency?\n\n**AI Assistant:**\nNo, you cannot set \"proofprotocol\" to 2 for a native currency. PROOF_CHAINID (value 2) is only applicable to non-native currencies, and it allows for centralized control, minting, and burning of the currency, as well as changing weights. Native currencies have different rules and restrictions.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the default value of \"minnotariesconfirm\" if it's not specified?",
            "The \"minnotariesconfirm\" parameter does not have a default value if it's not specified. It's an optional parameter, and if you don't provide a value for it, it will not have a default value.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain\n     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency\n     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward\n     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries\n     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization\n     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period\n     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID\n                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required\n                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and\n                                        can mint/burn & change weights\n                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without\n                                            full understanding + C++, JavaScript & Solidity dev(s))",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "Is it possible to set the \"proofprotocol\" to 0?",
            "No, it's not possible to set the \"proofprotocol\" to 0. The possible values for \"proofprotocol\" are 1, 2, or 3, which correspond to PROOF_PBAASMMR, PROOF_CHAINID, and PROOF_ETHNOTARIZATION, respectively.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain\n     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency\n     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward\n     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries\n     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization\n     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period\n     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID\n                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required\n                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and\n                                        can mint/burn & change weights\n                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without\n                                            full understanding + C++, JavaScript & Solidity dev(s))",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What happens if I set \"idreferrallevels\" to 0?",
            "It's not possible to set \"idreferrallevels\" to 0, as it's a required parameter that specifies the number of levels ID referrals go back in reward. A value of 0 would not make sense in this context, as it would imply that there are no levels of referral rewards.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain\n     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency\n     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward\n     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries\n     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization\n     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period\n     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID\n                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required\n                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and\n                                        can mint/burn & change weights\n                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without\n                                            full understanding + C++, JavaScript & Solidity dev(s))",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "Can I set \"proofprotocol\" to 2 for a native currency?",
            "No, you cannot set \"proofprotocol\" to 2 for a native currency. PROOF_CHAINID (value 2) is only applicable to non-native currencies, and it allows for centralized control, minting, and burning of the currency, as well as changing weights. Native currencies have different rules and restrictions.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain\n     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency\n     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward\n     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries\n     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization\n     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period\n     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID\n                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required\n                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and\n                                        can mint/burn & change weights\n                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without\n                                            full understanding + C++, JavaScript & Solidity dev(s))",
            "./raw_text_input_api_text/definecurrency"
        ]
    ]
]