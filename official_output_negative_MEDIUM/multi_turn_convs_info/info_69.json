[
    [
        [
            "How does Verus allow for intra-block frontrunning, and what are the benefits of this approach?",
            "Verus actually eliminates intra-block frontrunning, rather than allowing it. This is achieved through the use of transaction expiration and \"fill-or-kill\" transactions, which prevent even sophisticated front-runners from attempting multi-block mining control.",
            " Thus, Verus eliminates intra-block frontrunning, and using transaction expiration, even sophisticated front-runners that may attempt multi-block mining control can be prevented entirely using \u201cfill-or-kill\u201d transactions.\nThe parallel processing system also leads to reduced slippage for users in almost all circumstances. In all automated market makers, the price offered changes due to interaction with the system. Put simply, if I sell ETH for ERC20, my interaction will push down the price of ETH, and I will get less ERC20 than is indicated by the price existing immediately before my transaction. The larger the size of my transaction, the more slippage I will see. In a system that solves all transactions in parallel, including all \u201cbuys\u201d and all \u201csells\u201d, slippage is reduced because in solving the price for a block, the protocol will first \u201ccancel out\u201d (in the mathematical sense) all the buys and sells until one of them is zero. Then, in the above example, if purchases of ETH exceed sales of ETH (in the block in which I transact), then the price, from my perspective will have improved from that existing immediately prior to my transaction \u2014 the direct opposite of slippage. In a robustly-used system, it should be true that overall slippage experienced by users will be significantly lower than in a serial-based system.\nImproved Benefits for Users\nA significant benefit, covered extensively already, is that users (converters) can expect to receive the fairest, best price without any needed sophistication, trading algorithms, bots, superior infrastructure investment, and the like. In a \u201cpool\u201d that is fairly large (compared to my trading size) and regularly transacted, I can simply issue a sendcurrency command, and transact at market, with a calm and confidence that is rare in other serial-based heavily-gamed markets.\nIn fact, because of parallel processing, and the fact that",
            "./raw_text_input_medium/Verus\u200a\u2014\u200aSuperior DeFi for Community Driven Liquidity-2020-10-16 16:08:12"
        ],
        [
            "Does the parallel processing system in Verus lead to increased slippage for users?",
            "No, the parallel processing system in Verus actually leads to reduced slippage for users in almost all circumstances. This is because the system solves all transactions in parallel, \"cancelling out\" buys and sells until one of them is zero, resulting in improved prices for users and reduced slippage.",
            " Thus, Verus eliminates intra-block frontrunning, and using transaction expiration, even sophisticated front-runners that may attempt multi-block mining control can be prevented entirely using \u201cfill-or-kill\u201d transactions.\nThe parallel processing system also leads to reduced slippage for users in almost all circumstances. In all automated market makers, the price offered changes due to interaction with the system. Put simply, if I sell ETH for ERC20, my interaction will push down the price of ETH, and I will get less ERC20 than is indicated by the price existing immediately before my transaction. The larger the size of my transaction, the more slippage I will see. In a system that solves all transactions in parallel, including all \u201cbuys\u201d and all \u201csells\u201d, slippage is reduced because in solving the price for a block, the protocol will first \u201ccancel out\u201d (in the mathematical sense) all the buys and sells until one of them is zero. Then, in the above example, if purchases of ETH exceed sales of ETH (in the block in which I transact), then the price, from my perspective will have improved from that existing immediately prior to my transaction \u2014 the direct opposite of slippage. In a robustly-used system, it should be true that overall slippage experienced by users will be significantly lower than in a serial-based system.\nImproved Benefits for Users\nA significant benefit, covered extensively already, is that users (converters) can expect to receive the fairest, best price without any needed sophistication, trading algorithms, bots, superior infrastructure investment, and the like. In a \u201cpool\u201d that is fairly large (compared to my trading size) and regularly transacted, I can simply issue a sendcurrency command, and transact at market, with a calm and confidence that is rare in other serial-based heavily-gamed markets.\nIn fact, because of parallel processing, and the fact that",
            "./raw_text_input_medium/Verus\u200a\u2014\u200aSuperior DeFi for Community Driven Liquidity-2020-10-16 16:08:12"
        ],
        [
            "Do users need to be sophisticated traders or have advanced infrastructure to get the best prices on Verus?",
            "No, users do not need to be sophisticated traders or have advanced infrastructure to get the best prices on Verus. The parallel processing system and fair market principles ensure that users can expect to receive the fairest, best price without needing trading algorithms, bots, or superior infrastructure investment.",
            " Thus, Verus eliminates intra-block frontrunning, and using transaction expiration, even sophisticated front-runners that may attempt multi-block mining control can be prevented entirely using \u201cfill-or-kill\u201d transactions.\nThe parallel processing system also leads to reduced slippage for users in almost all circumstances. In all automated market makers, the price offered changes due to interaction with the system. Put simply, if I sell ETH for ERC20, my interaction will push down the price of ETH, and I will get less ERC20 than is indicated by the price existing immediately before my transaction. The larger the size of my transaction, the more slippage I will see. In a system that solves all transactions in parallel, including all \u201cbuys\u201d and all \u201csells\u201d, slippage is reduced because in solving the price for a block, the protocol will first \u201ccancel out\u201d (in the mathematical sense) all the buys and sells until one of them is zero. Then, in the above example, if purchases of ETH exceed sales of ETH (in the block in which I transact), then the price, from my perspective will have improved from that existing immediately prior to my transaction \u2014 the direct opposite of slippage. In a robustly-used system, it should be true that overall slippage experienced by users will be significantly lower than in a serial-based system.\nImproved Benefits for Users\nA significant benefit, covered extensively already, is that users (converters) can expect to receive the fairest, best price without any needed sophistication, trading algorithms, bots, superior infrastructure investment, and the like. In a \u201cpool\u201d that is fairly large (compared to my trading size) and regularly transacted, I can simply issue a sendcurrency command, and transact at market, with a calm and confidence that is rare in other serial-based heavily-gamed markets.\nIn fact, because of parallel processing, and the fact that",
            "./raw_text_input_medium/Verus\u200a\u2014\u200aSuperior DeFi for Community Driven Liquidity-2020-10-16 16:08:12"
        ]
    ],
    "will",
    "be",
    "replaced",
    "eb0f5a7b-7414-4ffd-92a0-6bd0a12f0cd7"
]