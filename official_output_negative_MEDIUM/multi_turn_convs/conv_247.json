[
    "## Conversation that answers the provided questions:\n**User:**\nHi! I've been looking into smart contracts and I was wondering, how do Smart Contracts on Verus Protocol work exactly like Smart Contracts on Ethereum?\n\n**AI Assistant:**\nActually, Smart Contracts on Verus Protocol don't work exactly like Smart Contracts on Ethereum. The approach on Ethereum involves writing executable programs/contracts with no actual checks for math accuracy, interface adherence, or accounting rules. Verus Smart Transactions, on the other hand, take a different approach that's easier to use in practice to achieve most capabilities in a decentralized fashion.\n\n**User:**\nSo, are Verus Smart Transactions essentially the same as Smart Contracts?\n\n**AI Assistant:**\nNo, Verus Smart Transactions are not essentially the same as Smart Contracts. They're a different approach that's designed to be easier to use in practice to achieve most capabilities in a decentralized fashion. While they share some similarities, they're not identical concepts.\n\n**User:**\nThat's good to know. I was also wondering, does Verus Protocol use the Ethereum Virtual Machine (EVM) to execute its smart transactions?\n\n**AI Assistant:**\nNo, Verus Protocol doesn't use the Ethereum Virtual Machine (EVM) to execute its smart transactions. Verus Protocol has its own distinct approach to smart transactions that's separate from Ethereum's. It's designed to be more flexible and efficient, and it doesn't rely on the EVM to operate.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do Smart Contracts on Verus Protocol work exactly like Smart Contracts on Ethereum?",
            "Smart Contracts on Verus Protocol do not work exactly like Smart Contracts on Ethereum. In fact, the article explains that the current model on Ethereum involves writing executable programs/contracts with no actual checks for math accuracy, interface adherence, or accounting rules, whereas Verus Smart Transactions are a different approach that is easier to use in practice to achieve most capabilities in a decentralized fashion.",
            "Title: Verus Smart Transactions vs. Smart Contracts\nArticle URL: https://medium.com/veruscoin/verus-smart-transactions-vs-smart-contracts-f98079c00ed0\nContent:Verus Smart Transactions vs. Smart Contracts\nVerus Protocol lead developer Mike Toutonghi explains the differences between Verus smart transactions and smart contracts.The following was written by Mike Toutonghi, lead developer on the Verus Protocol, on Discord\ud83d\udc47\nApplication Programming Model\nThe way to understand smart transactions vs. smart contracts is to think about the application programming model, and how each of them work in context.\nThere is no 1:1 correlation, but smart transactions are much easier to use in practice to achieve most capabilities, if not all, in a decentralized fashion.\nSmart Contracts\nBasically, the current model on Ethereum is:\nYou run on a blockchain where the only currency where accounting is enforced by the blockchain protocol is ETH. To launch, or materialize a token, an account abstraction, or any other form of currency or identity-like structure (NFTs, liquidity pools, etc), you write an executable program/contract, according to accepted conventions, but with no actual checks that you follow any form of math accuracy, interface adherence, or accounting rules whatsoever.\nThe differentiation of these contracts, which are akin to stored procedures in a database, but carry with them the DB schema as well as the interface, is in the way they enable differences of implementation of those accepted conventions.\nConsensus across all of Ethereum is applied to ensuring that the shared, serialized, worldwide computer that is the EVM executes its low level instructions accurately, with no accounting of currencies, exchanges, enablement of efficient, actual IDs, zk-privacy, etc. The currencies that run above the single native security currency, run by arbitrary rules, often opaque or containin",
            "./raw_text_input_medium/Verus Smart Transactions vs. Smart Contracts-2023-07-27 14:24:48"
        ],
        [
            "Are Verus Smart Transactions essentially the same as Smart Contracts?",
            "No, Verus Smart Transactions are not essentially the same as Smart Contracts. They are a different approach that is easier to use in practice to achieve most capabilities in a decentralized fashion.",
            "Title: Verus Smart Transactions vs. Smart Contracts\nArticle URL: https://medium.com/veruscoin/verus-smart-transactions-vs-smart-contracts-f98079c00ed0\nContent:Verus Smart Transactions vs. Smart Contracts\nVerus Protocol lead developer Mike Toutonghi explains the differences between Verus smart transactions and smart contracts.The following was written by Mike Toutonghi, lead developer on the Verus Protocol, on Discord\ud83d\udc47\nApplication Programming Model\nThe way to understand smart transactions vs. smart contracts is to think about the application programming model, and how each of them work in context.\nThere is no 1:1 correlation, but smart transactions are much easier to use in practice to achieve most capabilities, if not all, in a decentralized fashion.\nSmart Contracts\nBasically, the current model on Ethereum is:\nYou run on a blockchain where the only currency where accounting is enforced by the blockchain protocol is ETH. To launch, or materialize a token, an account abstraction, or any other form of currency or identity-like structure (NFTs, liquidity pools, etc), you write an executable program/contract, according to accepted conventions, but with no actual checks that you follow any form of math accuracy, interface adherence, or accounting rules whatsoever.\nThe differentiation of these contracts, which are akin to stored procedures in a database, but carry with them the DB schema as well as the interface, is in the way they enable differences of implementation of those accepted conventions.\nConsensus across all of Ethereum is applied to ensuring that the shared, serialized, worldwide computer that is the EVM executes its low level instructions accurately, with no accounting of currencies, exchanges, enablement of efficient, actual IDs, zk-privacy, etc. The currencies that run above the single native security currency, run by arbitrary rules, often opaque or containin",
            "./raw_text_input_medium/Verus Smart Transactions vs. Smart Contracts-2023-07-27 14:24:48"
        ],
        [
            "Does Verus Protocol use the Ethereum Virtual Machine (EVM) to execute its smart transactions?",
            "No, Verus Protocol does not use the Ethereum Virtual Machine (EVM) to execute its smart transactions. Verus Protocol has its own approach to smart transactions that is distinct from Ethereum's.",
            "Title: Verus Smart Transactions vs. Smart Contracts\nArticle URL: https://medium.com/veruscoin/verus-smart-transactions-vs-smart-contracts-f98079c00ed0\nContent:Verus Smart Transactions vs. Smart Contracts\nVerus Protocol lead developer Mike Toutonghi explains the differences between Verus smart transactions and smart contracts.The following was written by Mike Toutonghi, lead developer on the Verus Protocol, on Discord\ud83d\udc47\nApplication Programming Model\nThe way to understand smart transactions vs. smart contracts is to think about the application programming model, and how each of them work in context.\nThere is no 1:1 correlation, but smart transactions are much easier to use in practice to achieve most capabilities, if not all, in a decentralized fashion.\nSmart Contracts\nBasically, the current model on Ethereum is:\nYou run on a blockchain where the only currency where accounting is enforced by the blockchain protocol is ETH. To launch, or materialize a token, an account abstraction, or any other form of currency or identity-like structure (NFTs, liquidity pools, etc), you write an executable program/contract, according to accepted conventions, but with no actual checks that you follow any form of math accuracy, interface adherence, or accounting rules whatsoever.\nThe differentiation of these contracts, which are akin to stored procedures in a database, but carry with them the DB schema as well as the interface, is in the way they enable differences of implementation of those accepted conventions.\nConsensus across all of Ethereum is applied to ensuring that the shared, serialized, worldwide computer that is the EVM executes its low level instructions accurately, with no accounting of currencies, exchanges, enablement of efficient, actual IDs, zk-privacy, etc. The currencies that run above the single native security currency, run by arbitrary rules, often opaque or containin",
            "./raw_text_input_medium/Verus Smart Transactions vs. Smart Contracts-2023-07-27 14:24:48"
        ]
    ]
]