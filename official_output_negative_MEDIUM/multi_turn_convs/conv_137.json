[
    "## Conversation that answers the provided questions:\n**User:**\nI've been exploring the Verus platform and I was wondering, are decentralized currencies the only type of currency that can be created on Verus?\n\n**AI Assistant:**\nNo, that's not correct. Both decentralized and centralized currencies can be created on the Verus platform. Decentralized currencies have a static supply, while centralized currencies allow the owner of the rootID to mint tokens into existence and anyone to burn them. This provides a lot of flexibility for different use cases. Do you have any other questions about creating currencies on Verus?\n\n**User:**\nThat helps clarify things. I also had a question about SubIDs. Can SubIDs only be bound to people and products?\n\n**AI Assistant:**\nNo, that's not correct. SubIDs can be bound to many things, including people, products, unlimited amounts of content, data, and provable information, both public and private. This includes provable contracts and rights that can be bound to ownership of the subID itself. This allows for a wide range of use cases and applications.\n\n**User:**\nI was also curious about the functionality of SubIDs in the \"content multimap\". Do SubIDs only have reading functionality there?\n\n**AI Assistant:**\nNo, that's not correct. SubIDs have read, write, and delete functions in the \"content multimap\", allowing for a range of operations to be performed on the data associated with the SubID. This provides a lot of flexibility for managing and updating data.\n\n**User:**\nFinally, I was wondering if coding is required to launch a currency on the Verus platform.\n\n**AI Assistant:**\nNo, zero coding is required to launch a currency on the Verus platform. The parameters for launching a currency can be chosen without any coding knowledge. This makes it accessible to a wide range of users, even those without a technical background.",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "Are decentralized currencies the only type of currency that can be created on the Verus platform?",
            "No, that's not correct. Both decentralized and centralized currencies can be created on the Verus platform. Decentralized currencies have a static supply, while centralized currencies allow the owner of the rootID to mint tokens into existence and anyone to burn them.",
            "mple of a centralized currency here.\nThe supply of this type of currency is static when it\u2019s a decentralized version. When it\u2019s a centralized version, the owner of the rootID can mint tokens into existence, and anyone can burn them.\nThis option is also used to create currencies that are mapped to Ethereum ERC-20s. Which means you can send those ERC-20s over to Verus, or from Verus to the ERC-20. This is made possible with the non-custodial Verus-Ethereum Bridge. You can read more about it here.\nAnd of course, a simple token currency can be one of the reserves in a basket currency.\nWhat are SubIDs\nSubIDs are powerful objects on the blockchain. They can be registered in an unlimited amount under any created currency (basket and simple token currency). A few examples are product.MyBrand@ or user.MyBrand@. The name MyBrand@ is a VerusID (a namespace) that is converted into a currency. The subIDs are \u2018product\u2019 and \u2018user\u2019.\nSubIDs can be bound digitally to many things. They can be bound to people and products. They can be bound to an unlimited amount of content, data, and provable information, both public and private. Including provable contracts and rights that can be bound to ownership of the subID itself.\nAnother powerful feature is that it has read, write and delete functions in what is called the \u201ccontent multimap\u201d. All kinds of information can be read and processed in the mempool of the blockchain.\nIt doesn\u2019t stop there, it\u2019s also a friendly name blockchain address that can receive, send, hold and stake funds, and can be used to login to services, password-free. Read more about VerusID here.\nParameters to Launch Currencies\nThis is all anyone needs to do to launch powerful currencies. Zero coding!\nNext up are the parameters. Choose the parameters wisely to launch a currency that suits any need. Not all parameters are needed or combinable. There are many to go through, s",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "Can SubIDs only be bound to people and products?",
            "No, that's not correct. SubIDs can be bound to many things, including people, products, unlimited amounts of content, data, and provable information, both public and private. This includes provable contracts and rights that can be bound to ownership of the subID itself.",
            "mple of a centralized currency here.\nThe supply of this type of currency is static when it\u2019s a decentralized version. When it\u2019s a centralized version, the owner of the rootID can mint tokens into existence, and anyone can burn them.\nThis option is also used to create currencies that are mapped to Ethereum ERC-20s. Which means you can send those ERC-20s over to Verus, or from Verus to the ERC-20. This is made possible with the non-custodial Verus-Ethereum Bridge. You can read more about it here.\nAnd of course, a simple token currency can be one of the reserves in a basket currency.\nWhat are SubIDs\nSubIDs are powerful objects on the blockchain. They can be registered in an unlimited amount under any created currency (basket and simple token currency). A few examples are product.MyBrand@ or user.MyBrand@. The name MyBrand@ is a VerusID (a namespace) that is converted into a currency. The subIDs are \u2018product\u2019 and \u2018user\u2019.\nSubIDs can be bound digitally to many things. They can be bound to people and products. They can be bound to an unlimited amount of content, data, and provable information, both public and private. Including provable contracts and rights that can be bound to ownership of the subID itself.\nAnother powerful feature is that it has read, write and delete functions in what is called the \u201ccontent multimap\u201d. All kinds of information can be read and processed in the mempool of the blockchain.\nIt doesn\u2019t stop there, it\u2019s also a friendly name blockchain address that can receive, send, hold and stake funds, and can be used to login to services, password-free. Read more about VerusID here.\nParameters to Launch Currencies\nThis is all anyone needs to do to launch powerful currencies. Zero coding!\nNext up are the parameters. Choose the parameters wisely to launch a currency that suits any need. Not all parameters are needed or combinable. There are many to go through, s",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "Do SubIDs only have reading functionality in the \"content multimap\"?",
            "No, that's not correct. SubIDs have read, write, and delete functions in the \"content multimap\", allowing for a range of operations to be performed on the data associated with the SubID.",
            "mple of a centralized currency here.\nThe supply of this type of currency is static when it\u2019s a decentralized version. When it\u2019s a centralized version, the owner of the rootID can mint tokens into existence, and anyone can burn them.\nThis option is also used to create currencies that are mapped to Ethereum ERC-20s. Which means you can send those ERC-20s over to Verus, or from Verus to the ERC-20. This is made possible with the non-custodial Verus-Ethereum Bridge. You can read more about it here.\nAnd of course, a simple token currency can be one of the reserves in a basket currency.\nWhat are SubIDs\nSubIDs are powerful objects on the blockchain. They can be registered in an unlimited amount under any created currency (basket and simple token currency). A few examples are product.MyBrand@ or user.MyBrand@. The name MyBrand@ is a VerusID (a namespace) that is converted into a currency. The subIDs are \u2018product\u2019 and \u2018user\u2019.\nSubIDs can be bound digitally to many things. They can be bound to people and products. They can be bound to an unlimited amount of content, data, and provable information, both public and private. Including provable contracts and rights that can be bound to ownership of the subID itself.\nAnother powerful feature is that it has read, write and delete functions in what is called the \u201ccontent multimap\u201d. All kinds of information can be read and processed in the mempool of the blockchain.\nIt doesn\u2019t stop there, it\u2019s also a friendly name blockchain address that can receive, send, hold and stake funds, and can be used to login to services, password-free. Read more about VerusID here.\nParameters to Launch Currencies\nThis is all anyone needs to do to launch powerful currencies. Zero coding!\nNext up are the parameters. Choose the parameters wisely to launch a currency that suits any need. Not all parameters are needed or combinable. There are many to go through, s",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "Is coding required to launch a currency on the Verus platform?",
            "No, zero coding is required to launch a currency on the Verus platform. The parameters for launching a currency can be chosen without any coding knowledge.",
            "mple of a centralized currency here.\nThe supply of this type of currency is static when it\u2019s a decentralized version. When it\u2019s a centralized version, the owner of the rootID can mint tokens into existence, and anyone can burn them.\nThis option is also used to create currencies that are mapped to Ethereum ERC-20s. Which means you can send those ERC-20s over to Verus, or from Verus to the ERC-20. This is made possible with the non-custodial Verus-Ethereum Bridge. You can read more about it here.\nAnd of course, a simple token currency can be one of the reserves in a basket currency.\nWhat are SubIDs\nSubIDs are powerful objects on the blockchain. They can be registered in an unlimited amount under any created currency (basket and simple token currency). A few examples are product.MyBrand@ or user.MyBrand@. The name MyBrand@ is a VerusID (a namespace) that is converted into a currency. The subIDs are \u2018product\u2019 and \u2018user\u2019.\nSubIDs can be bound digitally to many things. They can be bound to people and products. They can be bound to an unlimited amount of content, data, and provable information, both public and private. Including provable contracts and rights that can be bound to ownership of the subID itself.\nAnother powerful feature is that it has read, write and delete functions in what is called the \u201ccontent multimap\u201d. All kinds of information can be read and processed in the mempool of the blockchain.\nIt doesn\u2019t stop there, it\u2019s also a friendly name blockchain address that can receive, send, hold and stake funds, and can be used to login to services, password-free. Read more about VerusID here.\nParameters to Launch Currencies\nThis is all anyone needs to do to launch powerful currencies. Zero coding!\nNext up are the parameters. Choose the parameters wisely to launch a currency that suits any need. Not all parameters are needed or combinable. There are many to go through, s",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ]
    ]
]