[
    "How do users typically interact with smart contracts in Verus, given that they need to write and deploy their own custom smart contracts?",
    "Users don't need to write and deploy their own custom smart contracts in Verus. Smart contract capabilities are primitives built into the protocol, and users can interact with them through simple transactions using a command-line API or a few clicks in the GUI wallet. There are no intervening smart contracts to audit or worry about.",
    "Verus \u2014 Smart Transactions\nVerus is an entirely different model for the execution of smart transactions on the blockchain. In Verus. smart contract capabilities are primitives built into the protocol on a UTXO-based blockchain and are accessed by users through smart transactions. There are no intervening smart contracts to audit or sweat over. There is only the single protocol that leverages the added security gained from using a UTXO-based system. Users interact with smart contracts by issuing transactions using a simple command line API, or a few clicks in the GUI wallet. Most importantly for liquidity pools, protocol based smart transactions allow for the simultaneous solving of submitted transactions in any group of transactions, which for native currencies can either be a specific block, for launches, all pre-launch blocks, or for normal conversions, a group of transactions aggregated by the protocol rules. By processing all transactions aggregated according to the protocol in parallel, as opposed to serial processing, the specific order within a block has no impact on the fairness of any conversion. In fact, all conversions in all directions, which are processed on one group of transactions get exactly the same conversion price, without even a spread between conversions to and from a specific currency. The implications of this fundamental design difference are many and impor",
    "./raw_text_input_medium/Verus\u200a\u2014\u200aSuperior DeFi for Community Driven Liquidity-2020-10-16 16:08:12"
]