[
    [
        [
            "How do I perform advanced operations in Verus, such as signing transactions from multi-signature IDs, creating tokenized ID control (next-generation NFT), and creating an identity with a fractional currency as its parent?",
            "In Verus, there are several advanced operations that can be performed using the command line. Here are the steps to perform each of these operations:\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs, you need to follow these steps:\n\n1. **Create a transaction:** Use the `sendcurrency` command to create a transaction from the multi-signature ID. For example:\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n```\n2. **Get the raw transaction data:** Use the `z_getoperationstatus` command to get the raw transaction data. For example:\n```\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\n3. **Sign the transaction:** Take the raw hex transaction data to each additional wallet(s) containing the additional signing addresses/IDs. Use the `signrawtransaction` command to sign the transaction. For example:\n```\nverus signrawtransaction <raw_hex_transaction>\n```\n4. **Broadcast the signed transaction:** After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command. For example:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\n\n**Tokenizing ID Control (Next-Generation NFT):**\nTo create a tokenized ID control, also known as a next-generation NFT, you need to define a currency with specific options. Here's an example:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nIn this example, the `options` field is set to 2080, which includes the `OPTION_NFT_TOKEN` and `OPTION_TOKEN` flags. The `preallocations` field specifies the initial allocation of the token, and the `maxpreconversion` field is set to 0, indicating that the token is pre-allocated.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` command with additional positional arguments. Here's an example:\n```\nverus registernamecommitment <username> <commitment> <currency_parent> <funding_address>\n```\nIn this example, `<currency_parent>` specifies the parent currency, and `<funding_address>` specifies the funding address. You can use quotes `\"\"` to leave fields blank, such as the referrer field. Additionally, you can use `z_addresses` to fund the name commitment and identity registration.",
            "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "7b890ccc-5760-4723-9581-7d8097eec773"
]