[
    [
        [
            "What are the arguments and structure of a `send` command in Verus, and how do they affect the transaction?",
            "In Verus, the `send` command is used to send VRSC to one or multiple addresses. The command requires specific arguments to be provided in a particular structure. Here's a breakdown of the arguments and their effects on the transaction:\n\n**Arguments:**\n\n1. **\"fromaccount\"**: This argument must be set to an empty string `\"\"` to represent the default account. Passing any other string will result in an error.\n\n2. **\"amounts\"**: This argument is a JSON object that specifies the addresses and amounts to be sent. The structure of this object is as follows:\n```json\n{\n  \"address\": amount (numeric)\n ,...\n}\n```\nHere, each key is a VRSC address, and its corresponding value is the numeric amount of VRSC to be sent to that address.\n\n3. **minconf** (optional, default=1): This argument specifies the minimum number of confirmations required for the balance to be considered valid. Only the balance confirmed at least this many times will be used.\n\n4. **\"comment\"** (optional): This argument allows you to add a comment to the transaction.\n\n5. **subtractfeefromamount** (optional): This argument is a JSON array that specifies the addresses from which the fee will be deducted. The fee will be equally divided among the addresses specified in this array. If no addresses are specified, the sender will pay the fee. The structure of this array is as follows:\n```json\n[\n  \"address\" (string)\n ,...\n]\n```\nHere, each element in the array is a VRSC address from which the fee will be subtracted.\n\n**Result:**\nThe `send` command returns a single transaction ID, regardless of the number of addresses specified in the \"amounts\" argument. This transaction ID can be used to track the status of the transaction.\n\nBy understanding the structure and effects of these arguments, you can use the `send` command in Verus to send VRSC to multiple addresses with customizable options for fee deduction and confirmation requirements.",
            "#### Arguments:\n1. \"fromaccount\"     (string, required) MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error.\n2. \"amounts\"       (string, required) A json object with addresses and amounts\n```json\n  {\n   \"address\":amount  (numeric) The VRSC address is the key, the numeric amount in VRSC is the value\n   ,...\n  }\n```\n3. minconf         (numeric, optional, default=1) Only use the balance confirmed at least this many times.\n4. \"comment\"       (string, optional) A comment\n5. subtractfeefromamount  (string, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less VRSC than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee.\n```json\n  [\n   \"address\"      (string) Subtract fee from this address\n   ,...\n  ]\n```#### Result:\n\"transactionid\"     (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.Examples:",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "25fbd45b-3a31-460b-b8f7-0a1aec2bbf81"
]