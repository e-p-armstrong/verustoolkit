[
    [
        [
            "What are the steps to reset a testnet, export an ID to a PBaaS chain, and sign transactions from multi-signature IDs on both testnet and mainnet using the Verus command line?",
            "Here are the detailed steps to accomplish each of these tasks using the Verus command line:\n\n**Resetting a Testnet:**\nTo reset a testnet, you need to ensure that Verus is closed and no testnet daemon is running. Then, delete the following directories specific to your operating system:\n\n* On Linux: `~/.Komodo/vrsctest` and `~/.verustest`\n* On Mac OS: `~/Library/Application Support/Komodo/VRSC` and `~/Library/Application Support/VerusTest`\n* On Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\` and `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\VRSC\\` and `%AppData%\\Roaming\\VerusTest`\n\nAfter deleting these directories, restart the testnet daemon or relaunch Verus Desktop, deactivate verustest, and re-add verustest native.\n\n**Exporting an ID to a PBaaS Chain:**\nTo export an ID to a PBaaS chain, use the following command:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nReplace `IDNAME@` with the ID you want to export, `PBaaSChainName` with the name of the PBaaS chain, and adjust the `amount` and `currency` according to your needs.\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs on both testnet and mainnet, follow these steps:\n\n1. **Create a transaction**: Use the `sendcurrency` command to create a transaction from a multi-signature ID:\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n```\nReplace `<multi-signature-ID>@` with the multi-signature ID, `<destination_address>` with the destination address, and `<transaction_amount>` with the transaction amount.\n\n2. **Get the raw transaction data**: Use the `z_getoperationstatus` command to get the raw transaction data:\n```\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nReplace `<operation_id_returned_by_sendcurrency>` with the operation ID returned by the `sendcurrency` command.\n\n3. **Sign the transaction**: Take the raw hex transaction data to each additional wallet(s) containing the additional signing addresses/IDs and use the `signrawtransaction` command to sign the transaction:\n```\nverus signrawtransaction <raw_hex_transaction>\n```\nReplace `<raw_hex_transaction>` with the raw hex transaction data.\n\n4. **Broadcast the signed transaction**: After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\nReplace `<raw_hex_signed_transaction>` with the raw hex signed transaction data.",
            "To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/VRSC`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "7d92e160-e796-417b-be23-19fd10c0052b"
]