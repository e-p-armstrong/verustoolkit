[
    [
        [
            "How do you lock and unlock identities in Verus, and how do you query for currencies that have a certain level of liquidity?",
            "In Verus, identities can be locked and unlocked using the `updateidentity` command. Locking an identity restricts its usage until a certain condition is met, and unlocking it removes these restrictions. There are two types of locks: time locks and time delays.\n\n**Time Locks:** A time lock specifies the block height at which an identity will be unlocked. To set a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block height>` with the block height at which you want the identity to be unlocked.\n\n**Time Delays:** A time delay specifies the number of blocks to delay an ID's unlock when the flags are set back to an unlocked state. To set a time delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block delay>` with the number of blocks to delay the unlock.\n\n**Revoking an Identity:** Revoking an identity will clear its locked status, regardless of any time delay or unlock height. However, a locked identity cannot revoke itself.\n\n**Conversion Queries:** Verus provides a way to query for currencies that have a certain level of liquidity. The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, to query for currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return a list of currencies that meet the specified criteria.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "81ad01dc-5b32-43a6-b905-34fd1f2077f3"
]