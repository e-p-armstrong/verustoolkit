[
    [
        [
            "What are some of the key features of Verus, specifically in regards to locking and unlocking IDs, and conversion queries?",
            "One of the key features of Verus is its ability to enable an unlimited number of simultaneously operating, interoperable blockchains, making it a fractal system. In addition to this, Verus also offers various features related to locking and unlocking IDs, as well as conversion queries.\n\n**Locking and Unlocking IDs:**\nVerus allows users to lock and unlock IDs, which can be done using the `updateidentity` command. There are two types of locks that can be applied to an ID: Time Lock and Time Delay.\n\n**Time Lock:**\nA Time Lock is used to define the unlock height of an identity. This means that the ID will remain locked until a specific block height is reached. To set a Time Lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Time Delay:**\nA Time Delay is used to define how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. This means that even if the flags are set to unlock, the ID will remain locked for a certain number of blocks. To set a Time Delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Revoking an Identity:**\nIt's important to note that revoking an identity will clear its locked status, regardless of any Time Lock or Time Delay that may be in place. Additionally, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nVerus also offers a feature called conversion queries, which allows users to retrieve information about currencies that meet certain criteria. The `getcurrencyconverters` API can be used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, to retrieve all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return a list of all currencies that meet the specified criteria.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "13e3a555-a913-48e8-9069-2257271d3be3"
]