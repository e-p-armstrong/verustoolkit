[
    [
        [
            "How do you define a new token on the Verus network, and what are the key components of defining a PBaaS blockchain on Verus?",
            "To define a new token on the Verus network, you can use the `definecurrency` command. For example, let's say you want to define a new token called `mycoin`. The command would look like this:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis command defines a new token named `mycoin` with the following properties:\n\n* `name`: The name of the token, `mycoin`.\n* `options`: An integer that determines the behavior of the token.\n* `proofprotocol`: Set to 2, which means that the controller of the chain ID can mint new coins.\n* `currencies`: An array of currencies that can be converted to `mycoin`.\n* `minpreconversion`: An array of minimum amounts of each currency required for conversion.\n* `initialsupply`: The initial supply of `mycoin`.\n\nWith `proofprotocol` set to 2, the controller of the chain ID can mint new coins using the `sendcurrency` command. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new `mycoin` tokens and sends them to the address `mike@`.\n\nDefining a PBaaS blockchain on Verus involves creating a JSON object that describes the properties of the blockchain. The key components of a PBaaS blockchain definition include:\n\n* `name`: The name of the blockchain.\n* `options`: An integer that determines the behavior of the blockchain.\n* `currencies`: An array of currencies that can be used on the blockchain.\n* `conversions`: An array of conversion ratios between the blockchain's native currency and each currency on the blockchain.\n* `eras`: An array of objects that define the block reward, reward decay, halving, and end of each \"era\" in the blockchain's lifecycle.\n* `notaries`: An array of VerusIDs that will serve as notaries on the blockchain.\n* `minnotariesconfirm`: An integer that determines the minimum number of notaries required to confirm a block.\n* `nodes`: An array of objects that describe the network addresses and IDs of the nodes on the blockchain.\n* `gatewayconvertername`: The name of the bridge that connects the PBaaS blockchain to other chains.\n* `gatewayconverterissuance`: The initial supply of the bridge's native token.\n\nThe bridge definition has overridable defaults that can be set to customize the behavior of the bridge. These defaults include:\n\n* `currencies`: An array of currencies that the bridge supports.\n* `initialcontributions`: An array of initial liquidity amounts for each currency.\n* `initialsupply`: The initial supply of the bridge's native token.\n\nBy defining a PBaaS blockchain and its associated bridge, you can create a decentralized, scalable, and secure blockchain network that can be used for a variety of applications.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "745183ac-98b0-4800-b887-fcf2f3fcb11f"
]