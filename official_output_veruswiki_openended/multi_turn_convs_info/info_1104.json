[
    [
        [
            "How do I define a PBaaS blockchain, including its properties and bridge configuration, using the Verus command line?",
            "To define a PBaaS blockchain, you need to create a JSON object that describes the blockchain's properties and a separate JSON object for the bridge's configuration. Then, you can pass these definitions to the `definecurrency` command using the Verus command line.\n\nLet's break down the components of the PBaaS blockchain definition:\n\n1. **Name**: The name of the PBaaS chain, in this case, `\"PBaaSChain\"`.\n2. **Options**: An integer that defines the chain's options, in this case, `330`.\n3. **Currencies**: An array of currencies that the chain's native currency can be converted into, in this case, only `VRSCTEST`.\n4. **Conversions**: An array that defines the conversion ratios between the chain's native currency and each currency in the `currencies` array, in this case, `[1]`.\n5. **Eras**: An array that defines the block reward, reward decay, halving, and end of each \"era\" in the chain's lifecycle, in this case, a single era with a reward of `1200000000` and no decay or halving.\n6. **Notaries**: An array of VerusIDs that will serve as notaries on the chain, in this case, `[\"Notary1@\", \"Notary2@\", \"Notary3@\"]`.\n7. **MinNotariesConfirm**: An integer that specifies the minimum number of notaries needed to confirm a block, in this case, `2`.\n8. **Nodes**: An array that describes the network addresses of the nodes on the chain, as well as their IDs, in this case, two nodes with addresses `111.111.111.111:10000` and `111.111.111.112:10000`, and IDs `Node1@` and `Node2@`, respectively.\n9. **GatewayConverterName**: The name of the bridge, in this case, `\"Bridge\"`.\n10. **GatewayConverterIssuance**: The initial issuance of the bridge's native token, in this case, `1000000`.\n\nThe bridge definition has overridable defaults, which include:\n\n1. **Currencies**: An array of currencies that the bridge supports, in this case, `VRSCTEST`, `PBaaSChain`, and `USD`.\n2. **InitialContributions**: An array that specifies the initial liquidity for each currency in the bridge, in this case, `[380228.12033701, 0, 1000000]`.\n3. **InitialSupply**: The initial supply of the bridge's native token, in this case, `3000000`.\n\nTo pass these definitions to the `definecurrency` command, you would use the following command:\n```json\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":330,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```\nThis command defines the PBaaS chain and its bridge configuration, and sets up the initial parameters for the chain and bridge.",
            "## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```Now pass those definitions to `definecurrency`\n```json\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":330,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "797c77d8-8762-458d-8d35-ac677de0a029"
]