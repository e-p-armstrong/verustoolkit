[
    [
        [
            "What is the `getimports` command in Verus, and how can I use it to retrieve information about imports on a specific chain?",
            "The `getimports` command in Verus is used to retrieve information about imports on a specific chain. An import is a transaction that brings value into a Verus chain from another chain or system. The `getimports` command returns a list of objects, each representing an import transaction on the specified chain.\n\nThe objects in the list contain several properties that provide information about the import transaction, including:\n\n* `blockheight`: The block height at which the import transaction was confirmed.\n* `importid`: The transaction ID of the import transaction.\n* `description`: An object that contains additional information about the import transaction, including:\n\t+ `version`: The version of the chain definition.\n\t+ `sourcesystemid`: The i-address of the source system.\n\t+ `importcurrencyid`: The i-address of the currency ID.\n\t+ `valuein`: An object that contains the total value of the import for each currency.\n\t+ `tokensout`: An object that contains the total value of the import into each currency on the chain.\n* `transfers`: An array of objects that contain information about each transfer involved in the import transaction, including:\n\t+ `version`: The version of the chain definition.\n\t+ `currencyid`: The i-address of the currency ID.\n\t+ `value`: The value of the transfer.\n\t+ `flags`: The flags for the currency.\n\t+ `preconvert`: A boolean indicating whether the transaction is a preconversion.\n\t+ `fees`: The fees for the transaction.\n\t+ `destinationcurrencyid`: The i-address of the destination currency ID.\n\t+ `destination`: The address of the transaction.\n\nYou can use the `getimports` command in Verus by running `verus getimports \"chainname\"` in the command line, replacing \"chainname\" with the name of the chain for which you want to retrieve import information. Alternatively, you can use the Verus JSON-RPC API to retrieve the same information using a command like `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getimports\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
            "```\n#### Result:\n```json\n[\n {\n  \"blockheight\": n,          (numeric) block height\n  \"importid\": \"hash\",         (hexstring) transaction ID\n  \"description\": {\n   \"version\":n,            (int) version of this chain definition\n   \"sourcesystemid\": \"xxxx\",     (text) i-address of the source system\n   \"importcurrencyid\": \"xxxx\",    (text) i-address of the currency ID\n   \"valuein\": {\n    \"xxxx\": xxx.xxxxxxxx,      (text) i-address of the currency ID, (numeric) the total value of the import\n                     of the currency\n    ....\n   },\n   \"tokensout\": {\n    \"xxxx\": xxx.xxxxxxxx,      (text) i-address of the currency ID, (numeric) the total value of the import\n                     into the currency into this currency\n   }\n  },\n  \"transfers\": [\n   {\n    \"version\": n,          (int) version of this chain definition\n    \"currencyid\": \"xxxx\",      (text) i-address of the currency ID\n    \"value\": n,           (numeric) the value this transaction\n    \"flags\": n,           (hex) flags for the currency\n    \"preconvert\": true|false,    (boolean) Shows whether the transaction is a preconversion\n    \"fees\": xxx.xxxxxxxx,      (numeric) the fees for this transaction\n    \"destinationcurrencyid\": \"xxxx\", (text) i-address of the currency ID\n    \"destination\": \"xxxx\"      (text) address of the transaction\n   },\n   ....\n   }\n  ]\n },\n {},\n ...\n]\n```\nExamples:\n```bash\n> verus getimports \"chainname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getimports\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "99a33214-e3a0-4f6d-9cba-5cea77218655"
]