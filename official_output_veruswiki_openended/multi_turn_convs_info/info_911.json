[
    [
        [
            "What are the Verus commands `gettxoutsetinfo` and `kvsearch`, and how do they work?",
            "The Verus commands `gettxoutsetinfo` and `kvsearch` are two useful tools for interacting with the Verus blockchain.\n\n**`gettxoutsetinfo` Command:**\nThe `gettxoutsetinfo` command is used to retrieve information about the current state of the blockchain. It returns a JSON object with several important pieces of information, including:\n- The current block height (index) of the blockchain\n- The hash of the best block\n- The number of transactions\n- The number of output transactions (txouts)\n- The serialized size of the blockchain in bytes\n- The serialized hash of the blockchain\n- The total amount of cryptocurrency in the blockchain\n\nThis command is useful for getting a general overview of the blockchain's current state. You can run it using the command `verus gettxoutsetinfo` or by making a JSON-RPC request using `curl`.\n\n**`kvsearch` Command:**\nThe `kvsearch` command is used to search for a key stored on an asset chain using the `kvupdate` command. It returns a JSON object with several pieces of information about the key, including:\n- The chain the key is stored on\n- The current height of the chain\n- The key itself\n- The length of the key\n- The owner of the key (represented as a hex string)\n- The height at which the key was stored\n- The height at which the key will expire\n- A flag indicating whether the key was created with a password\n- The stored value associated with the key\n- The size of the stored value in characters\n\nThis command is useful for searching for specific keys stored on an asset chain. You can run it using the command `verus kvsearch <key>` or by making a JSON-RPC request using `curl`.",
            "#### Result:\n```json\n{\n \"height\":n,         (numeric) The current block height (index)\n \"bestblock\": \"hex\",     (string) the best block hash hex\n \"transactions\": n,      (numeric) The number of transactions\n \"txouts\": n,         (numeric) The number of output transactions\n \"bytes_serialized\": n,    (numeric) The serialized size\n \"hash_serialized\": \"hash\",  (string) The serialized hash\n \"total_amount\": x.xxx    (numeric) The total amount\n}\n```\nExamples:\n```bash\n> verus gettxoutsetinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `kvsearch key`\nSearch for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments:\n```\n1. key           (string, required) search the chain for this key\n```\n#### Result:\n```json\n{\n \"coin\": \"xxxxx\",     (string) chain the key is stored on\n \"currentheight\": xxxxx,  (numeric) current height of the chain\n \"key\": \"xxxxx\",      (string) key\n \"keylen\": xxxxx,     (string) length of the key\n \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key\n \"height\": xxxxx,     (numeric) height the key was stored at\n \"expiration\": xxxxx,   (numeric) height the key will expire\n \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.\n \"value\": \"xxxxx\",     (string) stored value\n \"valuesize\": xxxxx    (string) amount of characters stored\n}\n```\nExamples:\n```bash\n> verus kvsearch examplekey\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d2394395-e3b4-48ba-8a0b-00bf298b7597"
]