[
    [
        [
            "How can I tokenize ID control using next-generation NFTs and create an identity with a fractional currency as its parent in Verus?",
            "In Verus, you can tokenize ID control using next-generation NFTs by defining a currency with specific flags and properties. To do this, you need to use the `definecurrency` command with the `OPTION_NFT_TOKEN` and `OPTION_TOKEN` flags, and set the maximum supply to 1 satoshi. This satoshi can be either pre-allocated or pre-converted to.\n\nHere's an example of how to define a currency with these properties:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nThis command defines a currency named \"ID\" with the specified options and properties.\n\nTo create an identity with a fractional currency as its parent, you can use the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, and specify a parent currency, such as `vrsc-btc`, but no referrer.\n\nHere's an example of how to register a name commitment with a parent currency:\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\nTo complete the identity registration, you need to specify the parent in the identity definition and use the `registeridentity` command. You can enter `false` for `returntx` to sign and submit the ID registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address.\n\nHere's an example of how to register an identity with a parent currency:\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 sourceoffunds\n```\nNote that you need to replace `sourceoffunds` with the actual funding identity, transparent address, or z-address.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "b3bba1fd-7a43-41b6-9547-36feab72cb8e"
]