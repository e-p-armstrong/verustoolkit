[
    [
        [
            "What are the steps to sign a transaction from a multi-signature ID on the Verus testnet, and what features does the new Verus testnet offer?",
            "To sign a transaction from a multi-signature ID on the Verus testnet, you need to follow these steps:\n\n**Step 1: Create a transaction and get the raw transaction data**\nUse the `verus sendcurrency` command to create a transaction from your multi-signature ID to the desired destination address. This will return an operation ID. Then, use the `verus z_getoperationstatus` command with the operation ID to get the raw hex transaction data.\n\n**Step 2: Distribute the raw transaction data to additional wallets**\nTake the raw hex transaction data and distribute it to each additional wallet that contains the additional signing addresses/IDs.\n\n**Step 3: Sign the transaction with each wallet**\nUse the `verus signrawtransaction` command in each wallet to sign the transaction with the corresponding signing address/ID.\n\n**Step 4: Broadcast the signed transaction on the network**\nAfter the last necessary signature is applied, use the `verus sendrawtransaction` command to broadcast the signed transaction on the network.\n\nThe new Verus testnet offers a wide range of features, including:\n\n* A full-featured, intrinsically decentralized multi-chain blockchain platform\n* Unlimited number of identities, currencies, liquidity pools, and blockchains\n* Ability to create new identities, currencies, liquidity pools, and blockchains without programming\n* Ability to send currencies worldwide on the same chain or across blockchains with ease\n* Ability to convert currencies to others on the network without an exchange\n* Accessible from Verus Desktop and Verus CLI wallets\n* A new age in crypto with unlimited possibilities for decentralized applications.",
            "## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.The new Verus testnet is a full-featured, intrinsically decentralized multi-chain blockchain platform with an unlimited number of identities, currencies, liquidity pools, and blockchains. It is accessible from the released versions of Verus Desktop and Verus CLI wallets, and it is the beginning of a new age in crypto. There are so many things you can do with Verus that you cannot with any other cryptocurrency platform, and you can try them all today.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "faed061c-1157-41d4-a441-e39e261f47c5"
]