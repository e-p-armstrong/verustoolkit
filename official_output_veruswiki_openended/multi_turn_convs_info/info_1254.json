[
    [
        [
            "How can you check the balance of your Verus wallet, and what are the different ways to specify the balance you want to check?",
            "To check the balance of your Verus wallet, you can use the `getbalance` and `getcurrencybalance` commands. Here's how:\n\n**Using `getbalance`**:\nThe `getbalance` command returns the total amount in your wallet. You can run it with no arguments to get the total balance:\n```bash\n> verus getbalance\n```\nIf you want to get the total balance with at least a certain number of confirmations, you can specify the number of confirmations as an argument:\n```bash\n> verus getbalance \"*\" 6\n```\nThis will show you the total balance in your wallet with at least 6 confirmations.\n\n**Using `getcurrencybalance`**:\nThe `getcurrencybalance` command returns the balance in all currencies of a specific address. You can run it with an address as an argument:\n```bash\n> verus getcurrencybalance \"myaddress\"\n```\nIf you want to get the balance of that address with at least a certain number of confirmations, you can specify the number of confirmations as an argument:\n```bash\n> verus getcurrencybalance \"myaddress\" 5\n```\nThis will show you the total balance in all currencies of the address \"myaddress\" with at least 5 confirmations.\n\n**Using JSON RPC**:\nYou can also use JSON RPC to check your balance. Here's an example of how to use JSON RPC to get the total balance with at least 6 confirmations:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbalance\", \"params\": [\"*\", 6] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nAnd here's an example of how to use JSON RPC to get the balance of a specific address with at least 5 confirmations:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencybalance\", \"params\": [\"myaddress\", 5] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nNote that when using `getcurrencybalance`, if the wallet has only an incoming viewing key for the address, then spends cannot be detected, and so the returned balance may be larger than the actual balance.\n\nAdditionally, you can use the `getnewaddress` command to generate a new VRSC address for receiving payments:\n```bash\n> verus getnewaddress\n```\nYou can also specify an account to generate a new address for that account:\n```bash\n> verus getnewaddress \"myaccount\"\n```",
            "The total amount in the wallet\n```bash\n> verus getbalance\n```\nThe total amount in the wallet at least 5 blocks confirmed\n```bash\n> verus getbalance \"*\" 6\n```\nAs a json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbalance\", \"params\": [\"*\", 6] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getcurrencybalance \"address\" ( minconf ) ( friendlynames ) (includeshared)`Returns the balance in all currencies of a taddr, zaddr, iaddr or ID belonging to the node's wallet.CAUTION: If the wallet has only an incoming viewing key for this address, then spends cannot be\ndetected, and so the returned balance may be larger than the actual balance.#### Arguments:\n1. \"address\"    (string) The selected address. It may be a transparent, private or identity address and include `z\\*`, `R\\*`, and `i\\*` wildcards.\n2. minconf     (numeric, optional, default=1) Only include transactions confirmed at least this many times.\n3. friendlynames  (boolean, optional, default=true) use friendly names instead of i-addresses.\n4. includeshared  (bool, optional, default=false) Include outputs that can also be spent by others#### Result:\namount       (numeric) The total amount in VRSC received for this address.Examples:The total amount received by address \"myaddress\"\n```bash\n> verus getcurrencybalance \"myaddress\"\n```\nThe total amount received by address \"myaddress\" at least 5 blocks confirmed\n```bash\n> verus getcurrencybalance \"myaddress\" 5\n```\nAs a json rpc call\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencybalance\", \"params\": [\"myaddress\", 5] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnewaddress ( \"account\" )`\nReturns a new VRSC address for receiving payments.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "57eb3551-c352-4c38-8763-207422627830"
]