[
    [
        [
            "What is the structure of a Verus transaction, and how can I decode a raw transaction using the Verus command-line interface or a JSON-RPC request?",
            "A Verus transaction is a JSON object that contains several components. These components are:\n\n* `tput note commitment`: A commitment to the transaction's output notes.\n* `onetimePubKey`: A one-time public key used to encrypt the ciphertexts.\n* `randomSeed`: A random seed used in the transaction.\n* `macs`: An array of input note MACs (Message Authentication Codes).\n* `proof`: A zero-knowledge proof that proves the validity of the transaction.\n* `ciphertexts`: An array of output note ciphertexts.\n\nTo decode a raw transaction, you can use the Verus command-line interface or a JSON-RPC request. Here are some examples:\n\n**Using the Verus command-line interface:**\nYou can decode a raw transaction using the `decoderawtransaction` command. The syntax is:\n```\nverus decoderawtransaction \"hexstring\"\n```\nReplace `\"hexstring\"` with the raw transaction you want to decode.\n\n**Using a JSON-RPC request:**\nYou can also decode a raw transaction using a JSON-RPC request. The syntax is:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"decoderawtransaction\", \"params\": [\"hexstring\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `\"hexstring\"` with the raw transaction you want to decode, and `\"myusername\"` with your Verus username.\n\nIn both cases, the decoded transaction will be output in a human-readable format, showing the various components of the transaction.",
            "tput note commitment\n     ,...\n    ],\n    \"onetimePubKey\" : \"hex\", (string) the onetime public key used to encrypt the ciphertexts\n    \"randomSeed\" : \"hex\",   (string) the random seed\n    \"macs\" : [         (json array of string)\n     \"hex\"           (string) input note MAC\n     ,...\n    ],\n    \"proof\" : \"hex\",     (string) the zero-knowledge proof\n    \"ciphertexts\" : [      (json array of string)\n     \"hex\"           (string) output note ciphertext\n     ,...\n    ]\n   }\n   ,...\n ],\n}\n```\nExamples:\n```bash\n> verus decoderawtransaction \"hexstring\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"decoderawtransaction\", \"params\": [\"hexstring\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "3cf1d2b8-de50-478c-9f6e-28a83af36008"
]