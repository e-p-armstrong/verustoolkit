[
    [
        [
            "How do I create a new currency in Verus, and what are the requirements and considerations for doing so?",
            "In Verus, creating a new currency requires having an ID of the same name, and only the controller of that ID can create a currency with that name, and only once. This ensures that the creator of the currency has full control over its definition and management.\n\nTo create a new currency, you need to use the `definecurrency` command, which takes a JSON object as an argument. This object defines the properties of the currency, such as its name, options, conversion rates, and preallocations.\n\nFor example, let's say you want to create a currency called \"gold\" that is backed by a specific, auditable store of gold. You would use the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines a currency called \"gold\" with the following properties:\n\n* `name`: The name of the currency, which must match the name of the ID that controls it.\n* `options`: An integer that defines the behavior of the currency.\n* `currencies`: An array of currencies that can be converted to and from the new currency.\n* `conversions`: An array of conversion rates between the new currency and the currencies listed in `currencies`.\n* `minpreconversion`: The minimum amount of the new currency that can be converted from the base currency.\n* `preallocations`: An array of preallocations of the new currency to specific IDs.\n\nIn this example, the currency \"gold\" is defined with a conversion rate of 0.01 to VRSCTEST, and a minimum preconversion amount of 1000. The `preallocations` section allocates 50,000,000 units of the new currency to the ID \"mike@\".\n\nNote that this is just an example, and the actual definition of the currency will depend on the specific use case and requirements. Additionally, creating a currency that is widely trusted and auditable will require additional steps and considerations, such as establishing a secure and transparent storage system for the underlying assets.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n ```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the c",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d36624c1-2f29-4331-aa21-a567abc2f14f"
]