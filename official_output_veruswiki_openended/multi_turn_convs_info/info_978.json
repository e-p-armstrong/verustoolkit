[
    [
        [
            "What is the `registernamecommitment` command in Verus, and what are its arguments and results?",
            "The `registernamecommitment` command in Verus is used to create a name commitment, which is a preliminary step to registering a unique name on the Verus network. This command is not a registration itself, but rather a commitment to register a name in the future.\n\nThe command takes several arguments:\n\n* `name`: a required string argument that specifies the unique name to commit to.\n* `controladdress`: a required address argument that specifies the address that will control this commitment.\n* `referralidentity`: an optional identity argument that specifies a friendly name or identity address that is provided as a referral mechanism and to lower network costs of the ID.\n* `parentnameorid-pbaasonly`: an optional currency argument that specifies a friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules and pricing.\n* `sourceoffunds`: an optional address or ID argument that specifies the source of funds for the commitment. If not specified, a transparent wildcard `\"*\"` is used.\n\nThe result of the `registernamecommitment` command is an object that contains the following information:\n\n* `txid`: a hexadecimal string that represents the transaction ID of the commitment.\n* `namereservation`: an object that contains information about the name reservation, including:\n\t+ `name`: a string that represents the unique name in this commitment.\n\t+ `salt`: a hexadecimal string that represents the salt used to hide the commitment.\n\t+ `referral`: a base58-encoded string that represents the address of the referring identity if there is one.\n\t+ `parent`: a string that represents the name of the parent if not Verus or Verus test.\n\t+ `nameid`: a base58-encoded string that represents the identity address for this identity if it is created.\n\nThe `registernamecommitment` command can be used through the Verus command-line interface or through an HTTP RPC call using `curl`.",
            "#### Arguments:\n```\n\"name\"              (string, required) the unique name to commit to. creating a name commitment is not a\n                            registration, and if one is created for a name that exists, it may\n                            succeed, but will never be able to be used.\n\"controladdress\"         (address, required) address that will control this commitment\n\"referralidentity\"        (identity, optional)friendly name or identity address that is provided as a referral mechanism and to lower network cost of the ID\n\"parentnameorid-pbaasonly\"    (currency, optional)friendly name or currency i-address, which will be the parent of this ID and dictate issuance rules & pricing\n\"sourceoffunds\"         (addressorid, optional) optional address to use for source of funds. if not specified, transparent wildcard \"*\" is used\n```\n#### Result: obj\n```json\n{\n  \"txid\" : \"hexid\"\n  \"namereservation\" :\n  {\n    \"name\"  : \"namestr\",   (string) the unique name in this commitment\n    \"salt\"  : \"hexstr\",   (hex)  salt used to hide the commitment\n    \"referral\": \"identityaddress\", (base58) address of the referring identity if there is one\n    \"parent\" : \"namestr\",  (string) name of the parent if not Verus or Verus test\n    \"nameid\" : \"address\",  (base58) identity address for this identity if it is created\n  }\n}\n```\nExamples:\n```bash\n> verus registernamecommitment \"name\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"registernamecommitment\", \"params\": [\"name\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "110c8259-2a5e-43fd-bde4-b740e83a7973"
]