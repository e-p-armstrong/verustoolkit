[
    [
        [
            "How do I use Verus to create and verify digital signatures for files and messages, and what are the different ways to do so?",
            "Verus provides a way to create and verify digital signatures for files and messages using its command line interface or JSON RPC. This is useful for ensuring the authenticity and integrity of data.\n\n**Creating a Digital Signature:**\nTo create a digital signature, you can use the `signfile` or `signmessage` commands, depending on whether you want to sign a file or a message. The format for these commands is:\n```\nverus signfile \"address or identity\" \"filepath/filename\"\n```\nor\n```\nverus signmessage \"address or identity\" \"message\"\n```\nReplace `\"address or identity\"` with the Verus address or identity that will be used to sign the data, and `\"filepath/filename\"` or `\"message\"` with the file or message you want to sign.\n\n**Verifying a Digital Signature:**\nTo verify a digital signature, you can use the `verifyfile` or `verifyhash` commands, depending on whether you want to verify a file or a message. The format for these commands is:\n```\nverus verifyfile \"address or identity\" \"signature\" \"filepath/filename\"\n```\nor\n```\nverus verifyhash \"address or identity\" \"signature\" \"hexhash\"\n```\nReplace `\"address or identity\"` with the Verus address or identity that was used to sign the data, `\"signature\"` with the signature provided by the signer in base 64 encoding, and `\"filepath/filename\"` or `\"hexhash\"` with the file or hash of the message that was signed.\n\nYou can also use JSON RPC to verify a digital signature by sending a request to the Verus server. The format for this request is:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifyfile\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nor\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifyhash\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"hexhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nThe result of the verification will be `true` if the signature is valid, or `false` if it is not.\n\n**Additional Options:**\nYou can also specify an additional argument `checklatest` when verifying a digital signature. If set to `true`, this argument checks the signature validity based on the latest identity. If set to `false` (default), it determines the validity of the signing height stored in the signature.",
            "Examples:\nCreate the signature\n```bash\n> verus signfile \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"filepath/filename\"\n```\nVerify the signature\n```bash\n> verus verifyfile \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"filepath/filename\"\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifyfile\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifyhash \"address or identity\" \"signature\" \"hexhash\" \"checklatest\"`\nVerify a signed message#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the data.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signmessage/signfile).\n3. \"hexhash\"      (string, required) Hash of the message or file that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.Examples:Create the signature\n```bash\n> verus signfile \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"filepath/filename\"\nor\n> verus signmessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"my message\"\n```\nVerify the signature\n```bash\n> verus verifyhash \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"hexhash\"\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifyhash\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"hexhash\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `verifymessage \"address or identity\" \"signature\" \"message\" \"checklatest\"`\nVerify a signed message",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "962b0095-7411-4202-b457-76e3a54e1265"
]