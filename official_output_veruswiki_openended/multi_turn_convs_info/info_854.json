[
    [
        [
            "How do private, internal blockchains work on the Verus network, and what features are available for managing identities and conversion queries?",
            "The Verus network allows for the creation of private, internal blockchains that can easily be set up and bridged with public currencies. These private blockchains can operate independently, yet still interoperate with the Verus network, and can include all features and currencies of the public chain. There is no limit to the number of blockchains that can operate simultaneously on the Verus network. While there is some overhead for cross-notarization, the Verus network's fractal model enables an unlimited number of simultaneously operating, interoperable blockchains.\n\nIn addition to private blockchains, Verus also offers features for managing identities, such as locking and unlocking IDs. There are two types of locks: time locks and time delays. Time locks define the unlock height of an identity, while time delays define how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. Revoking an identity will clear its locked status, regardless of time delay or unlock height. However, a locked identity cannot revoke itself.\n\nVerus also provides a `getcurrencyconverters` API for querying conversion possibilities. This API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, you can use the command `verus -chain=VRSCTEST getcurrencyconverters btc eth` to retrieve all currencies that have BTC/ETH markets at or above the liquidity threshold.",
            " private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "50d2918b-0da3-4559-b87c-0a643f8dbfd3"
]