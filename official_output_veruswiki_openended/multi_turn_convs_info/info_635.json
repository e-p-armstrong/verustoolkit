[
    [
        [
            "How do you reset a testnet, export an ID to a PBaaS chain, and sign transactions from multi-signature IDs in Verus?",
            "There are three main procedures described here: resetting a testnet, exporting an ID to a PBaaS chain, and signing transactions from multi-signature IDs.\n\n**Resetting a Testnet:**\nTo reset a testnet in Verus, follow these steps:\n\n1. **Close Verus:** Make sure Verus is not running, and no testnet daemon is active.\n2. **Delete Directories:** Delete the following directories, depending on your operating system:\n\t* Linux: `~/.Komodo/vrsctest` and `~/.verustest`\n\t* Mac OS: `~/Library/Application Support/Komodo/VRSC` and `~/Library/Application Support/VerusTest`\n\t* Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\` and `%AppData%\\Roaming\\VerusTest` (or `%AppData%\\Komodo\\VRSC\\` and `%AppData%\\Roaming\\VerusTest`)\n3. **Restart Testnet Daemon:** Restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native).\n\n**Exporting an ID to a PBaaS Chain:**\nTo export an ID to a PBaaS chain, use the following command:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\nReplace `IDNAME@` with the ID you want to export, `PBaaSChainName` with the name of the PBaaS chain, and adjust the `amount` and `currency` as needed.\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs, follow these steps:\n\n1. **Create Transaction:** Create a transaction using the `sendcurrency` command:\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n```\nReplace `<multi-signature-ID>@` with the multi-signature ID, `<destination_address>` with the destination address, and `<transaction_amount>` with the transaction amount.\n\n2. **Get Raw Transaction Data:** Get the raw transaction data using the `z_getoperationstatus` command:\n```\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nReplace `<operation_id_returned_by_sendcurrency>` with the operation ID returned by the `sendcurrency` command.\n\n3. **Sign Raw Transaction:** Take the raw hex transaction data to each additional wallet(s) containing the additional signing addresses/IDs and sign it using the `signrawtransaction` command:\n```\nverus signrawtransaction <raw_hex_transaction>\n```\nReplace `<raw_hex_transaction>` with the raw hex transaction data.\n\n4. **Broadcast Signed Transaction:** After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\nReplace `<raw_hex_signed_transaction>` with the raw hex signed transaction data.",
            "To reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/VRSC`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\VRSC\\`, `%AppData%\\Roaming\\VerusTest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "5a158d6b-8c64-40f0-8fa9-db79a9e2d9ab"
]