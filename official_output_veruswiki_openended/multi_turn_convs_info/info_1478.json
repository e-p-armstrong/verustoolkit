[
    [
        [
            "How do you manage identity locking and unlocking in Verus, and what is the purpose of the `getcurrencyconverters` API?",
            "In Verus, identity management is a crucial aspect of the blockchain protocol. Specifically, locking and unlocking IDs are essential features that provide an additional layer of security and control over identity management.\n\n**Locking and Unlocking IDs:**\nVerus allows you to lock and unlock IDs using the `updateidentity` command. There are two types of locks: **Time Lock** and **Time Delay**.\n\n**Time Lock:**\nThe Time Lock feature enables you to set an unlock height for an ID, which means that the ID will remain locked until the specified block height is reached. To set a Time Lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Time Delay:**\nThe Time Delay feature allows you to set a delay for an ID's unlock when the flags are set back to an unlocked state. This means that even if the flags are reset, the ID will remain locked for a specified number of blocks. To set a Time Delay, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Revoking an Identity:**\nIt's essential to note that revoking an identity will clear its locked status, regardless of the time delay or unlock height. Additionally, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nThe `getcurrencyconverters` API is a powerful tool that retrieves all currencies that meet specific liquidity and reserve ratio requirements. This API is useful for finding currencies that have sufficient liquidity to facilitate conversions.\n\n**Example:**\nFor instance, if you want to find all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return a list of currencies that meet the specified criteria, allowing you to make informed decisions about conversions and liquidity.\n\nIn summary, Verus provides a robust identity management system that includes locking and unlocking features, as well as a powerful API for conversion queries. These features enable users to have greater control over their identities and make informed decisions about conversions and liquidity.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c133c43f-f626-4442-96ed-9f08d22770af"
]