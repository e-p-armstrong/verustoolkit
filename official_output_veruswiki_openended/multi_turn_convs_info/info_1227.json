[
    [
        [
            "How do you define a new currency called \"mycoin\" on the VRSCTEST chain, and how does the controller of the chain ID mint new coins?",
            "To define a new currency called \"mycoin\" on the VRSCTEST chain, you can use the `definecurrency` command with Verus. The command you would use is:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nThis command defines a new currency named \"mycoin\" on the VRSCTEST chain. Some important notes about this configuration:\n\n1. `proofprotocol` being set to 2 means that it's set to PROOF_CHAINID. This means that the controller of the chain ID can mint new coins.\n2. `options` is a configurable integer, in this case set to 97.\n3. `currencies` lists which tokens can be converted to mycoin.\n4. `\"minpreconversion\": [10000,5.1298]` defines the minimum amounts of VRSCTEST and GOLD needed to convert to mycoin, respectively.\n5. `initialsupply` sets the initial supply of mycoin to 20,000 units.\n\nAfter defining the currency, the controller of the chain ID can mint new coins using the `sendcurrency` command. The command to mint new coins would be:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nThis command mints 10,000 new units of mycoin and sends them to the address \"mike@\".\n\nFinally, to launch the testnet, you would run the following command:\n\n```\n./verusd -chain=VRSCTEST\n```\n\nThis command starts the Verus daemon on the VRSCTEST chain, allowing you to interact with the chain and perform actions such as defining currencies and minting new coins.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```**Launching the testnet:**\n```\n./verusd -chain=VRSCTEST\n```\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "dcd8ece4-ef5d-4af7-8198-3faee07bc097"
]