[
    [
        [
            "What are the different options for notarization protocols and their implications when defining a currency or chain on the Verus platform?",
            "When defining a currency or chain on the Verus platform, you have several options for notarization protocols, which determine how the currency or chain is validated and maintained. Here's a breakdown of the different options:\n\n**PROOF_PBAASMMR (1):** This notarization protocol uses Verus's proprietary MMR (Matrix Mortgage Recorder) proof, which does not require notaries. This protocol is ideal for chains or currencies that want to operate independently without relying on external notaries.\n\n**PROOF_CHAINID (2):** With this protocol, the chain ID is the sole notary for proof, and no evidence is required. This means that whoever controls the chain ID has the authority to mint or burn tokens, as well as change weights. This protocol is suitable for chains or currencies that want to maintain control over their validation process.\n\n**PROOF_ETHNOTARIZATION (3):** This protocol uses Ethereum notarization and PATRICIA TRIE proof. It's a more complex protocol that requires a deep understanding of C++, JavaScript, and Solidity development. This protocol is not recommended for those without extensive experience in these areas.\n\nIn addition to notarization protocols, you can also configure other options when defining a currency or chain on Verus, including:\n\n* **Expiry height:** The block height at which the transaction expires, with a default value of the current height plus 20.\n* **Start block:** The block height at which the VRSC block must be notarized into block 1 of the PBaaS chain, with a default value of the current height plus 100.\n* **End block:** The block height at which the chain or currency is intended to end its life, with a default value of 0 (no end).\n* **Currencies:** A list of reserve currencies backing the chain in equal amounts.\n* **Weights:** A list of the weight of each reserve currency in a fractional currency.\n* **Conversions:** A list of pre-launch conversion ratio overrides, which must be the same size as the currencies list.\n* **Min pre-conversion:** A list of the minimum amounts in each currency required to launch.\n* **Max pre-conversion:** A list of the maximum amounts in each currency allowed.\n* **Initial contributions:** A list of initial contributions in each currency.\n* **Pre-launch discount:** A value that applies a discount to fractional reserve currencies.\n\nThese options provide a high degree of customization and flexibility when defining currencies or chains on the Verus platform.",
            "      can mint/burn & change weights\n                         3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without\n                                       full understanding + C++, JavaScript & Solidity dev(s))\n \"notarizationprotocol\" : n,   (int, optional) if 2, currency can be minted by whoever controls the ID\n                         1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required\n                         2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required\n                         3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof\n \"expiryheight\" : n,       (int, optional) block height at which the transaction expires, default: curheight + 20\n \"startblock\"  : n,       (int, optional) VRSC block must be notarized into block 1 of PBaaS chain, default curheight + 100\n \"endblock\"   : n,       (int, optional) chain or currency intended to end life after this height, 0 = no end\n \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies backing this chain in equal amounts\n \"weights\"    : \"[\"xx.xx\",..]\",(list, optional) the weight of each reserve currency in a fractional currency\n \"conversions\"  : \"[\"xx.xx\",..]\",(list, optional) if present, must be same size as currencies. pre-launch conversion ratio overrides\n \"minpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) must be same size as currencies. minimum in each currency to launch\n \"maxpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) maximum in each currency allowed\n \"initialcontributions\" : \"[\"xx.xx\",..]\", (list, optional) initial contribution in each currency\n \"prelaunchdiscount\" : \"xx.xx\"  (value, optional) for fractional reserve currencies less",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "f536b99f-aa89-49e5-83de-5881ea22f50c"
]