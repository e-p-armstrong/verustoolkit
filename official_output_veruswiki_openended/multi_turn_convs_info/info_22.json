[
    [
        [
            "How does Verus support private, internal blockchains, and what features are available for managing identity locks and conversion queries on the Verus network?",
            "Verus is a blockchain protocol that allows for the creation of private, internal blockchains, which are easy to set up and bridge with public currencies. These private blockchains can operate independently within an organization, with all the features and currencies of the public chain, but without the public access. There is no limit to the number of blockchains that can operate and interoperate on the Verus network, thanks to its fractal model.\n\nOne of the key features of Verus is the ability to lock and unlock identities on the network. This can be done using the `setidentitytimelock` command, which allows users to specify a lock duration or a specific block height at which the identity will be unlocked. For example, to set a time lock on an identity, you can use the following command:\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}'\n```\nAdditionally, users can set a time delay for unlocking an identity using the `setunlockdelay` parameter. This will delay the unlock of the identity by a specified number of blocks when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}'\n```\nIt's important to note that revoking an identity will clear its locked status, regardless of any time delay or unlock height. Also, a locked identity cannot revoke itself.\n\nVerus also provides a feature for conversion queries, which allows users to retrieve information about currency converters on the network. The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, to retrieve all currencies that have a BTC/ETH market at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return a list of currencies that meet the specified criteria, allowing users to easily find and access currency converters on the Verus network.",
            " well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n#### Locking and Unlocking IDs\n- **Time Lock:**\n The unlockatblock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}'\n```\n- **Time Delay:**\n The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "b48ecd4d-6efc-4b5a-942e-51d4bbf37893"
]