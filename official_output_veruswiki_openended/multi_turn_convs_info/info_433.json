[
    [
        [
            "How do you manage Verus IDs using time locks, time delays, and revocation, and how do you use the `getcurrencyconverters` API to retrieve currency converters?",
            "In the Verus ecosystem, IDs can be managed using various features to control their behavior and accessibility. Here's an overview of how to use time locks, time delays, and revocation to manage IDs, as well as how to utilize the `getcurrencyconverters` API to retrieve currency converters.\n\n**Time Locks:**\nA time lock is a feature that allows you to set a specific block height at which an ID will be unlocked. To update an ID with a time lock, you can use the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block height>` with the desired block height at which the ID should be unlocked.\n\n**Time Delays:**\nA time delay is similar to a time lock, but it defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. You can update an ID with a time delay using the following command:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nReplace `<Unlock block delay>` with the desired number of blocks to delay the ID's unlock.\n\n**Revoking an ID:**\nRevoking an ID will clear its locked status, regardless of any time delay or unlock height set. However, a locked ID cannot revoke itself.\n\n**Conversion Queries:**\nThe `getcurrencyconverters` API is used to retrieve all currencies that meet specific liquidity and reserve ratio requirements. You can use this API to find currency converters that meet your needs. For example, to find all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return a list of currencies that meet the specified requirements.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n## Locking and Unlocking IDs\n- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "94931129-9d19-4e30-9636-a59625c33099"
]