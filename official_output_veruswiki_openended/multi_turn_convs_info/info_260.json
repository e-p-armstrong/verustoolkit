[
    [
        [
            "What are the necessary steps to create a tokenized ID control (next generation NFT) and an identity with a fractional currency as its parent in Verus?",
            "To create a tokenized ID control (next generation NFT) and an identity with a fractional currency as its parent in Verus, you need to follow these steps:\n\n**Step 1: Define the Currency**\nTo create a tokenized ID control, you need to define a currency with specific flags and properties. The flags `OPTION_NFT_TOKEN` and `OPTION_TOKEN` are required, and the maximum supply should be set to 1 satoshi. You can either pre-allocate or pre-convert the token. If it's pre-allocated, the maximum pre-conversion must be 0.\n\nHere's an example command to define the currency:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\n\n**Step 2: Register the Name Commitment**\nTo create an identity with a fractional currency as its parent, you need to register a name commitment using the `registernamecommitment` command. This command now takes two additional positional arguments to specify a currency parent and a funding address.\n\nHere's an example command to register the name commitment:\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\n**Step 3: Register the Identity**\nFinally, you need to register the identity using the `registeridentity` command. You need to specify the parent currency in the identity definition and provide the necessary parameters, such as `returntx`, `feeoffer`, and `sourceoffunds`.\n\nHere's an example command to register the identity:\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\n\nBy following these steps, you can create a tokenized ID control (next generation NFT) and an identity with a fractional currency as its parent in Verus.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "809348a2-0ccf-4caf-86f0-03ec8d8fe08b"
]