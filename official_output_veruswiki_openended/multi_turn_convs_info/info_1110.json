[
    [
        [
            "What is the purpose of the `getexports` command in Verus, and how does it return information about transactions on a specific chain?",
            "The `getexports` command in Verus is used to retrieve information about transactions on a specific chain. When you run the command with a chain name as a parameter, it returns a JSON array of objects that contain details about each export transaction on that chain.\n\nThe returned JSON objects have several properties that provide information about the transaction:\n\n* `blockheight`: The block height at which the transaction was exported.\n* `exportid`: The transaction ID of the export.\n* `description`: An object that contains additional information about the export, including:\n\t+ `version`: The version of the chain definition.\n\t+ `exportcurrencyid`: The i-address of the currency ID being exported.\n\t+ `numinputs`: The number of inputs in the export transaction.\n\t+ `totalamounts`: An object that lists the total value of the export for each currency, with the currency ID as the key and the total value as the value.\n\t+ `totalfees`: An object that lists the total fees for the export for each currency, with the currency ID as the key and the total fees as the value.\n* `transfers`: An array of objects that contain information about each transfer in the export transaction, including:\n\t+ `version`: The version of the chain definition.\n\t+ `currencyid`: The i-address of the currency ID being transferred.\n\t+ `value`: The value of the transfer.\n\t+ `flags`: The flags for the currency.\n\t+ `preconvert`: A boolean indicating whether the transaction is a preconversion.\n\t+ `fees`: The fees for the transfer.\n\t+ `destinationcurrencyid`: The i-address of the destination currency ID.\n\t+ `destination`: The address of the transfer.\n\nYou can use the `getexports` command in the Verus CLI or through a JSON-RPC request using `curl`. For example, you can run `verus getexports \"chainname\"` in the CLI or use the following `curl` command:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nThis command returns a JSON array of objects that contain information about each export transaction on the specified chain.",
            "```\n#### Result:\n```json\n[\n {\n  \"blockheight\": n,          (numeric) block height\n  \"exportid\": \"hash\",         (hexstring) transaction ID\n  \"description\": {\n   \"version\": n,           (int) version of this chain definition\n   \"exportcurrencyid\": \"xxxx\",    (text) i-address of the currency ID\n   \"numinputs\": n,          (numeric) Amount of inputs in this export\n   \"totalamounts\": {\n    \"xxxx\": xxx.xxxxxxxx,      (text) i-address of the currency ID, (numeric) the total value of the export\n                     of the currency\n    ....\n   },\n   \"totalfees\": {\n    \"xxxx\": xxx.xxxxxxxx,      (text) i-address of the currency ID, (numeric) the total fees for the export\n                     of the currency\n    ....\n   }\n  },\n  \"transfers\": [\n   {\n    \"version\": n,          (int) version of this chain definition\n    \"currencyid\": \"xxxx\",      (text) i-address of the currency ID\n    \"value\": n,           (numeric) the value this transaction\n    \"flags\": n,           (hex) flags for the currency\n    \"preconvert\": true|false,    (boolean) Shows whether the transaction is a preconversion\n    \"fees\": xxx.xxxxxxxx,      (numeric) the fees for this transaction\n    \"destinationcurrencyid\": \"xxxx\", (text) i-address of the currency ID\n    \"destination\": \"xxxx\"      (text) address of the transaction\n   },\n   ....\n  ]\n },\n {},\n ...\n]\n```\nExamples:\n```bash\n> verus getexports \"chainname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getexports\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "a98bdbe4-b51c-41ec-8e9a-6379da38efc3"
]