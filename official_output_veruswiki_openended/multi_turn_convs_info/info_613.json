[
    [
        [
            "How do I define a new coin and a PBaaS blockchain using the Verus command line tool, and what are the key properties and options that I can configure when defining them?",
            "To define a new coin and a PBaaS blockchain using the Verus command line tool, you can use the `definecurrency` command. Here's a breakdown of the process and the key properties and options you can configure.\n\n**Defining a New Coin:**\nTo define a new coin, you need to specify its properties using a JSON object. For example, let's define a new coin called \"mycoin\":\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nHere's what each property means:\n\n* `name`: The name of the new coin.\n* `options`: A configurable integer that determines the behavior of the coin.\n* `proofprotocol`: The proof protocol used to secure the coin. In this case, we set it to 2, which means that the controller of the chain ID can mint new coins.\n* `currencies`: The currencies that can be converted to the new coin.\n* `minpreconversion`: The minimum amounts of each currency required to convert to the new coin.\n* `initialsupply`: The initial supply of the new coin.\n\n**Defining a PBaaS Blockchain:**\nTo define a PBaaS blockchain, you need to specify its properties using a JSON object. Here's an example:\n```json\n{\n  \"name\": \"PBaaSChain\",\n  \"options\": 330,\n  \"currencies\": [\n    \"VRSCTEST\"\n  ],\n  \"conversions\": [\n    1\n  ],\n  \"eras\": [\n    {\n      \"reward\": 1200000000,\n      \"decay\": 0,\n      \"halving\": 0,\n      \"eraend\": 0\n    }\n  ],\n  \"notaries\": [\n    \"Notary1@\",\n    \"Notary2@\",\n    \"Notary3@\"\n  ],\n  \"minnotariesconfirm\": 2,\n  \"nodes\": [\n    {\n      \"networkaddress\": \"111.111.111.111:10000\",\n      \"nodeidentity\": \"Node1@\"\n    },\n    {\n      \"networkaddress\": \"111.111.111.112:10000\",\n      \"nodeidentity\": \"Node2@\"\n    }\n  ],\n  \"gatewayconvertername\": \"Bridge\",\n  \"gatewayconverterissuance\": 1000000\n}\n```\nHere's what each property means:\n\n* `name`: The name of the PBaaS blockchain.\n* `options`: A configurable integer that determines the behavior of the blockchain.\n* `currencies`: The currencies that can be used on the blockchain.\n* `conversions`: The conversion ratios between the currencies.\n* `eras`: The block reward, reward decay, halving, and end of each era in the blockchain's lifecycle.\n* `notaries`: The VerusIDs that will serve as notaries on the blockchain.\n* `minnotariesconfirm`: The minimum number of notaries required to confirm a block.\n* `nodes`: The network addresses and identities of the nodes on the blockchain.\n* `gatewayconvertername`: The name of the bridge that connects the blockchain to other chains.\n* `gatewayconverterissuance`: The initial supply of the bridge's native token.\n\n**Overridable Defaults:**\nThe bridge definition has overridable defaults that can be configured using a separate JSON object. For example:\n```json\n{\n  \"currencies\": [\n    \"VRSCTEST\",\n    \"PBaaSChain\",\n    \"USD\"\n  ],\n  \"initialcontributions\": [\n    380228.12033701,\n    0,\n    1000000\n  ],\n  \"initialsupply\": 3000000\n}\n```\nThese defaults can be overridden when defining the PBaaS blockchain.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9cd98cf2-e34f-4e5d-a8a7-25d85eac3d85"
]