[
    [
        [
            "How can I get information about my Verus wallet, and what details will I receive about my wallet?",
            "To get information about your Verus wallet, you can use the `getwalletinfo` command. This command can be executed in two ways: either by running `verus getwalletinfo` in the command line, or by sending a JSON-RPC request to the Verus daemon using `curl`.\n\nWhen you run `getwalletinfo`, Verus will return a JSON object with various details about your wallet. This object will contain the following information:\n\n* `walletversion`: The version of your Verus wallet.\n* `balance`: The total confirmed balance of your wallet in VRSC.\n* `reserve_balance`: The total confirmed reserve balance of your wallet in VRSC, applicable to PBaaS reserve chains.\n* `unconfirmed_balance`: The total unconfirmed balance of your wallet in VRSC.\n* `unconfirmed_reserve_balance`: The total unconfirmed reserve balance of your wallet in VRSC.\n* `immature_balance`: The total immature balance of your wallet in VRSC.\n* `immature_reserve_balance`: The total immature reserve balance of your wallet in VRSC.\n* `eligible_staking_balance`: The eligible staking balance in VRSC.\n* `reserve_balance`: A JSON object with currencies and their corresponding balances.\n* `txcount`: The total number of transactions in your wallet.\n* `keypoololdest`: The timestamp of the oldest pre-generated key in the key pool.\n* `keypoolsize`: The number of new keys that are pre-generated.\n* `unlocked_until`: The timestamp in seconds since the epoch (midnight Jan 1 1970 GMT) that your wallet is unlocked for transfers, or 0 if your wallet is locked.\n* `paytxfee`: The transaction fee configuration, set in VRSC/kB.\n* `seedfp`: The BLAKE2b-256 hash of the HD seed.\n\nThis information provides a comprehensive overview of your Verus wallet, including its balance, transaction history, and configuration settings.",
            "#### Result:\n```json\n{\n \"walletversion\": xxxxx,   (numeric) the wallet version\n \"balance\": xxxxxxx,     (numeric) the total confirmed balance of the wallet in VRSC\n \"reserve_balance\": xxxxxxx, (numeric) for PBaaS reserve chains, the total confirmed reserve balance of the wallet in VRSC\n \"unconfirmed_balance\": xxx, (numeric) the total unconfirmed balance of the wallet in VRSC\n \"unconfirmed_reserve_balance\": xxx, (numeric) total unconfirmed reserve balance of the wallet in VRSC\n \"immature_balance\": xxxxxx, (numeric) the total immature balance of the wallet in VRSC\n \"immature_reserve_balance\": xxxxxx, (numeric) total immature reserve balance of the wallet in VRSC\n \"eligible_staking_balance\": xxxxxx, (numeric) eligible staking balance in VRSC\n \"reserve_balance\": {\"currency\":XXXXXX,...} (json) json with currencies and the balances\n \"txcount\": xxxxxxx,     (numeric) the total number of transactions in the wallet\n \"keypoololdest\": xxxxxx,  (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\n \"keypoolsize\": xxxx,    (numeric) how many new keys are pre-generated\n \"unlocked_until\": ttt,   (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\n \"paytxfee\": x.xxxx,     (numeric) the transaction fee configuration, set in VRSC/kB\n \"seedfp\": \"uint256\",    (string) the BLAKE2b-256 hash of the HD seed\n}\n```Examples:\n```bash\n> verus getwalletinfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getwalletinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `importaddress \"address\" ( \"label\" rescan )`\nAdds an address or script (in hex) that can be watched as if it were in your wallet but cannot be used to spend.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e7d4922b-b973-41df-9375-f4c66006049a"
]