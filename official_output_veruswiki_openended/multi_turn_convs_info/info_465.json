[
    [
        [
            "What happens if I miss the fork for a new version of Verus, and how can I recover? Additionally, how do I export an ID to a PBaaS chain, sign transactions from multi-signature IDs, and utilize the new Verus Multicurrency, Multichain, DeFi Enabled Testnet?",
            "Recovering from a missed fork, exporting IDs to PBaaS chains, signing transactions from multi-signature IDs, and utilizing the new Verus Multicurrency, Multichain, DeFi Enabled Testnet are all important aspects of working with Verus.\n\n**Recovering from a Missed Fork:**\nIf you miss the fork for a new version of Verus at the specified time, you can get back on the correct chain by stopping Verus and deleting everything except your `wallet.dat` file in your data directory. The location of the data directory varies depending on your operating system:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`\n\n**Exporting an ID to a PBaaS Chain:**\nTo export an ID to a PBaaS chain, you can use the `sendcurrency` command with the `exportto` and `exportid` options. For example:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n```\n\n**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs, you need to create a transaction, get the raw transaction data, sign it with each additional wallet containing the additional signing addresses/IDs, and then broadcast the signed transaction on the network. Here's an example of how to do this:\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by `z_getoperationstatus` to each additional wallet(s) containing the additional signing addresses/IDs:\n```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\n\n**New Verus Multicurrency, Multichain, DeFi Enabled Testnet:**\nThe new Verus Multicurrency, Multichain, DeFi Enabled Testnet offers a user-friendly GUI for basic operations and a command line interface for more advanced functions. With this testnet, you can create new identities, currencies, liquidity pools, and blockchains without any programming knowledge. You can send currencies worldwide on the same chain or across blockchains with ease, and even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "If you miss the fork for this version at the above time you can get back on the correct chain by stopping Verus and deleting deleting everything other than your wallet.dat file in your data directory at:\n- Linux: `~/.Komodo/vrsctest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest` or `%AppData%\\Komodo\\vrsctest`## Exporting an ID to a PBaaS chain\n  ```\n  verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"IDNAME@\",\"exportto\":\"PBaaSChainName\",\"exportid\":\"true\",\"amount\":100,\"currency\":\"vrsctest\"}]'\n  ```## Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n  ```\n  verus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n  verus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n  ```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n  ```\n  verus signrawtransaction <raw_hex_transaction>\n  ```\nAfter the last necessary signature is applied, broadcast on the network using:\n  ```\n  verus sendrawtransaction <raw_hex_signed_transaction>\n  ```## New Verus Multicurrency, Multichain, DeFi Enabled Testnet\nWith an easy GUI for basic operations or command line for more advanced functions. Without any programming, you can now create new identities, currencies, liquidity pools, and blockchains for your business, your government, your projects, a worthy cause, your family, or your next decentralized application suite. Send currencies worldwide on the same chain, or across blockchains with ease. Even convert currencies to others on the network without an exchange by sending to yourself and converting along the way.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e91e1f8b-1ebd-40f8-bcf9-fc6b6a0eaaed"
]