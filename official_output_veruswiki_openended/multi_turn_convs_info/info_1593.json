[
    [
        [
            "How can I create and verify a digital signature using the Verus platform?",
            "Verus provides a way to create and verify digital signatures using its `signmessage` and `verifymessage` commands. Here's a step-by-step guide on how to do it:\n\n**Creating a Digital Signature:**\nTo create a digital signature, you need to use the `signmessage` command. The command takes two arguments: the transparent address or identity that will sign the message, and the message itself. Here's an example:\n```bash\n> verus signmessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"my message\"\n```\nThis command will generate a signature in base 64 encoding.\n\n**Verifying a Digital Signature:**\nTo verify a digital signature, you need to use the `verifymessage` command. The command takes three arguments: the transparent address or identity that signed the message, the signature itself, and the original message. Here's an example:\n```bash\n> verus verifymessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"my message\"\n```\nThis command will return `true` if the signature is valid and `false` otherwise.\n\n**Using JSON RPC:**\nYou can also use JSON RPC to verify a digital signature. Here's an example:\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifymessage\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n**Advanced Verification Options:**\nVerus also provides an advanced `verifysignature` command that allows you to specify additional parameters for verification. These parameters include:\n\n* `prefixstring`: an extra string that is hashed during signature creation and must be supplied for verification\n* `filename`, `message`, `messagehex`, `messagebase64`, or `datahash`: the data or hash of data that was signed\n* `vdxfkeys`: an array of vdxfkeys or ID i-addresses\n* `vdxfkeynames`: an array of vdxfkey names\n\nHere's an example of how to use the `verifysignature` command:\n```json\n{\n  \"address\": \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\",\n  \"prefixstring\": \"my prefix\",\n  \"message\": \"my message\",\n  \"vdxfkeys\": [\"vdxfkey1\", \"vdxfkey2\"],\n  \"vdxfkeynames\": [\"vdxfkeyname1\", \"vdxfkeyname2\"]\n}\n```\nNote that this command allows for more advanced verification options, such as specifying the prefix string and vdxfkeys used during signature creation.",
            "#### Arguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the message.\n2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signmessage).\n3. \"message\"      (string, required) The message that was signed.\n3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result:\ntrue|false  (boolean) If the signature is verified or not.Examples:Create the signature\n```bash\n> verus signmessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"my message\"\n```\nVerify the signature\n```bash\n> verus verifymessage \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"my message\"\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifymessage\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `Verifysignature 'json'`\nChecks to see if the signature is valid and returns an error for invalid\n#### Arguments\n```json\n{\n \"address\":\"t-addr or identity\"                (string, required) The transparent address or identity to verify against the signature\n                                (t-address checks on simple signature w/hash and prefix, nothing else)\n \"prefixstring\":\"extra string that is hashed during signature and must be supplied for verification\",\n \"filename\" | \"message\" | \"messagehex\" | \"messagebase64\" | \"datahash\" (string, required) Data or hash of data signed\n \"vdxfkeys\":[\"vdxfkey\", ...],                 (array, optional) Array of vdxfkeys or ID i-addresses\n \"vdxfkeynames\":[\"vdxfkeyname\", ...],             (array, optional) Array of ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "37be5c58-2969-4f3b-a6d8-1846ca671090"
]