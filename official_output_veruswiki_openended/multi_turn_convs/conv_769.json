[
    "## Conversation that answers the provided questions:\n**User:**\nI've got a few more questions about VerusIDs. What are the features of VerusIDs in terms of recoverability and privacy, and how does VerusHash 2.1 algorithm impact the performance of FPGAs and CPUs in the Verus network?\n\n**AI Assistant:**\nI'd be happy to explain those features in more detail.\n\nVerusIDs have two important features: recoverability and privacy.\n\n**Recoverability:** Each VerusID includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and the recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority. This means that if an ID is compromised or lost, the recovery authority can step in and restore the ID to its original state.\n\n**Privacy:** Each VerusID contains a set of zero-knowledge private addresses, which can be used for messaging, financial, or voting endpoints. Additionally, each ID has a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations. This means that VerusIDs can be used to store sensitive information, such as identity documents, in a secure and private manner.\n\nNow, let's talk about VerusHash 2.1. VerusHash 2.0 was designed to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and CPUs (Central Processing Units) on the Verus network. FPGAs were not blocked completely, but the algorithm was developed to prevent them from dominating the network. VerusHash 2.1 introduces an adjustment to this equalization technology, which is expected to tilt the balance slightly more in favor of CPUs, while still allowing FPGAs to operate on the hash algorithm with minor modifications. This means that CPUs will have a slightly better performance compared to FPGAs, but FPGAs will still be able to participate in the network. The Verus developers have made the new algorithm available to FPGA manufacturers, so that everyone will have an opportunity to mine and stake on the network.\n\nIn summary, VerusIDs offer recoverability and privacy features, and VerusHash 2.1 algorithm is designed to equalize the performance of FPGAs and CPUs on the Verus network, promoting a more balanced and fair ecosystem.\n\nDo you have any further questions about VerusIDs, recoverability, privacy, or VerusHash 2.1?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the features of VerusIDs in terms of recoverability and privacy, and how does VerusHash 2.1 algorithm impact the performance of FPGAs and CPUs in the Verus network?",
            "VerusIDs have two important features: recoverability and privacy.\n\n**Recoverability:** Each VerusID includes a separate recovery authority, which defaults to the ID itself. This recovery authority can recover the identity by redefining its primary state and the recovery state, but it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority. This means that if an ID is compromised or lost, the recovery authority can step in and restore the ID to its original state.\n\n**Privacy:** Each VerusID contains a set of zero-knowledge private addresses, which can be used for messaging, financial, or voting endpoints. Additionally, each ID has a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations. This means that VerusIDs can be used to store sensitive information, such as identity documents, in a secure and private manner.\n\nNow, let's talk about VerusHash 2.1. VerusHash 2.0 was designed to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and CPUs (Central Processing Units) on the Verus network. FPGAs were not blocked completely, but the algorithm was developed to prevent them from dominating the network. VerusHash 2.1 introduces an adjustment to this equalization technology, which is expected to tilt the balance slightly more in favor of CPUs, while still allowing FPGAs to operate on the hash algorithm with minor modifications. This means that CPUs will have a slightly better performance compared to FPGAs, but FPGAs will still be able to participate in the network. The Verus developers have made the new algorithm available to FPGA manufacturers, so that everyone will have an opportunity to mine and stake on the network.\n\nIn summary, VerusIDs offer recoverability and privacy features, and VerusHash 2.1 algorithm is designed to equalize the performance of FPGAs and CPUs on the Verus network, promoting a more balanced and fair ecosystem.",
            "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.\n# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]