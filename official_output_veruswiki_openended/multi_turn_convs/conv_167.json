[
    "## Conversation that answers the provided questions:\n**User:**\nI'm having some trouble understanding how to construct an \"outputs\" array for sending currencies in Verus. Can you explain the different fields and options available, and how they affect the behavior of the transaction?\n\n**AI Assistant:**\nI'd be happy to break down the different fields and options available when constructing an \"outputs\" array for sending currencies in Verus.\n\nWhen constructing an \"outputs\" array, there are several fields and options available that can be used to customize the behavior of the transaction. Here's a breakdown of each field and its effects:\n\n**\"currency\"**: This field specifies the source currency to send in this output. If not specified, it defaults to the native currency of the chain.\n\n**\"amount\"**: This field specifies the numeric amount of currency to send, denominated in the source currency.\n\n**\"convertto\"**: This optional field specifies a valid currency to convert to, either a reserve or a fractional. If specified, the transaction will convert the source currency to the specified currency before sending.\n\n**\"exportto\"**: This optional field specifies a valid chain or system name or ID to export to. If specified, the transaction will export the currency to the specified chain or system.\n\n**\"exportid\"**: This optional boolean field specifies whether to export the ID to the destination chain. If true, the transaction will export the ID, which will incur a cost.\n\n**\"exportcurrency\"**: This optional boolean field specifies whether to export the currency definition to the destination chain. If true, the transaction will export the currency definition, which will incur a cost.\n\n**\"feecurrency\"**: This optional field specifies a valid currency that should be pulled from the current wallet and used to pay the fee for the transaction.\n\n**\"via\"**: This optional field specifies a common fractional currency to convert through if the source and destination currencies are reserves.\n\n**\"address\"**: This required field specifies the destination address, which can include an optional chain or system name after the \"@\" symbol.\n\n**\"refundto\"**: This optional field specifies where refunds will go for pre-conversions, defaulting to the from address if not specified.\n\n**\"memo\"**: This optional field specifies a string message to include with the transaction, only applicable if the destination is a zaddr (not supported on testnet).\n\n**\"preconvert\"**: This optional boolean field specifies whether to convert to the currency at market price before sending. If true, the transaction will convert to the currency at market price, but only if the transaction is mined before the start of the currency.\n\n**\"burn\"**: This optional boolean field specifies whether to destroy the currency and subtract it from the supply. This is only applicable if the currency is a token.\n\n**\"mintnew\"**: This optional boolean field specifies whether to mint new coins.\n\nDo you have any further questions about constructing an \"outputs\" array or how these fields affect the behavior of the transaction?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the different fields and options available when constructing an \"outputs\" array for sending currencies in Verus, and how do they affect the behavior of the transaction?",
            "When constructing an \"outputs\" array for sending currencies in Verus, there are several fields and options available that can be used to customize the behavior of the transaction. Here's a breakdown of each field and its effects:\n\n**\"currency\"**: This field specifies the source currency to send in this output. If not specified, it defaults to the native currency of the chain.\n\n**\"amount\"**: This field specifies the numeric amount of currency to send, denominated in the source currency.\n\n**\"convertto\"**: This optional field specifies a valid currency to convert to, either a reserve or a fractional. If specified, the transaction will convert the source currency to the specified currency before sending.\n\n**\"exportto\"**: This optional field specifies a valid chain or system name or ID to export to. If specified, the transaction will export the currency to the specified chain or system.\n\n**\"exportid\"**: This optional boolean field specifies whether to export the ID to the destination chain. If true, the transaction will export the ID, which will incur a cost.\n\n**\"exportcurrency\"**: This optional boolean field specifies whether to export the currency definition to the destination chain. If true, the transaction will export the currency definition, which will incur a cost.\n\n**\"feecurrency\"**: This optional field specifies a valid currency that should be pulled from the current wallet and used to pay the fee for the transaction.\n\n**\"via\"**: This optional field specifies a common fractional currency to convert through if the source and destination currencies are reserves.\n\n**\"address\"**: This required field specifies the destination address, which can include an optional chain or system name after the \"@\" symbol.\n\n**\"refundto\"**: This optional field specifies where refunds will go for pre-conversions, defaulting to the from address if not specified.\n\n**\"memo\"**: This optional field specifies a string message to include with the transaction, only applicable if the destination is a zaddr (not supported on testnet).\n\n**\"preconvert\"**: This optional boolean field specifies whether to convert to the currency at market price before sending. If true, the transaction will convert to the currency at market price, but only if the transaction is mined before the start of the currency.\n\n**\"burn\"**: This optional boolean field specifies whether to destroy the currency and subtract it from the supply. This is only applicable if the currency is a token.\n\n**\"mintnew\"**: This optional boolean field specifies whether to mint new coins.",
            "an ID.\n2. \"outputs\"         (array, required) An array of json objects representing currencies, amounts, and destinations to send.\n  ```json\n  [{\n   \"currency\": \"name\"   (string, required) Name of the source currency to send in this output, defaults to native of chain\n   \"amount\":amount    (numeric, required) The numeric amount of currency, denominated in source currency\n   \"convertto\":\"name\",  (string, optional) Valid currency to convert to, either a reserve of a fractional, or fractional\n   \"exportto\":\"name\",   (string, optional) Valid chain or system name or ID to export to\n   \"exportid\":\"false\",  (bool,  optional) if cross-chain ID, export the ID to the destination chain (will cost to export)\n   \"exportcurrency\":\"false\", (bool, optional) if cross-chain export, export the currency definition (will cost to export)\n   \"feecurrency\":\"name\", (string, optional) Valid currency that should be pulled from the current wallet and used to pay fee\n   \"via\":\"name\",     (string, optional) If source and destination currency are reserves, via is a common fractional to convert through\n   \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination\n   \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress\n   \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.\n   \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency\n   \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.\n   \"mintnew\":\"false\",   (bool,  optional) ",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]