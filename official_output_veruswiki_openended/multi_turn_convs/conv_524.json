[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm having some trouble understanding how to lock and unlock IDs in Verus. Can you walk me through that process, and also explain what conversion queries are in Verus?\n\n**AI Assistant:**\nI'd be happy to help clarify how to lock and unlock IDs in Verus, as well as explain conversion queries.\n\nIn Verus, you can lock and unlock IDs using the `updateidentity` command. There are two types of locks: time locks and time delays.\n\n**Time Locks:**\nA time lock is used to lock an ID until a specific block height is reached. This is achieved by setting the `timelock` parameter to the desired unlock block height. Here's an example of how to lock an ID using a time lock:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Time Delays:**\nA time delay is used to delay the unlocking of an ID by a certain number of blocks after the flags are set back to an unlocked state. This is achieved by setting the `timelock` parameter to the desired unlock block delay. Here's an example of how to lock an ID using a time delay:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Important Notes:**\n\n* Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n* A locked identity cannot revoke itself.\n\nNow, about conversion queries:\n\n**Conversion Queries:**\nConversion queries are used to retrieve information about currencies that meet certain conditions. The `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nHere's an example of how to use the `getcurrencyconverters` API to retrieve currencies that have BTC/ETH markets at or above the liquidity threshold:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that meet the specified conditions.\n\nDo you have any further questions about locking and unlocking IDs, or about conversion queries in Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do you lock and unlock IDs in Verus, and what are conversion queries in Verus?",
            "In Verus, you can lock and unlock IDs using the `updateidentity` command. There are two types of locks: time locks and time delays.\n\n**Time Locks:**\nA time lock is used to lock an ID until a specific block height is reached. This is achieved by setting the `timelock` parameter to the desired unlock block height. Here's an example of how to lock an ID using a time lock:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Time Delays:**\nA time delay is used to delay the unlocking of an ID by a certain number of blocks after the flags are set back to an unlocked state. This is achieved by setting the `timelock` parameter to the desired unlock block delay. Here's an example of how to lock an ID using a time delay:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Important Notes:**\n\n* Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n* A locked identity cannot revoke itself.\n\n**Conversion Queries:**\nConversion queries are used to retrieve information about currencies that meet certain conditions. The `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves.\n\nHere's an example of how to use the `getcurrencyconverters` API to retrieve currencies that have BTC/ETH markets at or above the liquidity threshold:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that meet the specified conditions.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\nThe timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\nThe timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]