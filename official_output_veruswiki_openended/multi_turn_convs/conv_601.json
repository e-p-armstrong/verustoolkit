[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I've got a couple of questions about Verus. How does Verus handle locking and unlocking of IDs, and what are conversion queries in the context of Verus?\n\n**AI Assistant:**\nI'd be happy to explain how Verus handles ID locking and unlocking, as well as conversion queries.\n\nIn Verus, IDs can be locked and unlocked using various parameters. There are two types of locking mechanisms: Time Lock and Time Delay.\n\n**Time Lock:** A Time Lock is used to specify the unlock height of an identity. This means that an ID will remain locked until a certain block height is reached on the blockchain. To lock an ID with a Time Lock, you can use the `updateidentity` command, specifying the unlock height in the `timelock` parameter. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Time Delay:** A Time Delay is used to specify how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. This means that even after the flags are set to unlock, the ID will remain locked for a certain number of blocks. To lock an ID with a Time Delay, you can use the `updateidentity` command, specifying the unlock delay in the `timelock` parameter. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nIt's important to note that revoking an identity will clear its locked status, regardless of any Time Lock or Time Delay settings. Additionally, a locked identity cannot revoke itself.\n\nNow, about conversion queries...\n\n**Conversion Queries:** Conversion queries are a way to retrieve information about currencies that have met certain liquidity thresholds. The `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, to retrieve all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return a list of currencies that meet the specified criteria.\n\nDo you have any further questions about ID locking, unlocking, or conversion queries in Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How does Verus handle locking and unlocking of IDs, and what are conversion queries in the context of Verus?",
            "In Verus, IDs can be locked and unlocked using various parameters. There are two types of locking mechanisms: Time Lock and Time Delay.\n\n**Time Lock:**\nA Time Lock is used to specify the unlock height of an identity. This means that an ID will remain locked until a certain block height is reached on the blockchain. To lock an ID with a Time Lock, you can use the `updateidentity` command, specifying the unlock height in the `timelock` parameter. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n**Time Delay:**\nA Time Delay is used to specify how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. This means that even after the flags are set to unlock, the ID will remain locked for a certain number of blocks. To lock an ID with a Time Delay, you can use the `updateidentity` command, specifying the unlock delay in the `timelock` parameter. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nIt's important to note that revoking an identity will clear its locked status, regardless of any Time Lock or Time Delay settings. Additionally, a locked identity cannot revoke itself.\n\n**Conversion Queries:**\nConversion queries are a way to retrieve information about currencies that have met certain liquidity thresholds. The `getcurrencyconverters` API is used to retrieve all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. For example, to retrieve all currencies that have BTC/ETH markets at or above the liquidity threshold, you can use the following command:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return a list of currencies that meet the specified criteria.",
            "k is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n### Locking and Unlocking IDs\n- **Time Lock:**\nThe timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\nThe timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n## Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]