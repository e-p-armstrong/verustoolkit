[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm interested in creating my own currency on the Verus platform. How do I define a new currency, and what are the implications of setting the `proofprotocol` to 2, specifically with regards to minting new coins?\n\n**AI Assistant:**\nDefining a new currency on Verus is a great way to create a customized token with its own properties and behaviors. To define a new currency, you can use the `definecurrency` command.\n\nLet's walk through an example. Suppose you want to create a new currency called \"mycoin\" with specific properties. Here's how you would do it:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\n\nThis command defines a new currency named \"mycoin\". Some important notes about this configuration:\n\n1. `proofprotocol` being set to 2 means that it's set to PROOF_CHAINID. This means that the controller of the chain ID can mint new coins.\n2. `options` is a configurable integer, in this case set to 33.\n3. `currencies` lists which tokens can be converted to mycoin.\n4. `\"minpreconversion\": [10000,5.1298]` defines the minimum amounts of VRSCTEST and GOLD needed to convert to mycoin, respectively.\n5. `initialsupply` sets the initial supply of mycoin to 20,000 units.\n\nNow, because `proofprotocol` is set to 2, the controller of the chain ID has the ability to mint new coins. This can be done using the `sendcurrency` command, like so:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nThis command mints 10,000 new units of mycoin and sends them to the address \"mike@\". The `mintnew` property specifies that new coins should be minted, rather than simply transferring existing coins.\n\nDo you have any further questions about defining new currencies or minting new coins on Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I define a new currency on the Verus platform, and what are the implications of setting the `proofprotocol` to 2, specifically with regards to minting new coins?",
            "To define a new currency on the Verus platform, you can use the `definecurrency` command. For example, let's say you want to create a new currency called \"mycoin\" with specific properties. Here's how you would do it:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\n\nThis command defines a new currency named \"mycoin\". Some important notes about this configuration:\n\n1. `proofprotocol` being set to 2 means that it's set to PROOF_CHAINID. This means that the controller of the chain ID can mint new coins.\n2. `options` is a configurable integer, in this case set to 33.\n3. `currencies` lists which tokens can be converted to mycoin.\n4. `\"minpreconversion\": [10000,5.1298]` defines the minimum amounts of VRSCTEST and GOLD needed to convert to mycoin, respectively.\n5. `initialsupply` sets the initial supply of mycoin to 20,000 units.\n\nNow, because `proofprotocol` is set to 2, the controller of the chain ID has the ability to mint new coins. This can be done using the `sendcurrency` command, like so:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nThis command mints 10,000 new units of mycoin and sends them to the address \"mike@\". The `mintnew` property specifies that new coins should be minted, rather than simply transferring existing coins.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]