[
    "## Conversation that answers the provided questions:\n**User:**\nI'm trying to create a new currency or chain using the `definecurrency` command in Verus, but I'm not sure what considerations and limitations I need to be aware of to avoid potential issues. Can you help me out?\n\n**AI Assistant:**\nWhen defining a PBaaS chain using the `definecurrency` command in Verus, there are several key considerations and limitations to be aware of to avoid potential issues.\n\n**Defining a PBaaS Chain:**\nTo define a PBaaS chain, you need to pass two JSON objects to the `definecurrency` command: one for the PBaaS chain definition and another for the overridable defaults of the bridge. The PBaaS chain definition includes properties such as the chain's name, options, currencies, conversions, eras, notaries, minimum notaries confirmation, nodes, gateway converter name, and gateway converter issuance. The bridge definition includes properties such as the currencies supported, initial contributions, and initial supply.\n\n**Limitations:**\nThere are two key limitations to be aware of when creating a new currency or chain:\n\n1. **Avoid using i-addresses as currency names**: It is not recommended to create an ID with an i-address as its name, as this can cause problems whenever an i-address or name may be used. This is because an i-address will only be interpreted as referring to the currency or identity that has that i-address calculated based on its name registration. To avoid user confusion, the naming system will also expand the set of characters that will not be allowed for currency registrations.\n2. **Avoid using existing currency names**: In the Verus Desktop GUI, if a currency is already supported, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation will be resolved before mainnet availability.\n\nBy understanding these limitations and considerations, you can successfully define a PBaaS chain using the `definecurrency` command in Verus and avoid potential issues when creating a new currency or chain.\n\nDo you have any further questions about defining a PBaaS chain or the limitations involved?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the key considerations and limitations when defining a PBaaS chain using the `definecurrency` command in Verus, and how can I avoid potential issues when creating a new currency or chain?",
            "When defining a PBaaS chain using the `definecurrency` command in Verus, there are several key considerations and limitations to be aware of to avoid potential issues.\n\n**Defining a PBaaS Chain:**\nTo define a PBaaS chain, you need to pass two JSON objects to the `definecurrency` command: one for the PBaaS chain definition and another for the overridable defaults of the bridge. The PBaaS chain definition includes properties such as the chain's name, options, currencies, conversions, eras, notaries, minimum notaries confirmation, nodes, gateway converter name, and gateway converter issuance. The bridge definition includes properties such as the currencies supported, initial contributions, and initial supply.\n\n**Limitations:**\nThere are two key limitations to be aware of when creating a new currency or chain:\n\n1. **Avoid using i-addresses as currency names**: It is not recommended to create an ID with an i-address as its name, as this can cause problems whenever an i-address or name may be used. This is because an i-address will only be interpreted as referring to the currency or identity that has that i-address calculated based on its name registration. To avoid user confusion, the naming system will also expand the set of characters that will not be allowed for currency registrations.\n2. **Avoid using existing currency names**: In the Verus Desktop GUI, if a currency is already supported, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation will be resolved before mainnet availability.\n\nBy understanding these limitations and considerations, you can successfully define a PBaaS chain using the `definecurrency` command in Verus and avoid potential issues when creating a new currency or chain.",
            "Now pass those definitions to `definecurrency`\n```json\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":330,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```## Limitations in multi-currency to be aware of:\n1. (GUI and CLI) You will not be able to make a currency from an ID that has a properly encoded i-address as its actual name, not its calculated ID. Generally, the advice is \u201cdon\u2019t do that\u201d. Using an i-address when referring to a currency will only be interpreted as referring to the currency or identity which has that i-address calculated based on its name registration. As a general rule, making an ID with an i-address as its name is not prevented by the protocol, but will cause problems whenever an i-address or name may be used (many cases) and will not be supported for creating currencies. To reduce any potential for user confusion, even though the naming system provides will also be expanding the set of characters that will not be allowed for currency registrations.2. (GUI) If a currency is supported in the Verus Desktop already, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation is considered errata for this testnet release and will not be a limitation before mainnet availability.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]