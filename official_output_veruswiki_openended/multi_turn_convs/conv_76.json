[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to define a PBaaS chain and create currencies using the Verus command line interface, but I'm not sure about the limitations and considerations. Can you help me out?\n\n**AI Assistant:**\nWhen defining a PBaaS chain and creating currencies using the Verus command line interface, there are some limitations and considerations to be aware of.\n\n**Definition Limitations:**\nOne important consideration is the format of the JSON objects used to define the PBaaS chain and its properties. The command to define a PBaaS chain requires two JSON objects: one for the chain definition and another for the bridge definition defaults. The chain definition JSON object must contain properties such as `name`, `options`, `currencies`, `conversions`, `eras`, `notaries`, `minnotariesconfirm`, and `nodes`. The bridge definition JSON object must contain properties such as `currencies`, `initialcontributions`, and `initialsupply`.\n\n**Naming Conventions:**\nAnother important consideration is the naming conventions for currencies and IDs. It is not recommended to create an ID with an i-address as its name, as this can cause problems when referring to the currency or ID. This is because an i-address will be interpreted as referring to the currency or identity with that i-address calculated based on its name registration. To avoid user confusion, the naming system will also be expanding the set of characters that are not allowed for currency registrations.\n\n**GUI Limitations:**\nAdditionally, there are some limitations specific to the Verus Desktop GUI. If a currency is already supported in the Verus Desktop, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation will be addressed before mainnet availability.\n\n**Best Practices:**\nTo avoid common pitfalls, it is recommended to follow best practices when defining a PBaaS chain and creating currencies. Make sure to use unique and descriptive names for currencies and IDs, and avoid using i-addresses as names. Also, be aware of the limitations of the Verus Desktop GUI and plan accordingly. By following these guidelines, you can successfully define a PBaaS chain and create currencies using the Verus command line interface.\n\nDo you have any more questions about defining a PBaaS chain or creating currencies with the Verus command line interface?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the limitations and considerations when defining a PBaaS chain and creating currencies using the Verus command line interface, and how can I avoid common pitfalls?",
            "When defining a PBaaS chain and creating currencies using the Verus command line interface, there are some limitations and considerations to be aware of.\n\n**Definition Limitations:**\nOne important consideration is the format of the JSON objects used to define the PBaaS chain and its properties. The command to define a PBaaS chain requires two JSON objects: one for the chain definition and another for the bridge definition defaults. The chain definition JSON object must contain properties such as `name`, `options`, `currencies`, `conversions`, `eras`, `notaries`, `minnotariesconfirm`, and `nodes`. The bridge definition JSON object must contain properties such as `currencies`, `initialcontributions`, and `initialsupply`.\n\n**Naming Conventions:**\nAnother important consideration is the naming conventions for currencies and IDs. It is not recommended to create an ID with an i-address as its name, as this can cause problems when referring to the currency or ID. This is because an i-address will be interpreted as referring to the currency or identity with that i-address calculated based on its name registration. To avoid user confusion, the naming system will also be expanding the set of characters that are not allowed for currency registrations.\n\n**GUI Limitations:**\nAdditionally, there are some limitations specific to the Verus Desktop GUI. If a currency is already supported in the Verus Desktop, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation will be addressed before mainnet availability.\n\n**Best Practices:**\nTo avoid common pitfalls, it is recommended to follow best practices when defining a PBaaS chain and creating currencies. Make sure to use unique and descriptive names for currencies and IDs, and avoid using i-addresses as names. Also, be aware of the limitations of the Verus Desktop GUI and plan accordingly. By following these guidelines, you can successfully define a PBaaS chain and create currencies using the Verus command line interface.",
            "Now pass those definitions to `definecurrency`\n```json\n./verus -chain=vrsctest definecurrency '{\"name\":\"PBaaSChain\",\"options\":330,\"currencies\":[\"VRSCTEST\"],\"conversions\":[1],\"eras\":[{\"reward\":1200000000,\"decay\":0,\"halving\":0,\"eraend\":0}],\"notaries\":[\"Notary1@\",\"Notary2@\",\"Notary3@\"],\"minnotariesconfirm\":2,\"nodes\":[{\"networkaddress\":\"111.111.111.111:10000\",\"nodeidentity\":\"Node1@\"},{\"networkaddress\":\"111.111.111.112:10000\",\"nodeidentity\":\"Node2@\"}],\"gatewayconvertername\":\"Bridge\",\"gatewayconverterissuance\":1000000}' '{\"currencies\":[\"VRSCTEST\",\"PBaaSChain\",\"USD\"],\"initialcontributions\":[371747.20398827,0,1000000],\"initialsupply\":3000000}'\n```## Limitations in multi-currency to be aware of:\n1. (GUI and CLI) You will not be able to make a currency from an ID that has a properly encoded i-address as its actual name, not its calculated ID. Generally, the advice is \u201cdon\u2019t do that\u201d. Using an i-address when referring to a currency will only be interpreted as referring to the currency or identity which has that i-address calculated based on its name registration. As a general rule, making an ID with an i-address as its name is not prevented by the protocol, but will cause problems whenever an i-address or name may be used (many cases) and will not be supported for creating currencies. To reduce any potential for user confusion, even though the naming system provides will also be expanding the set of characters that will not be allowed for currency registrations.2. (GUI) If a currency is supported in the Verus Desktop already, such as BTC or ETH, you will not be able to use those same named currencies as a PBaaS chain. This limitation is considered errata for this testnet release and will not be a limitation before mainnet availability.",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]