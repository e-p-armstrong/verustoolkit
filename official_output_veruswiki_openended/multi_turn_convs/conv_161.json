[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm trying to learn more about Verus and I was wondering about currency namespaces. What are the properties and features of a currency namespace in Verus, and how can you retrieve a list of all available currencies?\n\n**AI Assistant:**\nIn Verus, a currency namespace is a collection of properties and features that define a specific currency. These properties and features include:\n\n1. **Base cost of IDs**: This is the cost of creating an ID (identity) within this currency namespace, denominated in the native currency of the namespace.\n2. **ID referral levels**: This specifies the number of levels of ID referrals allowed in this namespace, which is only applicable to native PBaaS chains and IDs.\n3. **ID import fees**: This is the fee required to import an ID into this system, which is also only applicable to native PBaaS chains and IDs.\n4. **Eras**: This is an array of objects that define different phases of rewards and convertibility for the currency. Each era is characterized by:\n\t* **Reward**: The starting reward for each era, denominated in the native coin.\n\t* **Decay**: The exponential or linear decay of rewards during each era.\n\t* **Halving**: The number of blocks between halvings during each era.\n\t* **Era end**: The block that marks the end of each era.\n\t* **Era options**: Reserved options for future use.\n5. **Nodes**: This is an optional array of up to 8 nodes that can be used to connect to the blockchain. Each node is defined by:\n\t* **Node identity**: The internet, TOR, or other supported address for the node.\n\t* **Payment address**: The rewards payment address for the node.\n\nIf you want to retrieve a list of all available currencies in Verus, you can use the `listcurrencies` command. You can execute this command in two ways:\n\n1. Using the Verus command-line interface: `verus listcurrencies true`\n2. Using the Verus JSON-RPC API: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listcurrencies\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nBoth of these methods will return a list of all available currencies in Verus, along with their respective properties and features.\n\nDo you have any further questions about currency namespaces or how to retrieve the list of available currencies?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the properties and features of a currency namespace in Verus, and how can you retrieve a list of all available currencies?",
            "In Verus, a currency namespace is a collection of properties and features that define a specific currency. These properties and features include:\n\n1. **Base cost of IDs**: This is the cost of creating an ID (identity) within this currency namespace, denominated in the native currency of the namespace.\n2. **ID referral levels**: This specifies the number of levels of ID referrals allowed in this namespace, which is only applicable to native PBaaS chains and IDs.\n3. **ID import fees**: This is the fee required to import an ID into this system, which is also only applicable to native PBaaS chains and IDs.\n4. **Eras**: This is an array of objects that define different phases of rewards and convertibility for the currency. Each era is characterized by:\n\t* **Reward**: The starting reward for each era, denominated in the native coin.\n\t* **Decay**: The exponential or linear decay of rewards during each era.\n\t* **Halving**: The number of blocks between halvings during each era.\n\t* **Era end**: The block that marks the end of each era.\n\t* **Era options**: Reserved options for future use.\n5. **Nodes**: This is an optional array of up to 8 nodes that can be used to connect to the blockchain. Each node is defined by:\n\t* **Node identity**: The internet, TOR, or other supported address for the node.\n\t* **Payment address**: The rewards payment address for the node.\n\nTo retrieve a list of all available currencies in Verus, you can use the `listcurrencies` command. This command can be executed in two ways:\n\n1. Using the Verus command-line interface: `verus listcurrencies true`\n2. Using the Verus JSON-RPC API: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listcurrencies\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nBoth of these methods will return a list of all available currencies in Verus, along with their respective properties and features.",
            "      (number) base cost of IDs for this currency namespace in this currency\n  \"idreferrallevels\" : n,        (int) levels of ID referrals (only for native PBaaS chains and IDs)\n  \"idimportfees\" : n,          (number) fees required to import an ID to this system (only for native PBaaS chains and IDs)\n  \"eras\" : \"[obj, ...]\",         (objarray) different chain phases of rewards and convertibility\n  {\n   \"reward\" : \"[n, ...]\",        (int) reward start for each era in native coin\n   \"decay\" : \"[n, ...]\",        (int) exponential or linear decay of rewards during each era\n   \"halving\" : \"[n, ...]\",       (int) blocks between halvings during each era\n   \"eraend\" : \"[n, ...]\",        (int) block marking the end of each era\n   \"eraoptions\" : \"[n, ...]\",      (int) options (reserved)\n  }\n  \"nodes\"   : \"[obj, ..]\",      (objectarray, optional) up to 8 nodes that can be used to connect to the blockchain   [{\n     \"nodeidentity\" : \"txid\",     (string, optional) internet, TOR, or other supported address for node\n     \"paymentaddress\" : n,       (int,   optional) rewards payment address\n    }, .. ]\n  \"lastconfirmedcurrencystate\" : {\n   }\n  \"besttxid\" : \"txid\"\n   }\n  \"confirmednotarization\" : {\n   }\n  \"confirmedtxid\" : \"txid\"\n }, ...\n]\n```\nExamples:\n```bash\n> verus listcurrencies true\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listcurrencies\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]