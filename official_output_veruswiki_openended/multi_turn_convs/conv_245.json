[
    "## Conversation that answers the provided questions:\n**User:**\nI've been reading about Verus Vault and its capabilities, but I'm not entirely clear on how it provides more standard forms of time-locking. Can you explain that to me and maybe give some examples of potential use cases for this technology?\n\n**AI Assistant:**\nVerus Vault is indeed a powerful tool that offers various forms of time-locking, going beyond theft resistance and delayed lock opening. One way it achieves this is by allowing users to time-lock and unlock funds in a single operation, which immediately starts the unlock period countdown. This functionality can be utilized in a variety of ways, such as:\n\n1. **Time-locked funds for team members, children, or employees**: Verus Vault can be used to provide funds to individuals with a predetermined unlock date, ensuring they receive the funds only when the time-lock expires.\n\n2. **Structured deal and payment terms**: The technology can be used to create time-locked payment structures for business deals, ensuring that funds are released only when specific conditions are met or at a predetermined date.\n\nTo achieve time-locking, Verus Vault uses two parameters: **Time Lock** and **Time Delay**.\n\n**Time Lock**: This parameter defines the unlock height of an identity, which is the block height at which the identity will be unlocked. To set a time lock, you can use the `updateidentity` command, specifying the unlock block height, minimum signatures, and primary addresses.\n\n**Time Delay**: This parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. To set a time delay, you can use the `updateidentity` command, specifying the unlock block delay, minimum signatures, and primary addresses.\n\nSome important notes about time-locking with Verus Vault:\n\n* Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n* A locked identity cannot revoke itself.\n\nAdditionally, Verus Vault provides a `getcurrencyconverters` API that retrieves all currencies that meet specific liquidity thresholds, which can be useful for conversion queries.\n\nDo you have any more questions about Verus Vault's time-locking capabilities or potential use cases?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How does Verus Vault provide more standard forms of time-locking, and what are some potential use cases for this technology?",
            "Verus Vault is a powerful tool that offers various forms of time-locking, going beyond theft resistance and delayed lock opening. One way it achieves this is by allowing users to time-lock and unlock funds in a single operation, which immediately starts the unlock period countdown. This functionality can be utilized in a variety of ways, such as:\n\n1. **Time-locked funds for team members, children, or employees**: Verus Vault can be used to provide funds to individuals with a predetermined unlock date, ensuring they receive the funds only when the time-lock expires.\n\n2. **Structured deal and payment terms**: The technology can be used to create time-locked payment structures for business deals, ensuring that funds are released only when specific conditions are met or at a predetermined date.\n\nTo achieve time-locking, Verus Vault uses two parameters: **Time Lock** and **Time Delay**.\n\n**Time Lock**: This parameter defines the unlock height of an identity, which is the block height at which the identity will be unlocked. To set a time lock, you can use the `updateidentity` command, specifying the unlock block height, minimum signatures, and primary addresses.\n\n**Time Delay**: This parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. To set a time delay, you can use the `updateidentity` command, specifying the unlock block delay, minimum signatures, and primary addresses.\n\nSome important notes about time-locking with Verus Vault:\n\n* Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n* A locked identity cannot revoke itself.\n\nAdditionally, Verus Vault provides a `getcurrencyconverters` API that retrieves all currencies that meet specific liquidity thresholds, which can be useful for conversion queries.",
            "In addition to use cases related to theft resistance and delayed lock opening, Verus Vault can be used to provide more standard forms of time-locking by simply time locking and unlocking in one operation, leaving the unlock period immediately counting down. This capability could be used to provide time locked funds to team members, children, employees, or structured in a way to provide time locked deal and payment terms. The uses for this technology are certainly beyond those that we have already thought of, and we look forward to seeing how people leverage this powerful new protocol capability.- **Time Lock:**\n  The timelock parameter defines the unlock height of the identity.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- **Time Delay:**\n  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n  ```\n  verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n  ```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n  ```\n  verus -chain=VRSCTEST getcurrencyconverters btc eth\n  ```\n  Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency\n**Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]