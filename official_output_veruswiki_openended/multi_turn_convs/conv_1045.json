[
    "## Conversation that answers the provided questions:\n**User:**\nI'm interested in creating my own currency on the Verus network. Could you walk me through the steps to define a new currency and mint new coins? Also, how does the `proofprotocol` setting affect the minting process?\n\n**AI Assistant:**\nDefining a new currency on the Verus network is a straightforward process. To get started, you'll need to use the `definecurrency` command with the required parameters. Here's an example of how to define a new currency called \"mycoin\":\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\n\nLet me break down the parameters here:\n\n* `name`: the name of the currency\n* `options`: an integer that configures various properties of the currency\n* `proofprotocol`: an integer that determines how new coins are minted (in this case, set to 2, which is PROOF_CHAINID)\n* `currencies`: an array of currencies that can be converted to mycoin\n* `minpreconversion`: an array of minimum amounts required for conversion\n* `initialsupply`: the initial supply of mycoin\n\nThe `proofprotocol` setting is crucial in determining how new coins are minted. In this case, setting `proofprotocol` to 2 (PROOF_CHAINID) means that the controller of the chain ID can mint new coins.\n\nOnce you've defined your new currency, you can mint new coins using the `sendcurrency` command with the `mintnew` parameter set to 1. Here's an example:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nIn this example, the controller of the chain ID is minting 10,000 new coins of mycoin and sending them to the address `mike@`. The `mintnew` parameter set to 1 indicates that new coins should be minted.\n\nSo, to summarize, defining a new currency on the Verus network involves setting various properties, including the `proofprotocol`, which determines how new coins are minted. The controller of the chain ID can then mint new coins using the `sendcurrency` command with the `mintnew` parameter set to 1.\n\nDo you have any further questions about defining a new currency or minting new coins on the Verus network?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the steps to define a new currency on the Verus network and mint new coins, and how does the `proofprotocol` setting affect the minting process?",
            "To define a new currency on the Verus network, you can use the `definecurrency` command with the required parameters. Here's an example of how to define a new currency called \"mycoin\":\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\n\nIn this example, we're defining a new currency called \"mycoin\" with the following properties:\n\n* `name`: the name of the currency\n* `options`: an integer that configures various properties of the currency\n* `proofprotocol`: an integer that determines how new coins are minted (in this case, set to 2, which is PROOF_CHAINID)\n* `currencies`: an array of currencies that can be converted to mycoin\n* `minpreconversion`: an array of minimum amounts required for conversion\n* `initialsupply`: the initial supply of mycoin\n\nThe `proofprotocol` setting is crucial in determining how new coins are minted. In this case, setting `proofprotocol` to 2 (PROOF_CHAINID) means that the controller of the chain ID can mint new coins.\n\nTo mint new coins, the controller of the chain ID can use the `sendcurrency` command with the `mintnew` parameter set to 1. Here's an example:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nIn this example, the controller of the chain ID is minting 10,000 new coins of mycoin and sending them to the address `mike@`. The `mintnew` parameter set to 1 indicates that new coins should be minted.\n\nIn summary, defining a new currency on the Verus network involves setting various properties, including the `proofprotocol`, which determines how new coins are minted. The controller of the chain ID can then mint new coins using the `sendcurrency` command with the `mintnew` parameter set to 1.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]