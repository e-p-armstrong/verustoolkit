[
    "## Conversation that answers the provided questions:\n**User:**\nHey, I'm interested in creating my own currency using Verus. Can you walk me through the process of creating a new currency called \"mycoin\"? Additionally, what does setting the proofprotocol to 2 mean? And finally, how do I mint new coins and launch a testnet for mycoin?\n\n**AI Assistant:**\nCreating a new currency with Verus is a fascinating topic. I'd be happy to guide you through the process.\n\nTo create a new currency called \"mycoin\" using Verus, you can use the `definecurrency` command. Here's an example of how to do it:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nLet me break down what this command does:\n\n* `./verus` is the command-line interface for Verus.\n* `-chain=VRSCTEST` specifies the chain we're operating on, which is `VRSCTEST` in this case.\n* `definecurrency` is the command to create a new currency.\n* The JSON object passed to `definecurrency` specifies the properties of the new currency:\n\t+ `name` is the name of the currency, which is \"mycoin\" in this case.\n\t+ `options` is a configurable integer, set to 97 in this case.\n\t+ `proofprotocol` is set to 2, which means that the controller of the chain ID can mint new coins. This is known as PROOF_CHAINID.\n\t+ `currencies` specifies the currencies that can be converted to \"mycoin\", which are \"vrsctest\" and \"gold\" in this case.\n\t+ `minpreconversion` specifies the minimum amounts of \"vrsctest\" and \"gold\" needed to convert to \"mycoin\", respectively.\n\t+ `initialsupply` sets the initial supply of \"mycoin\" to 20,000 units.\n\nNow, regarding setting `proofprotocol` to 2: when `proofprotocol` is set to 2, it means that the controller of the chain ID can mint new coins. This is done using the `sendcurrency` command, like this:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\".\n\nFinally, to launch a testnet for \"mycoin\", you can use the `verusd` command, like this:\n```\n./verusd -chain=VRSCTEST\n```\nThis command launches a testnet for the \"VRSCTEST\" chain, which includes the \"mycoin\" currency.\n\nDo you have any further questions about creating a new currency with Verus, or the process of minting new coins and launching a testnet?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I create a new currency called \"mycoin\" using Verus, and what does setting the proofprotocol to 2 mean? Additionally, how do I mint new coins and launch a testnet for mycoin?",
            "To create a new currency called \"mycoin\" using Verus, you can use the `definecurrency` command. Here's an example of how to do it:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nLet's break down what this command does:\n\n* `./verus` is the command-line interface for Verus.\n* `-chain=VRSCTEST` specifies the chain we're operating on, which is `VRSCTEST` in this case.\n* `definecurrency` is the command to create a new currency.\n* The JSON object passed to `definecurrency` specifies the properties of the new currency:\n\t+ `name` is the name of the currency, which is \"mycoin\" in this case.\n\t+ `options` is a configurable integer, set to 97 in this case.\n\t+ `proofprotocol` is set to 2, which means that the controller of the chain ID can mint new coins. This is known as PROOF_CHAINID.\n\t+ `currencies` specifies the currencies that can be converted to \"mycoin\", which are \"vrsctest\" and \"gold\" in this case.\n\t+ `minpreconversion` specifies the minimum amounts of \"vrsctest\" and \"gold\" needed to convert to \"mycoin\", respectively.\n\t+ `initialsupply` sets the initial supply of \"mycoin\" to 20,000 units.\n\nNow, let's talk about what setting `proofprotocol` to 2 means. When `proofprotocol` is set to 2, it means that the controller of the chain ID can mint new coins. This is done using the `sendcurrency` command, like this:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\".\n\nFinally, to launch a testnet for \"mycoin\", you can use the `verusd` command, like this:\n```\n./verusd -chain=VRSCTEST\n```\nThis command launches a testnet for the \"VRSCTEST\" chain, which includes the \"mycoin\" currency.",
            "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```**Launching the testnet:**\n```\n./verusd -chain=VRSCTEST\n```\n# Disclaimer",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]