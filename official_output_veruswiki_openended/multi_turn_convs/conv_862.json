[
    "## Conversation that answers the provided questions:\n**User:**\nI'm interested in creating a next-generation NFT token and an identity with a fractional currency as its parent on the Verus platform. Can you walk me through the steps to do so?\n\n**AI Assistant:**\nCreating a next-generation NFT token and an identity with a fractional currency as its parent on the Verus platform involves a few steps. Don't worry, I'll break it down for you.\n\n**Tokenizing ID Control (Next-Generation NFT):**\nTo create a next-generation NFT token, you need to define a currency with specific flags and properties. The currency definition should include the `OPTION_NFT_TOKEN` and `OPTION_TOKEN` flags, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n\nHere's an example of how to define such a currency using the `definecurrency` command:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nThis command defines a currency named \"ID\" with the specified flags and properties.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` and `registeridentity` commands.\n\nFirst, use the `registernamecommitment` command to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, as shown in the example below:\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\nThis command specifies a parent currency `vrsc-btc` and a funding address `zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny`.\n\nNext, use the `registeridentity` command to specify the parent in the identity definition. You need to enter `false` for `returntx` to sign and submit the ID registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address.\n\nHere's an example of how to use the `registeridentity` command:\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 sourceoffunds\n```\nThis command registers the identity with the specified parent currency and funding address.\n\nBy following these steps, you can create a next-generation NFT token and an identity with a fractional currency as its parent on the Verus platform.\n\nDo you have any questions about these steps or would you like further clarification on any of the commands?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I create a next-generation NFT token and an identity with a fractional currency as its parent on the Verus platform?",
            "To create a next-generation NFT token and an identity with a fractional currency as its parent on the Verus platform, you can follow these steps:\n\n**Tokenizing ID Control (Next-Generation NFT):**\nTo create a next-generation NFT token, you need to define a currency with specific flags and properties. The currency definition should include the `OPTION_NFT_TOKEN` and `OPTION_TOKEN` flags, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n\nHere's an example of how to define such a currency using the `definecurrency` command:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nThis command defines a currency named \"ID\" with the specified flags and properties.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` and `registeridentity` commands.\n\nFirst, use the `registernamecommitment` command to specify a currency parent and a funding address. You can use quotes `\"\"` to leave fields blank, as shown in the example below:\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\nThis command specifies a parent currency `vrsc-btc` and a funding address `zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny`.\n\nNext, use the `registeridentity` command to specify the parent in the identity definition. You need to enter `false` for `returntx` to sign and submit the ID registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address.\n\nHere's an example of how to use the `registeridentity` command:\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 sourceoffunds\n```\nThis command registers the identity with the specified parent currency and funding address.\n\nBy following these steps, you can create a next-generation NFT token and an identity with a fractional currency as its parent on the Verus platform.",
            "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
            "./raw_text_input_wiki/release_notes.md"
        ]
    ]
]