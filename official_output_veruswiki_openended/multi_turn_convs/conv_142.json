[
    "## Conversation that answers the provided questions:\n**User:**\nHi, I'm trying to understand how to use Verus to retrieve information about systems and currencies. Can you explain the methods `getlastimportfrom`, `getlaunchinfo`, and `getnotarizationdata`, and how they help with that?\n\n**AI Assistant:**\nThose methods are indeed essential for retrieving information about systems and currencies in Verus. Let me break them down for you.\n\nIn Verus, there are three methods that provide essential information about systems and currencies: `getlastimportfrom`, `getlaunchinfo`, and `getnotarizationdata`. These methods allow users to retrieve specific data about systems and currencies, which is crucial for various use cases.\n\n**`getlastimportfrom` Method:**\nThe `getlastimportfrom` method retrieves the last import from a specified system on a chain. It takes a single argument, `systemname`, which is the name or ID of the system. The method returns a JSON object containing two properties: `lastimport` and `lastconfirmednotarization`. The `lastimport` property provides information about the last import from the specified system, while `lastconfirmednotarization` contains information about the last confirmed notarization of the system on the chain.\n\n**`getlaunchinfo` Method:**\nThe `getlaunchinfo` method retrieves the launch notarization data and partial transaction proof of the launch notarization for a specified currency ID. It takes a single argument, `currencyid`, which is the hex-encoded ID or string name of the currency. The method returns a JSON object containing five properties: `currencydefinition`, `txid`, `voutnum`, `transactionproof`, and `launchnotarization`. The `currencydefinition` property provides the full currency definition, while the other properties contain information about the launch notarization, including the transaction ID, vout index, partial transaction proof, and final CPBaaSNotarization.\n\n**`getnotarizationdata` Method:**\nThe `getnotarizationdata` method retrieves the latest PBaaS notarization data for a specified currency ID. It takes three arguments: `currencyid`, `getevidence`, and `separatecounterevidence`. The method returns the latest notarization data for the specified currency.\n\nIn summary, these three methods provide essential information about systems and currencies in Verus, allowing users to retrieve data about imports, launches, and notarizations. This information is crucial for various use cases, such as tracking system updates, verifying currency launches, and monitoring notarization data.\n\nDo you have any further questions about these methods, or how to use them in your specific use case?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What are the methods `getlastimportfrom`, `getlaunchinfo`, and `getnotarizationdata` used for in Verus, and how do they help with retrieving information about systems and currencies?",
            "In Verus, there are three methods that provide essential information about systems and currencies: `getlastimportfrom`, `getlaunchinfo`, and `getnotarizationdata`. These methods allow users to retrieve specific data about systems and currencies, which is crucial for various use cases.\n\n**`getlastimportfrom` Method:**\nThe `getlastimportfrom` method retrieves the last import from a specified system on a chain. It takes a single argument, `systemname`, which is the name or ID of the system. The method returns a JSON object containing two properties: `lastimport` and `lastconfirmednotarization`. The `lastimport` property provides information about the last import from the specified system, while `lastconfirmednotarization` contains information about the last confirmed notarization of the system on the chain.\n\n**`getlaunchinfo` Method:**\nThe `getlaunchinfo` method retrieves the launch notarization data and partial transaction proof of the launch notarization for a specified currency ID. It takes a single argument, `currencyid`, which is the hex-encoded ID or string name of the currency. The method returns a JSON object containing five properties: `currencydefinition`, `txid`, `voutnum`, `transactionproof`, and `launchnotarization`. The `currencydefinition` property provides the full currency definition, while the other properties contain information about the launch notarization, including the transaction ID, vout index, partial transaction proof, and final CPBaaSNotarization.\n\n**`getnotarizationdata` Method:**\nThe `getnotarizationdata` method retrieves the latest PBaaS notarization data for a specified currency ID. It takes three arguments: `currencyid`, `getevidence`, and `separatecounterevidence`. The method returns the latest notarization data for the specified currency.\n\nIn summary, these three methods provide essential information about systems and currencies in Verus, allowing users to retrieve data about imports, launches, and notarizations. This information is crucial for various use cases, such as tracking system updates, verifying currency launches, and monitoring notarization data.",
            "#### Arguments:\n```\n  \"systemname\"        (string, required) name or ID of the system to retrieve the last import from\n```\n#### Result:\n```json\n{\n  \"lastimport\" :         (object) last import from the indicated system on this chain\n   {\n   }\n  \"lastconfirmednotarization\" :  (object) last confirmed notarization of the indicated system on this chain\n   {\n   }\n}\n```\nExamples:\n```bash\n> verus getlastimportfrom \"systemname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlastimportfrom\", \"params\": \"systemname\" }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getlaunchinfo \"currencyid\"`\nReturns the launch notarization data and partial transaction proof of the launch notarization for the specifed currencyid.#### Arguments:\n1. \"currencyid\"         (string, required) the hex-encoded ID or string name search for notarizations on#### Result:\n```json\n{\n \"currencydefinition\" : {},   (json) Full currency definition\n \"txid\" : \"hexstr\",       (hexstr) transaction ID\n \"voutnum\" : \"n\",        (number) vout index of the launch notarization\n \"transactionproof\" : {},    (json) Partial transaction proof of the launch transaction and output\n \"launchnotarization\" : {},   (json) Final CPBaaSNotarization clearing launch or refund\n \"notarynotarization\" : {},   (json) Current notarization of this chain\n}\n```Examples:\n```bash\n> verus getlaunchinfo \"currencyid\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getlaunchinfo\", \"params\": [\"currencyid\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getnotarizationdata \"currencyid\" (getevidence) (separatecounterevidence)`\nReturns the latest PBaaS notarization data for the specifed currencyid.",
            "./raw_text_input_wiki/clifaq-02_verus_commands.md"
        ]
    ]
]