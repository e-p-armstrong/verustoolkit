[
    "What information does the `getmininginfo` command provide about the Verus network and mining status, and how can it be accessed?",
    "The `getmininginfo` command in Verus is used to retrieve a JSON object containing various mining-related information about the Verus network and the mining status. This command provides a comprehensive overview of the network's current state, including mining-related metrics, blockchain information, and node configuration.\n\nThe returned JSON object contains the following information:\n\n* Block information: The current block number, the size of the last block, and the number of transactions in the last block.\n* Mining metrics: The average block fees over the past 100 blocks, the current difficulty, and the estimated total staking supply.\n* Node configuration: Whether generation (mining or staking) is enabled, the processor limit for generation, and the number of CPU threads used for mining.\n* Network information: The estimated network solution rate, the size of the memory pool, and whether the node is currently mining or staking.\n* Blockchain information: The current network name (main, test, or regtest), and the list of blockchain names being merge mined with.\n\nTo access the `getmininginfo` command, you can use the Verus command-line interface or send a JSON-RPC request to the Verus node. The examples provided show how to use the command in both ways:\n\n1. Using the Verus command-line interface: `verus getmininginfo`\n2. Sending a JSON-RPC request: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nBy using the `getmininginfo` command, you can gain insights into the Verus network's current state and adjust your mining or staking configuration accordingly.",
    "### `getmininginfo`\nReturns a json object containing mining-related information.\n#### Result:\n```\n{\n \"blocks\": nnn,       (numeric) The current block\n \"currentblocksize\": nnn,  (numeric) The last block size\n \"currentblocktx\": nnn,   (numeric) The last block transaction\n \"averageblockfees\": xxx.xxxxx (numeric) The average block fees, in addition to block reward, over the past 100 blocks\n \"difficulty\": xxx.xxxxx  (numeric) The current difficulty\n \"stakingsupply\": xxx.xxxxx (numeric) The current estimated total staking supply\n \"errors\": \"...\"      (string) Current errors\n \"generate\": true|false   (boolean) If the generation is on or off (see getgenerate or setgenerate calls)\n \"genproclimit\": n     (numeric) The processor limit for generation. -1 if no generation. (see getgenerate or setgenerate calls)\n \"localsolps\": xxx.xxxxx  (numeric) The average local solution rate in Sol/s since this node was started\n \"networksolps\": x     (numeric) The estimated network solution rate in Sol/s\n \"pooledtx\": n       (numeric) The size of the mem pool\n \"testnet\": true|false   (boolean) If using testnet or not\n \"chain\": \"xxxx\",      (string) current network name as defined in BIP70 (main, test, regtest)\n \"generate\": true|false   (boolean) If this instance is mining or staking\n \"staking\": true|false   (boolean) If staking\n \"numthreads\": n      (numeric) Number of CPU threads mining\n \"mergemining\": n      (numeric) Number of blockchains we are merge mining with\n \"mergeminedchains\": []   (optional, list of names) Blockchain names that are being merge mined with this blockchain\n}\n```\nExamples:\n```bash\n> verus getmininginfo\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getmininginfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]