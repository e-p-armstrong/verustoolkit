[
    "How does Verus support the setup and management of multiple, interoperable blockchains, and what are some of the features and commands available for identity management and currency conversion?",
    "Verus is designed to support the creation and operation of multiple, interoperable blockchains, both public and private. This is achieved through a fractal model, which allows for an unlimited number of blockchains to operate simultaneously on the Verus network. While there may be some overhead for cross-notarization, this model enables organizations to easily set up private, internal blockchains that can bridge with public currencies and operate independently, while still benefiting from the features and currencies of the public chain.\n\nIn terms of identity management, Verus provides several features and commands for locking and unlocking IDs, which can be useful for various use cases. For example, a time lock can be set on an ID, which defines the unlock height of the identity. This can be done using the `updateidentity` command, specifying the unlock block height, minimum signatures, and primary addresses. Additionally, a time delay can be set, which defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n\nIt's also important to note that revoking an identity will clear its locked status, regardless of time delay or unlock height, and a locked identity cannot revoke itself.\n\nAnother feature of Verus is its support for currency conversion queries. The `getcurrencyconverters` API can be used to retrieve all currencies that meet certain criteria, such as having at least 1000 VRSC in reserve, a reserve ratio of at least 10%, and listing all currencies as reserves. For example, the command `verus -chain=VRSCTEST getcurrencyconverters btc eth` will return all currencies that have BTC/ETH markets at or above the liquidity threshold.\n\nOverall, Verus provides a powerful and flexible platform for creating and managing multiple, interoperable blockchains, as well as a range of features and commands for identity management and currency conversion.",
    " well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains.\n#### Locking and Unlocking IDs\n- **Time Lock:**\n The timelock parameter defines the unlock height of the identity.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- **Time Delay:**\n The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\n- Revoking an identity will clear its locked status, regardless of time delay or unlock height.\n- A locked identity cannot revoke itself.\n### Conversion Queries\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves\n- **E.g. BTC ETH:**\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nWill return all currencies that have btc/eth markets at or above the liquidity threshold.",
    "./raw_text_input_wiki/release_notes.md"
]