[
    "How do I create a new currency called \"mycoin\" using the Verus protocol, and what are the implications of setting the proof protocol to PROOF_CHAINID?",
    "To create a new currency called \"mycoin\" using the Verus protocol, you can use the `definecurrency` command. Here's an example of how to do it:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nThis command defines a new currency named \"mycoin\" with the following properties:\n\n* `name`: The name of the currency, which is \"mycoin\" in this case.\n* `options`: An integer value that configures various properties of the currency. In this case, it's set to 33.\n* `proofprotocol`: The proof protocol used to secure the currency. In this case, it's set to 2, which corresponds to PROOF_CHAINID.\n* `currencies`: An array of currencies that can be converted to \"mycoin\". In this case, it's set to [\"vrsctest\", \"gold\"].\n* `minpreconversion`: An array that specifies the minimum amounts of each currency required to convert to \"mycoin\".\n* `initialsupply`: The initial supply of \"mycoin\" tokens, which is set to 20,000 in this case.\n\nBy setting the `proofprotocol` to PROOF_CHAINID (2), the controller of the chain ID can mint new coins. This means that the entity controlling the chain ID has the ability to create new \"mycoin\" tokens. To do so, they would use the `sendcurrency` command, like this:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command would mint 10,000 new \"mycoin\" tokens and send them to the address \"mike@\". The `mintnew` parameter specifies that new tokens should be minted, and the `amount` parameter specifies the number of tokens to mint.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]