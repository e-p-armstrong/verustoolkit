[
    "What is the `getbestproofroot` method in Verus, and how does it work? Can you provide examples of how to use it?",
    "The `getbestproofroot` method in Verus is used to retrieve the best proof root of a chain, which is the most valid and up-to-date proof of the chain's state. This method takes an object as an input parameter, which contains an array of proof roots and the index of the last confirmed root.\n\nThe input object has the following properties:\n\n* `proofroots`: an array of proof roots, each with properties such as `version`, `type`, `systemid`, `height`, `stateroot`, `blockhash`, and `power`.\n* `lastconfirmed`: an integer indicating the index of the last confirmed root in the `proofroots` array.\n\nThe method returns an object with the following properties:\n\n* `bestindex`: an integer indicating the index of the best proof root that is not confirmed, or the confirmed index, or -1 if no suitable proof root is found.\n* `latestproofroot`: an object containing the latest valid proof root of the chain.\n* `currencystates`: an object containing the currency states of the target currency and published bridges.\n\nHere are some examples of how to use the `getbestproofroot` method:\n\nUsing the Verus command-line interface:\n```bash\nverus getbestproofroot \"{\"proofroots\":[{\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"}],\"lastconfirmed\":n}\"\n```\nUsing `curl` to send a JSON-RPC request:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[{\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"}],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nNote that in both examples, you need to replace the `n` placeholders with actual values, and adjust the `systemid` and `currencyidorname` properties to match your specific use case.",
    "equired) work, stake, or combination of the two for most-work/most-power rule\n  }\n .\n .\n .\n ]\n \"currencies\":[\"id1\"]     (array, optional) currencies to query for currency states\n \"lastconfirmed\":n       (int, required) index into the proof root array indicating the last confirmed root}\n```\n#### Result:\n\"bestindex\"           (int) index of best proof root not confirmed that is provided, confirmed index, or -1\"latestproofroot\"\n                 (object) latest valid proof root of chain\"currencystates\"\n                 (int) currency states of target currency and published bridges\nExamples:\n```bash\n> verus getbestproofroot \"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestproofroot\", \"params\": [\"{\"proofroots\":[\"version\":n,\"type\":n,\"systemid\":\"currencyidorname\",\"height\":n,\"stateroot\":\"hex\",\"blockhash\":\"hex\",\"power\":\"hex\"],\"lastconfirmed\":n}\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]