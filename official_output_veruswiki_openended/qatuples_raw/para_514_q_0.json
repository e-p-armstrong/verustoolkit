[
    "How do you sign transactions from multi-signature IDs, tokenize ID control, and create an identity with a fractional currency as its parent in Verus?",
    "**Signing Transactions from Multi-Signature IDs:**\nTo sign transactions from multi-signature IDs in Verus, you need to follow these steps:\n\n1. **Create a transaction**: Use the `sendcurrency` command to create a transaction from a multi-signature ID. This will return an operation ID.\n```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\n```\n2. **Get the raw transaction data**: Use the `z_getoperationstatus` command to get the raw hex transaction data.\n```\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\n3. **Sign the transaction**: Take the raw hex transaction data to each additional wallet containing the additional signing addresses/IDs and use the `signrawtransaction` command to sign the transaction.\n```\nverus signrawtransaction <raw_hex_transaction>\n```\n4. **Broadcast the signed transaction**: After the last necessary signature is applied, broadcast the signed transaction on the network using the `sendrawtransaction` command.\n```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```\n\n**Tokenizing ID Control (Next Generation NFT):**\nTo tokenize ID control in Verus, you need to define a currency with the `OPTION_NFT_TOKEN` and `OPTION_TOKEN` flags, and a max supply of 1 satoshi. The token can be either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n\nHere's an example of how to define such a currency:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent in Verus, you can use the `registernamecommitment` command with two additional positional arguments to specify a currency parent and a funding address. You can leave fields blank by using quotes `\"\"`.\n\nHere's an example of how to create an identity with a parent currency:\n```\nregisternamecommitment <username> <currency_parent> <funding_address>\n```\nFor example, to specify a parent currency `vrsc-btc` but no referrer, you can use:\n```\nregisternamecommitment <username> \"vrsc-btc\" <funding_address>\n```\nYou can now use `z_addresses` to fund the name commitment and identity registration.",
    "### Signing transactions from multi-signature IDs (testnet and mainnet)\nCreate transaction, get raw transaction data:\n ```\nverus sendcurrency <multi-signature-ID>@ '[{\"address\":\"<destination_address>\",\"amount\":<transaction_amount>}]'\nverus z_getoperationstatus <operation_id_returned_by_sendcurrency>\n```\nTake the raw hex transaction data provided by z_getoperationstatus to each additional wallet(s) containing the additional signing addresses/IDs:\n ```\nverus signrawtransaction <raw_hex_transaction>\n```\nAfter the last necessary signature is applied, broadcast on the network using:\n ```\nverus sendrawtransaction <raw_hex_signed_transaction>\n```### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
    "./raw_text_input_wiki/release_notes.md"
]