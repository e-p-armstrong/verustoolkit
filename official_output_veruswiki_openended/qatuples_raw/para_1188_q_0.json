[
    "How do you define a new currency called \"mycoin\" on the Verus platform, and what are the implications of setting the proof protocol to PROOF_CHAINID? Additionally, how do you define a PBaaS blockchain, including its properties and the bridge definition with overridable defaults?",
    "To define a new currency called \"mycoin\" on the Verus platform, you can use the `definecurrency` command with the following parameters:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nHere's a breakdown of the parameters:\n\n* `name`: The name of the new currency, \"mycoin\".\n* `options`: An integer that defines the properties of the currency, in this case set to 97.\n* `proofprotocol`: Set to 2, which corresponds to PROOF_CHAINID, allowing the controller of the chain ID to mint new coins.\n* `currencies`: An array of currencies that can be converted to \"mycoin\", in this case [\"vrsctest\", \"gold\"].\n* `minpreconversion`: An array of minimum amounts required for conversion, in this case [10000, 5.1298] for vrsctest and gold respectively.\n* `initialsupply`: The initial supply of \"mycoin\", set to 20,000 units.\n\nBy setting the proof protocol to PROOF_CHAINID, the controller of the chain ID can mint new coins as follows:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis allows the controller to mint new coins and distribute them to addresses on the network.\n\nTo define a PBaaS blockchain, you need to define its properties, including its name, options, currencies, conversions, eras, notaries, nodes, and gateway converter. Here's an example definition:\n```json\n{\n  \"name\": \"PBaaSChain\",\n  \"options\": 330,\n  \"currencies\": [\n    \"VRSCTEST\"\n  ],\n  \"conversions\": [\n    1\n  ],\n  \"eras\": [\n    {\n      \"reward\": 1200000000,\n      \"decay\": 0,\n      \"halving\": 0,\n      \"eraend\": 0\n    }\n  ],\n  \"notaries\": [\n    \"Notary1@\",\n    \"Notary2@\",\n    \"Notary3@\"\n  ],\n  \"minnotariesconfirm\": 2,\n  \"nodes\": [\n    {\n      \"networkaddress\": \"111.111.111.111:10000\",\n      \"nodeidentity\": \"Node1@\"\n    },\n    {\n      \"networkaddress\": \"111.111.111.112:10000\",\n      \"nodeidentity\": \"Node2@\"\n    }\n  ],\n  \"gatewayconvertername\": \"Bridge\",\n  \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults, which can be set as follows:\n```json\n{\n  \"currencies\": [\n    \"VRSCTEST\",\n    \"PBaaSChain\",\n    \"USD\"\n  ],\n  \"initialcontributions\": [\n    380228.12033701,\n    0,\n    1000000\n  ],\n  \"initialsupply\": 3000000\n}\n```\nThis definition includes the currencies supported by the bridge, the initial contributions for each currency, and the initial supply of the bridge's native token.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```## Defining a PBaaS blockchain\n```json\n{\n\"name\": \"PBaaSChain\",\n\"options\": 330,\n\"currencies\": [\n\"VRSCTEST\"\n],\n\"conversions\": [\n1\n],\n\"eras\": [\n{\n\"reward\": 1200000000,\n\"decay\": 0,\n\"halving\": 0,\n\"eraend\": 0\n}\n],\n\"notaries\": [\n\"Notary1@\",\n\"Notary2@\",\n\"Notary3@\",\n],\n\"minnotariesconfirm\": 2,\n\"nodes\": [\n{\n\"networkaddress\": \"111.111.111.111:10000\",\n\"nodeidentity\": \"Node1@\"\n},\n{\n \"networkaddress\": \"111.111.111.112:10000\",\n\"nodeidentity\": \"Node2@\"\n}\n],\n\"gatewayconvertername\": \"Bridge\",\n\"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n{\n\"currencies\": [\n\"VRSCTEST\",\n\"PBaaSChain\",\n\"USD\"\n],\n\"initialcontributions\": [\n380228.12033701,\n0,\n1000000\n],\n\"initialsupply\": 3000000\n}\n```",
    "./raw_text_input_wiki/release_notes.md"
]