[
    "How can I create and manage tokenized ID control and fractional currencies in Verus?",
    "In Verus, you can create and manage tokenized ID control and fractional currencies using specific commands and options. Here's a step-by-step guide on how to do it:\n\n**Tokenizing ID Control (Next-Generation NFT):**\nTo tokenize ID control, you need to define a currency with the `OPTION_NFT_TOKEN` and `OPTION_TOKEN` flags, and a maximum supply of 1 satoshi that is either pre-allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0. Here's an example command:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nThis command defines a currency named \"ID\" with the specified options and pre-allocation.\n\n**Creating an Identity with a Fractional Currency as its Parent:**\nTo create an identity with a fractional currency as its parent, you need to use the `registernamecommitment` command with two additional positional arguments to specify a currency parent and a funding address. Here's an example:\n```\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\nThis command registers a name commitment for an identity with a fractional currency parent.\n\n**Specifying the Parent in the Identity Definition:**\nTo specify the parent in the identity definition, you need to enter the parent currency in the identity registration command. Here's an example:\n```\nverus -chain=vrsctest registeridentity '{ID registration with name commitment}' false 0 zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n```\nThis command registers an identity with the specified parent currency and funding address.\n\nIn summary, Verus allows you to create and manage tokenized ID control and fractional currencies using specific commands and options. You can define a currency with tokenization options, create an identity with a fractional currency parent, and specify the parent in the identity definition.",
    "### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```### Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration```\n# verus -chain=vrsctest registernamecommitment name controladdress referral parent sourceoffunds\nverus -chain=vrsctest registernamecommitment subID RDnf7mH7RQki9b7PqdBD2Er6WXv3DTawGr \"\" vrsc-btc zs1s2mteau9tcalvk55cnepw3aq7dr6w7f447pqqkxczat3a02208d3ersx60wz9srw3nkd25ppfny\n````\nSpecify the parent in the identity definition. Enter `false` for `returntx` to sign and submit the id registration, `0` for the `feeoffer` to use the default fee, and the funding identity, transparent address, or z-address\n```\n# verus -chain=vrsctest registeridentity '{ID registration with name commitment}' returntx feeoffer sourceoffunds",
    "./raw_text_input_wiki/release_notes.md"
]