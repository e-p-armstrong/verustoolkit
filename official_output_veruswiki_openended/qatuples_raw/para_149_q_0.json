[
    "How do I create and verify digital signatures using Verus, and what are the different ways to do so?",
    "Verus provides a way to create and verify digital signatures, which is a crucial aspect of secure communication and authentication. A digital signature is a mathematical scheme that uses cryptography to validate the authenticity and integrity of a message, software, or digital document.\n\nTo create a digital signature using Verus, you can use the `signdata` command. This command takes two parameters: the identity of the signer and the message to be signed. Here's an example of how to create a signature:\n```\nverus signdata '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'\n```\nThis command will generate a digital signature based on the provided identity and message.\n\nTo verify a digital signature, you can use the `verifydata` command. This command takes three parameters: the identity of the signer, the message, and the signature to be verified. Here's an example of how to verify a signature:\n```\nverus verifydata '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\", \"signature\":\"base64sig\"}'\n```\nThis command will verify whether the provided signature is valid for the given identity and message.\n\nIn addition to using the command-line interface, you can also use JSON RPC to create and verify digital signatures. JSON RPC is a protocol that allows you to remotely call procedures on a server using JSON-encoded messages. Here's an example of how to create a signature using JSON RPC:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signdata\", \"params\": ['{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nThis command sends a JSON-encoded message to the Verus server, which will then generate a digital signature based on the provided identity and message.\n\nIn summary, Verus provides a convenient way to create and verify digital signatures using the command-line interface or JSON RPC. This enables secure authentication and validation of digital messages and documents.",
    "```\n#### Examples\nCreate the signature\n```bash\n> verus signdata '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'\n```\nVerify the signature\n```bash\n> verus verifydata '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\", \"signature\":\"base64sig\"}'\n```\nAs json rpc\n```bash\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signdata\", \"params\": ['{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]