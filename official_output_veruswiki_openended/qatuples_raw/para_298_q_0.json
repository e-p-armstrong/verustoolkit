[
    "What are the key concepts and features of a custom currency and a PBaaS blockchain in Verus, and how do you define and interact with them?",
    "In Verus, a custom currency and a PBaaS blockchain are two types of blockchain-based assets that can be created and managed using the Verus command-line interface.\n\n**Custom Currency:**\nA custom currency, such as \"mycoin\" in the example, is a blockchain-based asset that can be created and managed by a user or organization. The key features of a custom currency include:\n\n* **Proof protocol**: The proof protocol determines how new coins are minted and verified on the blockchain. In this case, the proof protocol is set to PROOF_CHAINID, which means that the controller of the chain ID can mint new coins.\n* **Currencies**: The currencies field specifies the currencies that can be converted to the custom currency. In this case, the custom currency can be converted from VRSCTEST and GOLD.\n* **Min preconversion**: The min preconversion field specifies the minimum amount of each currency required to convert to the custom currency.\n* **Initial supply**: The initial supply field specifies the initial amount of the custom currency that will be created.\n\nTo mint new coins, the controller of the chain ID can use the `sendcurrency` command, specifying the address to receive the new coins, the currency to mint, and the amount to mint.\n\n**PBaaS Blockchain:**\nA PBaaS blockchain, such as \"PBaaSChain\" in the example, is a more complex blockchain-based asset that allows for the creation of a decentralized application (dApp) or a decentralized finance (DeFi) platform. The key features of a PBaaS blockchain include:\n\n* **Name**: The name field specifies the name of the PBaaS blockchain.\n* **Options**: The options field specifies configuration options for the PBaaS blockchain.\n* **Currencies**: The currencies field specifies the currencies that can be used on the PBaaS blockchain.\n* **Conversions**: The conversions field specifies the conversion rates between the currencies on the PBaaS blockchain.\n* **Eras**: The eras field specifies the block reward, reward decay, halving, and end of each \"era\" in the PBaaS blockchain's lifecycle.\n* **Notaries**: The notaries field specifies the VerusIDs that will serve as notaries on the PBaaS blockchain.\n* **Min notaries confirm**: The min notaries confirm field specifies the minimum number of notaries required to confirm a block.\n* **Nodes**: The nodes field specifies the network addresses and node identities of the nodes on the PBaaS blockchain.\n* **Gateway converter name**: The gateway converter name field specifies the name of the bridge that connects the PBaaS blockchain to other blockchains.\n* **Gateway converter issuance**: The gateway converter issuance field specifies the initial supply of the bridge's native token.\n\nThe bridge definition has overridable defaults, which specify the currencies, initial contributions, and initial supply of the bridge.\n\nTo define a PBaaS blockchain, you can use the `definecurrency` command, specifying the JSON object that defines the PBaaS blockchain's properties.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```#### Defining a PBaaS blockchain\n```json\n {\n \"name\": \"PBaaSChain\",\n \"options\": 264,\n \"currencies\": [\n  \"VRSCTEST\"\n ],\n \"conversions\": [\n  1\n ],\n \"eras\": [\n  {\n   \"reward\": 1200000000,\n   \"decay\": 0,\n   \"halving\": 0,\n   \"eraend\": 0\n  }\n ],\n \"notaries\": [\n  \"Notary1@\",\n  \"Notary2@\",\n  \"Notary3@\"\n ],\n \"minnotariesconfirm\": 2,\n \"nodes\": [\n  {\n   \"networkaddress\": \"111.111.111.111:10000\",\n   \"nodeidentity\": \"Node1@\"\n  },\n  {\n   \"networkaddress\": \"111.111.111.112:10000\",\n   \"nodeidentity\": \"Node2@\"\n  }\n ],\n \"gatewayconvertername\": \"Bridge\",\n \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n {\n \"currencies\": [\n  \"VRSCTEST\",\n  \"PBaaSChain\",\n  \"USD\"\n ],\n \"initialcontributions\": [\n  380228.12033701,\n  0,\n  1000000\n ],\n \"initialsupply\": 3000000\n}\n```",
    "./raw_text_input_wiki/release_notes.md"
]