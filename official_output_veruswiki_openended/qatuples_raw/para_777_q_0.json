[
    "How do I create a tokenized ID control, also known as a next-generation NFT, and what are some other important updates to the Verus protocol?",
    "Tokenized ID control, also known as next-generation NFT, is a feature of the Verus protocol that allows for the creation of unique digital assets. To create a tokenized ID control, you need to define a currency with specific flags and parameters.\n\nHere's an example of how to create a tokenized ID control using the command line:\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```\nIn this example, the `definecurrency` command is used to create a new currency with the name \"ID\". The `options` flag is set to 2080, which enables the tokenized ID control feature. The `preallocations` parameter specifies the initial allocation of the token, and the `maxpreconversion` parameter sets the maximum amount that can be pre-converted to this token.\n\nIn addition to this feature, there are some other important updates to the Verus protocol. For instance, it is now possible to burn reserves into a liquidity basket, and there have been fixes to issues with cross-chain currency definition import/export.\n\nAnother update is the ability to create an identity with a fractional currency as its parent. This can be done using the `registernamecommitment` command, which now takes two additional positional arguments to specify a currency parent and a funding address.\n\nIt's also important to note that if you need to reset your testnet, you can do so by deleting specific directories and restarting the testnet daemon. The directories to delete vary depending on your operating system, but they typically include `~/.Komodo/vrsctest` and `~/.verustest` on Linux, `~/Library/Application Support/Komodo/vrsctest` and `~/Library/Application Support/VerusTest` on Mac OS, and `%AppData%\\Roaming\\Komodo\\vrsctest\\` and `%AppData%\\Roaming\\VerusTest` on Windows 10.",
    "In addition, we have continued to harden the protocol and fixed issues with cross-chain currency definition import/export and the new ability to burn reserves into a liquidity basket that were reported in the current testnet.The rest of these release notes are the same as the prior release. Drop by pbaas-development to start building your vision on Verus while helping get PBaaS ready for mainnet!### Tokenizing ID control (next generation NFT):\nThe currency definition have flags OPTION_NFT_TOKEN + OPTION_TOKEN, and a max supply of 1 satoshi that is either pre allocated or pre-converted to. If the token is pre-allocated, then the maximum pre-conversion must be 0.\n```\nverus -chain=vrsctest definecurrency '{\"name\":\"ID\",\"options\":2080,\"preallocations\":[{\"ControlTokenRecipient@\":0.00000001}],\"maxpreconversion\":[0]}'\n```## Testnet Reset\nTo reset your testnet make sure Verus is closed (and no testnet daemon running) and delete the following directories, then restart the testnet daemon (or relaunch Verus Desktop, deactivate verustest and re-add verustest native):- Linux: `~/.Komodo/vrsctest`, `~/.verustest`\n- Mac OS: `~/Library/Application Support/Komodo/vrsctest`, `~/Library/Application\\ Support/VerusTest`\n- Windows 10: `%AppData%\\Roaming\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest` or `%AppData%\\Komodo\\vrsctest\\`, `%AppData%\\Roaming\\VerusTest`# Creating an identity with a fractional currency as its parent\n`registernamecommitment` now takes two more positional arguments to specify a currency parent and a funding address. Use quotes `\"\"` to leave fields blank, the example below specifies a parent currency, vrsc-btc , but no referrer. We're now able to use z_addresses to fund the name commitment and identity registration",
    "./raw_text_input_wiki/release_notes.md"
]