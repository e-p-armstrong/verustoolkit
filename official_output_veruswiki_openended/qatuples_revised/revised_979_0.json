[
    "How do I define a new currency in Verus and set up its properties, including the ability for the controller of the chain ID to mint new coins?",
    "To define a new currency in Verus, you can use the `definecurrency` command on the command line. This command allows you to set up various properties of the currency, including its name, options, proof protocol, currencies it can be converted from, minimum conversion amounts, and initial supply.\n\nHere's an example of how to define a new currency called \"mycoin\":\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nLet's break down what each part of this command does:\n\n* `./verus -chain=VRSCTEST` specifies that we want to interact with the Verus test chain.\n* `definecurrency` is the command to define a new currency.\n* The JSON object `{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}` specifies the properties of the new currency:\n\t+ `name` is the name of the currency, in this case \"mycoin\".\n\t+ `options` is a configurable integer, in this case set to 97.\n\t+ `proofprotocol` is set to 2, which is PROOF_CHAINID. This means that the controller of the chain ID can mint new coins.\n\t+ `currencies` lists the currencies that can be converted to \"mycoin\", in this case \"vrsctest\" and \"gold\".\n\t+ `minpreconversion` specifies the minimum amounts of each currency required to convert to \"mycoin\".\n* `initialsupply` specifies the initial supply of \"mycoin\", in this case 20,000 units.\n\nOnce you've defined the currency, the controller of the chain ID can mint new coins using the `sendcurrency` command, like this:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\".",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]