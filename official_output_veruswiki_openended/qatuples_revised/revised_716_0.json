[
    "How can I create a new currency on the Verus platform, and what are some of the considerations and steps involved in defining and launching a new currency?",
    "To create a new currency on the Verus platform, you need to have an ID with the same name as the currency you want to create. The controller of this ID is the only one who can create a currency with that name, and they can only do so once. \n\nLet's take the example of creating two currencies: `gold@` and `mycoin@`. \n\nTo create the `gold@` currency, you would use the `definecurrency` command, specifying the name, options, and other properties of the currency. For example:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\n\nThis command defines a new currency called `gold` with specific properties, such as the conversion rate to `vrsctest` and the minimum preconversion amount. \n\nBefore launching the currency, you need to fund the identity of the currency with at least 10 `VRSCTEST` and send yourself some tokens to start with. The currency launch will start 50 blocks from when the transaction is made and will require 1000 `VRSCTEST` to be preconverted at a rate of 0.01 `VRSCTEST` per `GOLD` in order to launch.\n\nAfter the currency is launched, the only way to create new tokens is through a centralized issuance option. To convert `VRSCTEST` to `GOLD`, you can use the `sendcurrency` command. \n\nSimilarly, you can create another currency, `mycoin@`, with its own set of properties and launch it using a similar process. \n\nIt's important to note that the Verus platform allows for decentralized and trustless currency creation and management, with the ability to map currencies to specific, auditable stores of value, such as gold.",
    "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to\ninitiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch.\nall of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation\nin the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches.\nAfter it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:\n```\n./verus -chain=VRSCTEST sen",
    "./raw_text_input_wiki/release_notes.md"
]