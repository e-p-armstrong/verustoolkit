[
    "What are the `getaddressmempool` and `getaddresstxids` commands in Verus, and how do I use them to retrieve information about a specific address?",
    "In Verus, there are two commands that allow you to retrieve information about a specific address: `getaddressmempool` and `getaddresstxids`. Both of these commands require the `addressindex` to be enabled.\n\n**`getaddressmempool` Command:**\nThe `getaddressmempool` command returns all mempool deltas for a specific address. This means it shows all the transactions that are currently in the mempool (the pool of unconfirmed transactions) and are related to the specified address.\n\nTo use this command, you need to provide a JSON object with the following arguments:\n\n* `addresses`: an array of base58check encoded addresses for which you want to retrieve the mempool deltas.\n* `friendlynames`: an optional boolean argument that, if set to `true`, includes an additional array of friendly names keyed by currency i-addresses.\n* `verbosity`: an optional integer argument that, if set to 1, includes output information for spends, including all reserve amounts and destinations.\n\nThe command will return an array of JSON objects, each containing information about a specific transaction in the mempool, including:\n\n* `address`: the base58check encoded address related to the transaction.\n* `txid`: the transaction ID.\n* `index`: the related input or output index.\n* `satoshis`: the difference of satoshis (the smallest unit of Verus currency).\n* `timestamp`: the time the transaction entered the mempool (in seconds).\n* `prevtxid`: the previous transaction ID (if the transaction is spending).\n* `prevout`: the previous transaction output index (if the transaction is spending).\n\nHere's an example of how to use the `getaddressmempool` command:\n```bash\n> verus getaddressmempool '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}'\n```\n\n**`getaddresstxids` Command:**\nThe `getaddresstxids` command returns the transaction IDs for a specific address or a list of addresses. This command is similar to `getaddressmempool`, but it only returns the transaction IDs, without any additional information.\n\nTo use this command, you need to provide a JSON object with a single argument: `addresses`, which is an array of base58check encoded addresses for which you want to retrieve the transaction IDs.\n\nHere's an example of how to use the `getaddresstxids` command:\n```bash\n> verus getaddresstxids '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}'\n```\n\nBy using these two commands, you can retrieve detailed information about the transactions related to a specific address in Verus.",
    "### `getaddressmempool`\nReturns all mempool deltas for an address (requires addressindex to be enabled).#### Arguments:\n```json\n{\n \"addresses\"\n  [\n   \"address\" (string) The base58check encoded address\n   ,...\n  ]\n  \"friendlynames\"  (boolean) Include additional array of friendly names keyed by currency i-addresses\n  \"verbosity\"    (number) (default == 0), if 1, include output information for spends, including all reserve amounts and destinations\n}\n```\n#### Result:\n```json\n[\n {\n  \"address\" (string) The base58check encoded address\n  \"txid\" (string) The related txid\n  \"index\" (number) The related input or output index\n  \"satoshis\" (number) The difference of satoshis\n  \"timestamp\" (number) The time the transaction entered the mempool (seconds)\n  \"prevtxid\" (string) The previous txid (if spending)\n  \"prevout\" (string) The previous transaction output index (if spending)\n }\n]\n```\nExamples:\n```bash\n> verus getaddressmempool '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}'\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressmempool\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```### `getaddresstxids`\nReturns the txids for an address(es) (requires addressindex to be enabled).",
    "./raw_text_input_wiki/clifaq-02_verus_commands.md"
]