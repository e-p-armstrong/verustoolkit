[
    "How do I define a new currency and a PBaaS (Private Blockchain as a Service) blockchain using the Verus command line, and what are the key components of these definitions?",
    "To define a new currency and a PBaaS blockchain using the Verus command line, you need to use the `definecurrency` command and provide the necessary parameters in JSON format.\n\n**Defining a New Currency:**\nTo define a new currency, you need to specify its name, options, proof protocol, currencies it can be converted to, minimum pre-conversion amounts, and initial supply. The proof protocol determines how the currency is minted and verified. In this case, we set the proof protocol to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins.\n\nHere's an example of how to define a new currency called \"mycoin\":\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nWith this definition, the controller of the chain ID can mint new coins using the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n**Defining a PBaaS Blockchain:**\nTo define a PBaaS blockchain, you need to specify its name, options, currencies, conversions, eras, notaries, minimum notaries to confirm, nodes, gateway converter name, and gateway converter issuance.\n\nHere's an example of how to define a PBaaS blockchain called \"PBaaSChain\":\n```json\n{\n  \"name\": \"PBaaSChain\",\n  \"options\": 264,\n  \"currencies\": [\n    \"VRSCTEST\"\n  ],\n  \"conversions\": [\n    1\n  ],\n  \"eras\": [\n    {\n      \"reward\": 1200000000,\n      \"decay\": 0,\n      \"halving\": 0,\n      \"eraend\": 0\n    }\n  ],\n  \"notaries\": [\n    \"Notary1@\",\n    \"Notary2@\",\n    \"Notary3@\"\n  ],\n  \"minnotariesconfirm\": 2,\n  \"nodes\": [\n    {\n      \"networkaddress\": \"111.111.111.111:10000\",\n      \"nodeidentity\": \"Node1@\"\n    },\n    {\n      \"networkaddress\": \"111.111.111.112:10000\",\n      \"nodeidentity\": \"Node2@\"\n    }\n  ],\n  \"gatewayconvertername\": \"Bridge\",\n  \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults, which can be specified separately:\n```json\n{\n  \"currencies\": [\n    \"VRSCTEST\",\n    \"PBaaSChain\",\n    \"USD\"\n  ],\n  \"initialcontributions\": [\n    380228.12033701,\n    0,\n    1000000\n  ],\n  \"initialsupply\": 3000000\n}\n```\nThese definitions allow you to create a new currency and a PBaaS blockchain with specific properties and configurations.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```### Defining a PBaaS blockchain\n```json\n {\n \"name\": \"PBaaSChain\",\n \"options\": 264,\n \"currencies\": [\n  \"VRSCTEST\"\n ],\n \"conversions\": [\n  1\n ],\n \"eras\": [\n  {\n   \"reward\": 1200000000,\n   \"decay\": 0,\n   \"halving\": 0,\n   \"eraend\": 0\n  }\n ],\n \"notaries\": [\n  \"Notary1@\",\n  \"Notary2@\",\n  \"Notary3@\",\n ],\n \"minnotariesconfirm\": 2,\n \"nodes\": [\n  {\n   \"networkaddress\": \"111.111.111.111:10000\",\n   \"nodeidentity\": \"Node1@\"\n  },\n  {\n   \"networkaddress\": \"111.111.111.112:10000\",\n   \"nodeidentity\": \"Node2@\"\n  }\n ],\n \"gatewayconvertername\": \"Bridge\",\n \"gatewayconverterissuance\": 1000000\n}\n```\nThe bridge definition has overridable defaults\n```json\n {\n \"currencies\": [\n  \"VRSCTEST\",\n  \"PBaaSChain\",\n  \"USD\"\n ],\n \"initialcontributions\": [\n  380228.12033701,\n  0,\n  1000000\n ],\n \"initialsupply\": 3000000\n}\n```",
    "./raw_text_input_wiki/release_notes.md"
]