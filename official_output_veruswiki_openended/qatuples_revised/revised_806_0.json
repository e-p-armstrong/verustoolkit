[
    "How can I create a new currency on the Verus blockchain, and what are the implications of setting the proof protocol to PROOF_CHAINID?",
    "To create a new currency on the Verus blockchain, you can use the `definecurrency` command. This command allows you to define the properties of the new currency, such as its name, options, proof protocol, and initial supply.\n\nHere's an example of how to create a new currency called \"mycoin\":\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nIn this example, we're creating a new currency called \"mycoin\" with the following properties:\n\n* `name`: The name of the currency, which is \"mycoin\".\n* `options`: An integer that defines various options for the currency, such as its behavior and restrictions. In this case, it's set to 97.\n* `proofprotocol`: The proof protocol used to secure the currency. In this case, it's set to 2, which corresponds to PROOF_CHAINID.\n* `currencies`: An array of currencies that can be converted to \"mycoin\". In this case, it's [\"vrsctest\", \"gold\"].\n* `minpreconversion`: An array that defines the minimum amounts of each currency required to convert to \"mycoin\". In this case, it's [10000, 5.1298].\n* `initialsupply`: The initial supply of \"mycoin\" units, which is set to 20,000.\n\nBy setting the `proofprotocol` to PROOF_CHAINID (2), we're allowing the controller of the chain ID to mint new coins. This means that the controller can create new units of \"mycoin\" and distribute them as needed.\n\nTo mint new coins, the controller can use the `sendcurrency` command, like this:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\". The `mintnew` parameter is set to 1, which indicates that new coins should be minted. The `amount` parameter specifies the number of coins to mint.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]