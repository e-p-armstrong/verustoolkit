[
    "What are the requirements and considerations for creating and connecting to a test PBaaS chain using Verus, and what are the implications of the disclaimer provided?",
    "When creating and connecting to a test PBaaS chain using Verus, there are several requirements and considerations to keep in mind.\n\n**Creating a Chain:**\nTo create a chain, you need to have VRSCTEST in your wallet. The chain definition requires a minimum of 500 blocks worth of notarizations, with a minimum of 0.01 VRSCTEST per block of notarization. Additionally, the chain definition can have a maximum of 3 eras. You can define a chain using the `definechain` command, providing a JSON object with the necessary information, such as the chain name, eras, notarization reward, billing period, and node addresses.\n\n**Connecting to a Chain:**\nOnce a chain is created, anyone running the local VRSCTEST chain can connect to the defined chain using the command `./verusd -chain=CHAINNAME`. On the first connection, a local config file is created, and VRSCTEST is no longer needed to connect. However, VRSCTEST is still required to merge mine.\n\n**Config Files:**\nThe config files for each chain are stored in the `.verustest/PBAAS/CHAINNAME` directory, which is the home directory for a PBaaS chain. The presence of a correct config file enables the chain to load as an independent chain.\n\n**Disclaimer:**\nThe disclaimer provided emphasizes that the software is provided \"as is\", without warranty of any kind, and the authors or copyright holders are not liable for any claims, damages, or other liability arising from the use of the software. This is a test release intended for testing and development with public blockchains as a service (PBaaS), and it does not support PBaaS on mainnet. It is not an official release, and users should use it at their own risk, without using it as their main wallet.\n\nIn summary, creating and connecting to a test PBaaS chain using Verus requires careful consideration of the chain definition, node addresses, and config files, while also being aware of the disclaimer and the risks associated with using this test release.",
    "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\nPlease note that this is a test release intended to use for testing and development with public blockchains as a service (PBaaS). Although this version does also work with Verus mainnet, it does not support PBaaS on mainnet and is not an official release. As always, use at your own risk. Do not use as main wallet**Sample chain definition**:\n```\n./verusd -chain=VRSCTEST definechain '{ \"name\":\"SOMECOIN\", \"eras\": [{\"reward\" : 10000000000}], \"notarizationreward\" : 1440000000, \"billingperiod\" : 1440, \"nodes\" : [{\"nodeaddress\" : \"127.0.0.1:2500\", \"paymentaddress\" : \"\"}, {\"nodeaddress\" : \"127.0.0.1:2501\", \"paymentaddress\" : \"RDyDzC5JB66Y29fzBkamywqEn1PJXTzj8B\"}]}'\n```\nMaximum of 3 eras\nMinimum 500 blocks worth of notarizations.\nMinimum of 0.01 VRSCTEST per block of notarization.\nVRSCTEST are needed in wallet to make a chain.**Once a chain is made, anyone running the local VRSCTEST chain can connect to any defined chain with the command:**\n```\n./verusd-chain=SOMECOIN\n```\nOn first connection, a local config file is created, and VRSCTEST will not need to run to connect. However, it will be needed to merge mine.The presence of a correct config file for any chain, which are kept in .verustest/PBAAS/CHAINNAME, which is the home directory for a PBaaS chain, enables the chain to load as an independent chain.# Disclaimer",
    "./raw_text_input_wiki/release_notes.md"
]