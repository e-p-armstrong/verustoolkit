[
    "What are some key features of VerusIDs, and how does the VerusHash algorithm work to equalize performance between FPGAs and CPUs?",
    "VerusIDs have several key features that make them unique and powerful. Two of these features are recoverability and privacy.\n\n**Recoverability:** Each VerusID has a separate recovery authority, which defaults to the ID itself. This authority can recover the ID by redefining its primary state and recovery state, but it cannot modify the revocation state or vice versa, unless both are controlled by the same underlying authority.\n\n**Privacy:** Each VerusID contains a set of zero-knowledge private addresses, which can be used for various purposes such as messaging, financial transactions, or voting. Additionally, each ID has a content map of key-value hashes, which can be used to provide private yet selectively provable claims and attestations, or selectively provable components of a strong identity, attested to with a quantum secure signature when available.\n\nOn the other hand, the VerusHash algorithm is a critical component of the Verus network. It is designed to equalize the performance of FPGAs (Field-Programmable Gate Arrays) and CPUs (Central Processing Units) when it comes to mining and staking on the Verus network.\n\n**VerusHash 2.1:** The latest version of the VerusHash algorithm, VerusHash 2.1, builds upon the success of VerusHash 2.0, which was the first algorithm to significantly equalize FPGA dominance over CPUs. VerusHash 2.1 introduces an adjustment to the equalization technology, which is expected to tilt the balance more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. This allows for a more level playing field between FPGAs and CPUs, promoting a more decentralized and balanced network.\n\nBy equalizing performance between FPGAs and CPUs, VerusHash 2.1 promotes a more decentralized and balanced network, where anyone can participate in mining and staking, regardless of the type of hardware they use.",
    "- **Recoverable** -- each ID also includes a separate recovery authority, which also defaults to self, and which can recover the identity through redefining its primary state and the recovery state as well, though it cannot modify the revocation state, or vice versa, unless they are both controlled by the same underlying authority.- **Private** - Each ID contains a set of zero-knowledge private addresses, which can be used as messaging, financial, or voting endpoints, and each ID also contains a content map of key-value hashes, intended to be used alongside applications and various identity policies to provide everything from private yet selectively provable claims and attestations to selectively provable components of a strong passport, attested to with a quantum secure signature when that is available.# VerusHash 2.1\nVerusHash 2.0 was the first algorithm to significantly equalize FPGAs dominance over CPUs, once they were introduced on the Verus network. While FPGAs were intentionally not blocked completely, which would simply drive the performance battle to the higher end and further into secret, the VerusHash 2.0 algorithm was developed to explicitly equalize FPGAs and modern CPUs and has met its original goals in keeping FPGA performance for the price under 2x of CPU. VerusHash 2.1 introduces an adjustment to the equalization technology, which we expect to tilt the balance a bit more favorably towards CPUs, while still enabling FPGAs to operate on the hash algorithm with minor modifications. Verus Developers have proactively reached out to FPGA manufacturers and made the new algorithm available to them, so that everyone will have an opportunity to mine and stake when the Verus economy starts to roll and identity rewards, which will not inflate the currency, but should far exceed the potential for block rewards, begin streaming from the network.# Disclaimer",
    "./raw_text_input_wiki/release_notes.md"
]