[
    "How do you define a new currency on the Verus network, and what does it mean to set the proof protocol to PROOF_CHAINID? What are the implications of this setting, and how can the controller of the chain ID use it to mint new coins?",
    "To define a new currency on the Verus network, you can use the `definecurrency` command with the required parameters. For example, to define a new currency called \"mycoin\", you would use the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn this command, we're specifying the name of the currency, its options, proof protocol, currencies that can be converted to it, minimum pre-conversion amounts, and initial supply.\n\nThe `proofprotocol` parameter is set to 2, which corresponds to PROOF_CHAINID. This setting means that the controller of the chain ID has the ability to mint new coins. This is a powerful feature that allows the controller to create new coins and distribute them as needed.\n\nTo mint new coins, the controller of the chain ID can use the `sendcurrency` command with the `mintnew` parameter set to 1. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command would mint 10,000 new \"mycoin\" units and send them to the address \"mike@\". The controller of the chain ID can use this feature to manage the supply of \"mycoin\" units and ensure the smooth operation of the currency.\n\nIt's important to note that the PROOF_CHAINID setting gives the controller of the chain ID significant control over the currency, and should be used carefully to avoid abuse or mismanagement of the currency.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]