[
    "How do you define a new currency on the Verus platform, and what are the implications of setting the `proofprotocol` to `PROOF_CHAINID`?",
    "Defining a new currency on the Verus platform involves using the `definecurrency` command with specific parameters. In the example provided, the command is:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nThis command defines a new currency called \"mycoin\" with the following properties:\n\n* `name`: the name of the currency, which is \"mycoin\" in this case.\n* `options`: a configurable integer, set to 33 in this example.\n* `proofprotocol`: the proof protocol used to secure the currency, set to 2 (PROOF_CHAINID) in this case.\n* `currencies`: an array of currencies that can be converted to \"mycoin\", which includes \"vrsctest\" and \"gold\" in this example.\n* `minpreconversion`: an array of minimum amounts required to convert from each currency to \"mycoin\".\n* `initialsupply`: the initial supply of \"mycoin\" units, set to 20,000 in this example.\n\nSetting the `proofprotocol` to `PROOF_CHAINID` (value 2) means that the controller of the chain ID can mint new coins. This allows the controller to create new units of the currency, effectively increasing the total supply. To mint new coins, the controller can use the `sendcurrency` command, as shown in the example:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\nThis command mints 10,000 new units of \"mycoin\" and sends them to the address \"mike@\". The `mintnew` parameter indicates that new coins should be minted, and the `amount` parameter specifies the number of units to mint.",
    "```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
    "./raw_text_input_wiki/release_notes.md"
]