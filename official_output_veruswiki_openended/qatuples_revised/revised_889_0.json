[
    "How do I create a new currency on the Verus platform, and what are some possible use cases for these currencies?",
    "To create a new currency on the Verus platform, you need to have an ID with the same name as the currency you want to create. The controller of this ID is the only one who can create a currency with that name, and they can only do so once. This means that if you want to create a currency called \"gold\", you need to have an ID called \"gold@\".\n\nOnce you have the necessary ID, you can define the currency using the `definecurrency` command. For example, let's say you want to create a currency called \"gold\" that can be converted from VRSCTEST at a rate of 0.01. You can do this with the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines a new currency called \"gold\" with the specified options and conversion rates. The `preallocations` property allows you to pre-allocate a certain amount of the currency to a specific ID, in this case, \"mike@\".\n\nNow, let's talk about some possible use cases for these currencies. One potential use case is to create a currency that is backed by a specific, auditable store of gold. This could be done by creating a currency called \"gold\" and then mapping it to a specific store of gold in a way that can be widely trusted.\n\nAnother potential use case is to create a token that represents a specific utility or product value. For example, let's say you have a business called \"my\" and you want to offer a token that can be redeemed for a specific product or service. You can create a currency called \"mycoin\" and then define it in a way that attributes the token with a specific utility or product value. This could be done in a way that is similar to a Kickstarter, where the business offers to attribute the coins with a specific value if the purchase exceeds a certain level.\n\nThese are just a few examples of the many possible use cases for currencies on the Verus platform. The key idea is that you can create a currency that represents a specific value or utility, and then use that currency to facilitate transactions and interactions within your ecosystem.",
    "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\nSo, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@,\nthat I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold.\nI also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level.\nFirst, I could define the currency \"gold\" as follows:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nof course, since this is a test currency, I send myself some to start. The identity of the curre",
    "./raw_text_input_wiki/release_notes.md"
]