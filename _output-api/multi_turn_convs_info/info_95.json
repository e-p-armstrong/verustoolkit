[
    [
        [
            "What is the purpose of the `getidentitieswithaddress` command in Verus?",
            "The `getidentitieswithaddress` command is used to retrieve a list of identities that contain a specific address in their primary addresses. It allows you to search for identities that have a particular address associated with them, with optional filters for searching within a specific block height range or only considering active ID UTXOs.",
            "getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' Arguments {   \"address\":\"validaddress\"  (string, required) returns all identities that contain the specified address in its primary addresses   \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only   \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)   \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height } Result: [                 (array) array of matching identities  {identityobject},        (object) identity with additional member \"txout\" with txhash and output index  ... ] Examples: > verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getidentitieswithaddress"
        ],
        [
            "What are the required and optional arguments for the `getidentitieswithaddress` command?",
            "The required argument for the `getidentitieswithaddress` command is:\n\n* `address`: a string representing the valid address to search for in identities.\n\nThe optional arguments are:\n\n* `fromheight`: a number specifying the block height to start searching from (default is 0).\n* `toheight`: a number specifying the block height to stop searching at (default is 0, meaning no limit).\n* `unspent`: a boolean indicating whether to only return active ID UTXOs as of the current block height (default is false).",
            "getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' Arguments {   \"address\":\"validaddress\"  (string, required) returns all identities that contain the specified address in its primary addresses   \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only   \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)   \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height } Result: [                 (array) array of matching identities  {identityobject},        (object) identity with additional member \"txout\" with txhash and output index  ... ] Examples: > verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getidentitieswithaddress"
        ],
        [
            "What is the format of the result returned by the `getidentitieswithaddress` command?",
            "The result returned by the `getidentitieswithaddress` command is an array of objects, where each object represents an identity that matches the search criteria. Each identity object has an additional member called `txout` that contains the transaction hash and output index.",
            "getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' Arguments {   \"address\":\"validaddress\"  (string, required) returns all identities that contain the specified address in its primary addresses   \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only   \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)   \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height } Result: [                 (array) array of matching identities  {identityobject},        (object) identity with additional member \"txout\" with txhash and output index  ... ] Examples: > verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getidentitieswithaddress"
        ],
        [
            "How can I use the `getidentitieswithaddress` command using the Verus command-line interface?",
            "You can use the `getidentitieswithaddress` command using the Verus command-line interface by running the following command:\n\n```\nverus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'\n```\n\nReplace `validprimaryaddress` with the actual address you want to search for, and `height` with the desired block height values.",
            "getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' Arguments {   \"address\":\"validaddress\"  (string, required) returns all identities that contain the specified address in its primary addresses   \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only   \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)   \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height } Result: [                 (array) array of matching identities  {identityobject},        (object) identity with additional member \"txout\" with txhash and output index  ... ] Examples: > verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getidentitieswithaddress"
        ],
        [
            "How can I use the `getidentitieswithaddress` command using the Verus JSON-RPC interface?",
            "You can use the `getidentitieswithaddress` command using the Verus JSON-RPC interface by sending a JSON-RPC request to the Verus server. Here's an example using `curl`:\n\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": [{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}]} 'H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nReplace `myusername` with your actual username, `validprimaryaddress` with the actual address you want to search for, and `height` with the desired block height values.",
            "getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' Arguments {   \"address\":\"validaddress\"  (string, required) returns all identities that contain the specified address in its primary addresses   \"fromheight\":n        (number, optional, default=0) Search for qualified identities modified from this height forward only   \"toheight\":n         (number, optional, default=0) Search for qualified identities only up until this height (0 == no limit)   \"unspent\":bool        (bool, optional, default=false) if true, this will only return active ID UTXOs as of the current block height } Result: [                 (array) array of matching identities  {identityobject},        (object) identity with additional member \"txout\" with txhash and output index  ... ] Examples: > verus getidentitieswithaddress '{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitieswithaddress\", \"params\": ['{\"address\":\"validprimaryaddress\",\"fromheight\":height, \"toheight\":height, \"unspent\":false}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getidentitieswithaddress"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9b60d4e6-a357-4b8e-ae9a-d22e9dc03898"
]