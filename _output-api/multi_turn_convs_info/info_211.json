[
    [
        [
            "What is the purpose of the `submitimports` command in Verus?",
            "The `submitimports` command is used to accept a set of exports from another system and post them to the VRSC network.",
            "submitimports '{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}' Accepts a set of exports from another system to post to the VRSC network. Arguments  {   \"sourcesystemid\":\"systemid\"    ()   \"notarizationtxid\":\"txid\"     ()   \"notarizationtxoutnum\":n       ()   \"exports\": [{    \"height\": n,    \"txid\": \"hexid\",    \"txoutnum\": n,    \"partialtransactionproof\": \"hexstr\",    \"transfers\": [{transfer1}, {transfer2},...]   }, ...]  } Result:  [{   \"currency\": \"currencyid\"   \"txid\": \"hexid\",   \"txoutnum\": n  }, ...] Examples: > verus submitimports {\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]} > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitimports\", \"params\": [{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/submitimports"
        ],
        [
            "What are the required arguments for the `submitimports` command?",
            "The required arguments for the `submitimports` command are:\n\n* `sourcesystemid`: the ID of the system from which the exports are coming\n* `notarizationtxid`: the transaction ID of the notarization transaction\n* `notarizationtxoutnum`: the output number of the notarization transaction\n* `exports`: an array of export objects, each containing:\n\t+ `height`: the block height of the export\n\t+ `txid`: the transaction ID of the export\n\t+ `txoutnum`: the output number of the export\n\t+ `partialtransactionproof`: the partial transaction proof of the export\n\t+ `transfers`: an array of transfer objects",
            "submitimports '{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}' Accepts a set of exports from another system to post to the VRSC network. Arguments  {   \"sourcesystemid\":\"systemid\"    ()   \"notarizationtxid\":\"txid\"     ()   \"notarizationtxoutnum\":n       ()   \"exports\": [{    \"height\": n,    \"txid\": \"hexid\",    \"txoutnum\": n,    \"partialtransactionproof\": \"hexstr\",    \"transfers\": [{transfer1}, {transfer2},...]   }, ...]  } Result:  [{   \"currency\": \"currencyid\"   \"txid\": \"hexid\",   \"txoutnum\": n  }, ...] Examples: > verus submitimports {\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]} > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitimports\", \"params\": [{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/submitimports"
        ],
        [
            "What is the result of a successful `submitimports` command?",
            "The result of a successful `submitimports` command is an array of objects, each containing:\n\n* `currency`: the ID of the currency being transferred\n* `txid`: the transaction ID of the transfer\n* `txoutnum`: the output number of the transfer",
            "submitimports '{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}' Accepts a set of exports from another system to post to the VRSC network. Arguments  {   \"sourcesystemid\":\"systemid\"    ()   \"notarizationtxid\":\"txid\"     ()   \"notarizationtxoutnum\":n       ()   \"exports\": [{    \"height\": n,    \"txid\": \"hexid\",    \"txoutnum\": n,    \"partialtransactionproof\": \"hexstr\",    \"transfers\": [{transfer1}, {transfer2},...]   }, ...]  } Result:  [{   \"currency\": \"currencyid\"   \"txid\": \"hexid\",   \"txoutnum\": n  }, ...] Examples: > verus submitimports {\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]} > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitimports\", \"params\": [{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/submitimports"
        ],
        [
            "How can I submit imports to the VRSC network using the command line?",
            "You can submit imports to the VRSC network using the command line by running the following command:\n```\nverus submitimports '{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]},...]}'\n```\nAlternatively, you can use the `curl` command to submit imports via the JSON-RPC API:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitimports\", \"params\": [{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]},...]}]}' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "submitimports '{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}' Accepts a set of exports from another system to post to the VRSC network. Arguments  {   \"sourcesystemid\":\"systemid\"    ()   \"notarizationtxid\":\"txid\"     ()   \"notarizationtxoutnum\":n       ()   \"exports\": [{    \"height\": n,    \"txid\": \"hexid\",    \"txoutnum\": n,    \"partialtransactionproof\": \"hexstr\",    \"transfers\": [{transfer1}, {transfer2},...]   }, ...]  } Result:  [{   \"currency\": \"currencyid\"   \"txid\": \"hexid\",   \"txoutnum\": n  }, ...] Examples: > verus submitimports {\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]} > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitimports\", \"params\": [{\"sourcesystemid\":\"systemid\", \"notarizationtxid\":\"txid\", \"notarizationtxoutnum\":n, \"exports\":[{\"height\":n, \"txid\":\"hexid\", \"txoutnum\":n, \"partialtransactionproof\":\"hexstr\", \"transfers\": [{transfer1}, {transfer2},...]}, ...]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/submitimports"
        ]
    ],
    "will",
    "be",
    "replaced",
    "32febc83-07ee-471c-adc2-c2b33d7595c1"
]