[
    [
        [
            "What is the purpose of the `z_viewtransaction` command in Verus?",
            "The `z_viewtransaction` command is used to retrieve detailed shielded information about an in-wallet transaction, specified by its transaction ID (`txid`).",
            "z_viewtransaction \"txid\"Get detailed shielded information about in-wallet transaction <txid>Arguments: 1. \"txid\" (string, required) The transaction idResult: {  \"txid\" : \"transactionid\",  (string) The transaction id  \"spends\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsSpend\" : n,         (numeric, sprout) the index of the spend within the JSDescription    \"spend\" : n,          (numeric, sapling) the index of the spend within vShieldedSpend    \"txidPrev\" : \"transactionid\",  (string) The id for the transaction this note was created in    \"jsPrev\" : n,          (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutputPrev\" : n,       (numeric, sprout) the index of the output within the JSDescription    \"outputPrev\" : n,        (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"zaddress\",    (string) The z address involved in the transaction    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis   }   ,...  ],  \"outputs\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutput\" : n,         (numeric, sprout) the index of the output within the JSDescription    \"output\" : n,          (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"address\",    (string) The Verus private address involved in the transaction    \"recovered\" : true|false    (boolean, sapling) True if the output is not for an address in the wallet    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis    \"memo\" : \"hexmemo\",       (string) Hexademical string representation of the memo field    \"memoStr\" : \"memo\",       (string) Only returned if memo contains valid UTF-8 text.   }   ,...  ], }",
            "./raw_text_input_api_text/z_viewtransaction"
        ],
        [
            "What information can I expect to see when I run the `z_viewtransaction` command with a specific transaction ID?",
            "When you run the `z_viewtransaction` command with a specific transaction ID, you can expect to see a JSON object containing detailed information about the transaction. This information includes:\n\n* The transaction ID (`txid`)\n* An array of \"spends\" objects, each containing information about a spend in the transaction, such as the type of address, indices of the JSDescription and spend, previous transaction ID, and the value and zatoshis amount\n* An array of \"outputs\" objects, each containing information about an output in the transaction, such as the type of address, indices of the JSDescription and output, Verus private address, whether the output is recovered, value and zatoshis amount, memo field, and memo string",
            "z_viewtransaction \"txid\"Get detailed shielded information about in-wallet transaction <txid>Arguments: 1. \"txid\" (string, required) The transaction idResult: {  \"txid\" : \"transactionid\",  (string) The transaction id  \"spends\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsSpend\" : n,         (numeric, sprout) the index of the spend within the JSDescription    \"spend\" : n,          (numeric, sapling) the index of the spend within vShieldedSpend    \"txidPrev\" : \"transactionid\",  (string) The id for the transaction this note was created in    \"jsPrev\" : n,          (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutputPrev\" : n,       (numeric, sprout) the index of the output within the JSDescription    \"outputPrev\" : n,        (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"zaddress\",    (string) The z address involved in the transaction    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis   }   ,...  ],  \"outputs\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutput\" : n,         (numeric, sprout) the index of the output within the JSDescription    \"output\" : n,          (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"address\",    (string) The Verus private address involved in the transaction    \"recovered\" : true|false    (boolean, sapling) True if the output is not for an address in the wallet    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis    \"memo\" : \"hexmemo\",       (string) Hexademical string representation of the memo field    \"memoStr\" : \"memo\",       (string) Only returned if memo contains valid UTF-8 text.   }   ,...  ], }",
            "./raw_text_input_api_text/z_viewtransaction"
        ],
        [
            "What is the difference between the `value` and `valueZat` fields in the `z_viewtransaction` command output?",
            "The `value` field represents the amount in VRSC (Verus coins), while the `valueZat` field represents the amount in zatoshis, which is a smaller unit of Verus coins (1 VRSC = 100,000,000 zatoshis).",
            "z_viewtransaction \"txid\"Get detailed shielded information about in-wallet transaction <txid>Arguments: 1. \"txid\" (string, required) The transaction idResult: {  \"txid\" : \"transactionid\",  (string) The transaction id  \"spends\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsSpend\" : n,         (numeric, sprout) the index of the spend within the JSDescription    \"spend\" : n,          (numeric, sapling) the index of the spend within vShieldedSpend    \"txidPrev\" : \"transactionid\",  (string) The id for the transaction this note was created in    \"jsPrev\" : n,          (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutputPrev\" : n,       (numeric, sprout) the index of the output within the JSDescription    \"outputPrev\" : n,        (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"zaddress\",    (string) The z address involved in the transaction    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis   }   ,...  ],  \"outputs\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutput\" : n,         (numeric, sprout) the index of the output within the JSDescription    \"output\" : n,          (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"address\",    (string) The Verus private address involved in the transaction    \"recovered\" : true|false    (boolean, sapling) True if the output is not for an address in the wallet    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis    \"memo\" : \"hexmemo\",       (string) Hexademical string representation of the memo field    \"memoStr\" : \"memo\",       (string) Only returned if memo contains valid UTF-8 text.   }   ,...  ], }",
            "./raw_text_input_api_text/z_viewtransaction"
        ],
        [
            "What is the purpose of the `memo` and `memoStr` fields in the `z_viewtransaction` command output?",
            "The `memo` field contains a hexadecimal string representation of the memo field, which is a field in the transaction that can contain arbitrary data. The `memoStr` field is only returned if the memo field contains valid UTF-8 text, and it represents the memo field as a human-readable string.",
            "z_viewtransaction \"txid\"Get detailed shielded information about in-wallet transaction <txid>Arguments: 1. \"txid\" (string, required) The transaction idResult: {  \"txid\" : \"transactionid\",  (string) The transaction id  \"spends\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsSpend\" : n,         (numeric, sprout) the index of the spend within the JSDescription    \"spend\" : n,          (numeric, sapling) the index of the spend within vShieldedSpend    \"txidPrev\" : \"transactionid\",  (string) The id for the transaction this note was created in    \"jsPrev\" : n,          (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutputPrev\" : n,       (numeric, sprout) the index of the output within the JSDescription    \"outputPrev\" : n,        (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"zaddress\",    (string) The z address involved in the transaction    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis   }   ,...  ],  \"outputs\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutput\" : n,         (numeric, sprout) the index of the output within the JSDescription    \"output\" : n,          (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"address\",    (string) The Verus private address involved in the transaction    \"recovered\" : true|false    (boolean, sapling) True if the output is not for an address in the wallet    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis    \"memo\" : \"hexmemo\",       (string) Hexademical string representation of the memo field    \"memoStr\" : \"memo\",       (string) Only returned if memo contains valid UTF-8 text.   }   ,...  ], }",
            "./raw_text_input_api_text/z_viewtransaction"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d2176729-79fc-4f58-ad52-047ef72353e5"
]