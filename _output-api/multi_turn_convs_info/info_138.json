[
    [
        [
            "What is the purpose of the `verbose` argument in the `getrawmempool` command?",
            "The `verbose` argument in the `getrawmempool` command is used to specify the format of the result. If `verbose` is set to `false` (default), the result is a JSON array of string transaction IDs. If `verbose` is set to `true`, the result is a JSON object with detailed information about each transaction, including its size, fee, time, height, starting priority, current priority, and dependencies.",
            "getrawmempool ( verbose ) Returns all transaction ids in memory pool as a json array of string transaction ids. Arguments: 1. verbose      (boolean, optional, default=false) true for a json object, false for array of transaction ids Result: (for verbose = false): [           (json array of string)  \"transactionid\"   (string) The transaction id  ,... ] Result: (for verbose = true): {              (json object)  \"transactionid\" : {    (json object)   \"size\" : n,       (numeric) transaction size in bytes   \"fee\" : n,       (numeric) transaction fee in VRSC   \"time\" : n,       (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT   \"height\" : n,      (numeric) block height when transaction entered pool   \"startingpriority\" : n, (numeric) priority when transaction entered pool   \"currentpriority\" : n, (numeric) transaction priority now   \"depends\" : [      (array) unconfirmed transactions used as inputs for this transaction     \"transactionid\",  (string) parent transaction id    ... ]  }, ... } Examples > verus getrawmempool true > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getrawmempool\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getrawmempool"
        ],
        [
            "What information is included in the detailed transaction information returned by `getrawmempool` with `verbose` set to `true`?",
            "The detailed transaction information returned by `getrawmempool` with `verbose` set to `true` includes:\n\n* `size`: the transaction size in bytes\n* `fee`: the transaction fee in VRSC\n* `time`: the local time the transaction entered the pool in seconds since 1 Jan 1970 GMT\n* `height`: the block height when the transaction entered the pool\n* `startingpriority`: the priority when the transaction entered the pool\n* `currentpriority`: the transaction priority now\n* `depends`: an array of unconfirmed transactions used as inputs for this transaction",
            "getrawmempool ( verbose ) Returns all transaction ids in memory pool as a json array of string transaction ids. Arguments: 1. verbose      (boolean, optional, default=false) true for a json object, false for array of transaction ids Result: (for verbose = false): [           (json array of string)  \"transactionid\"   (string) The transaction id  ,... ] Result: (for verbose = true): {              (json object)  \"transactionid\" : {    (json object)   \"size\" : n,       (numeric) transaction size in bytes   \"fee\" : n,       (numeric) transaction fee in VRSC   \"time\" : n,       (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT   \"height\" : n,      (numeric) block height when transaction entered pool   \"startingpriority\" : n, (numeric) priority when transaction entered pool   \"currentpriority\" : n, (numeric) transaction priority now   \"depends\" : [      (array) unconfirmed transactions used as inputs for this transaction     \"transactionid\",  (string) parent transaction id    ... ]  }, ... } Examples > verus getrawmempool true > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getrawmempool\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getrawmempool"
        ],
        [
            "How can I use the `getrawmempool` command to retrieve a list of all transaction IDs in the memory pool?",
            "You can use the `getrawmempool` command to retrieve a list of all transaction IDs in the memory pool by running the command with `verbose` set to `false`, like this:\n```\n> verus getrawmempool false\n```\nThis will return a JSON array of string transaction IDs.",
            "getrawmempool ( verbose ) Returns all transaction ids in memory pool as a json array of string transaction ids. Arguments: 1. verbose      (boolean, optional, default=false) true for a json object, false for array of transaction ids Result: (for verbose = false): [           (json array of string)  \"transactionid\"   (string) The transaction id  ,... ] Result: (for verbose = true): {              (json object)  \"transactionid\" : {    (json object)   \"size\" : n,       (numeric) transaction size in bytes   \"fee\" : n,       (numeric) transaction fee in VRSC   \"time\" : n,       (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT   \"height\" : n,      (numeric) block height when transaction entered pool   \"startingpriority\" : n, (numeric) priority when transaction entered pool   \"currentpriority\" : n, (numeric) transaction priority now   \"depends\" : [      (array) unconfirmed transactions used as inputs for this transaction     \"transactionid\",  (string) parent transaction id    ... ]  }, ... } Examples > verus getrawmempool true > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getrawmempool\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getrawmempool"
        ],
        [
            "How can I use the `getrawmempool` command to retrieve detailed information about all transactions in the memory pool?",
            "You can use the `getrawmempool` command to retrieve detailed information about all transactions in the memory pool by running the command with `verbose` set to `true`, like this:\n```\n> verus getrawmempool true\n```\nThis will return a JSON object with detailed information about each transaction, including its size, fee, time, height, starting priority, current priority, and dependencies.",
            "getrawmempool ( verbose ) Returns all transaction ids in memory pool as a json array of string transaction ids. Arguments: 1. verbose      (boolean, optional, default=false) true for a json object, false for array of transaction ids Result: (for verbose = false): [           (json array of string)  \"transactionid\"   (string) The transaction id  ,... ] Result: (for verbose = true): {              (json object)  \"transactionid\" : {    (json object)   \"size\" : n,       (numeric) transaction size in bytes   \"fee\" : n,       (numeric) transaction fee in VRSC   \"time\" : n,       (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT   \"height\" : n,      (numeric) block height when transaction entered pool   \"startingpriority\" : n, (numeric) priority when transaction entered pool   \"currentpriority\" : n, (numeric) transaction priority now   \"depends\" : [      (array) unconfirmed transactions used as inputs for this transaction     \"transactionid\",  (string) parent transaction id    ... ]  }, ... } Examples > verus getrawmempool true > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getrawmempool\", \"params\": [true] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getrawmempool"
        ]
    ],
    "will",
    "be",
    "replaced",
    "47be9b79-4418-4d85-b3aa-6dbf49fa4907"
]