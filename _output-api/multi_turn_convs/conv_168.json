[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to assist you in understanding Verus. What's on your mind today?\n\n**User:**\nHey, I was wondering about the `listlockunspent` command in Verus. What does it do?\n\n**AI Assistant:**\nThe `listlockunspent` command returns a list of temporarily unspendable outputs in Verus. These outputs are locked and cannot be spent until they are unlocked. Do you have any further questions about this command?\n\n**User:**\nYeah, what information does it return?\n\n**AI Assistant:**\nThe `listlockunspent` command returns a list of objects, each containing two properties: `txid` (the transaction id locked) and `vout` (the vout value).\n\n**User:**\nThat's helpful. How can I lock an unspent transaction in Verus?\n\n**AI Assistant:**\nYou can lock an unspent transaction in Verus using the `lockunspent` command with the `false` argument, followed by a JSON object specifying the transaction to lock. For example:\n```\nverus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\"\n```\nDo you have any more questions about locking transactions?\n\n**User:**\nActually, yes. How can I unlock a locked transaction in Verus?\n\n**AI Assistant:**\nYou can unlock a locked transaction in Verus using the `lockunspent` command with the `true` argument, followed by a JSON object specifying the transaction to unlock. For example:\n```\nverus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\"\n```\nDoes that make sense?\n\n**User:**\nYeah, thanks for explaining. One more question: how can I use the `listlockunspent` command as a JSON RPC call?\n\n**AI Assistant:**\nYou can use the `listlockunspent` command as a JSON RPC call using the following format:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `myusername` with your actual username and `http://127.0.0.1:27486/` with your actual RPC endpoint. Does that help?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does the `listlockunspent` command do in Verus?",
            "The `listlockunspent` command returns a list of temporarily unspendable outputs in Verus. These outputs are locked and cannot be spent until they are unlocked.",
            "listlockunspent Returns list of temporarily unspendable outputs. See the lockunspent call to lock and unlock transactions for spending. Result: [  {   \"txid\" : \"transactionid\",   (string) The transaction id locked   \"vout\" : n           (numeric) The vout value  }  ,... ] Examples: List the unspent transactions > verus listunspent Lock an unspent transaction > verus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" List the locked transactions > verus listlockunspent Unlock the transaction again > verus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/listlockunspent"
        ],
        [
            "What information is returned by the `listlockunspent` command?",
            "The `listlockunspent` command returns a list of objects, each containing two properties: `txid` (the transaction id locked) and `vout` (the vout value).",
            "listlockunspent Returns list of temporarily unspendable outputs. See the lockunspent call to lock and unlock transactions for spending. Result: [  {   \"txid\" : \"transactionid\",   (string) The transaction id locked   \"vout\" : n           (numeric) The vout value  }  ,... ] Examples: List the unspent transactions > verus listunspent Lock an unspent transaction > verus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" List the locked transactions > verus listlockunspent Unlock the transaction again > verus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/listlockunspent"
        ],
        [
            "How can I lock an unspent transaction in Verus?",
            "You can lock an unspent transaction in Verus using the `lockunspent` command with the `false` argument, followed by a JSON object specifying the transaction to lock. For example:\n\n```\nverus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\"\n```",
            "listlockunspent Returns list of temporarily unspendable outputs. See the lockunspent call to lock and unlock transactions for spending. Result: [  {   \"txid\" : \"transactionid\",   (string) The transaction id locked   \"vout\" : n           (numeric) The vout value  }  ,... ] Examples: List the unspent transactions > verus listunspent Lock an unspent transaction > verus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" List the locked transactions > verus listlockunspent Unlock the transaction again > verus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/listlockunspent"
        ],
        [
            "How can I unlock a locked transaction in Verus?",
            "You can unlock a locked transaction in Verus using the `lockunspent` command with the `true` argument, followed by a JSON object specifying the transaction to unlock. For example:\n\n```\nverus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\"\n```",
            "listlockunspent Returns list of temporarily unspendable outputs. See the lockunspent call to lock and unlock transactions for spending. Result: [  {   \"txid\" : \"transactionid\",   (string) The transaction id locked   \"vout\" : n           (numeric) The vout value  }  ,... ] Examples: List the unspent transactions > verus listunspent Lock an unspent transaction > verus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" List the locked transactions > verus listlockunspent Unlock the transaction again > verus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/listlockunspent"
        ],
        [
            "How can I use the `listlockunspent` command as a JSON RPC call?",
            "You can use the `listlockunspent` command as a JSON RPC call using the following format:\n\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nReplace `myusername` with your actual username and `http://127.0.0.1:27486/` with your actual RPC endpoint.",
            "listlockunspent Returns list of temporarily unspendable outputs. See the lockunspent call to lock and unlock transactions for spending. Result: [  {   \"txid\" : \"transactionid\",   (string) The transaction id locked   \"vout\" : n           (numeric) The vout value  }  ,... ] Examples: List the unspent transactions > verus listunspent Lock an unspent transaction > verus lockunspent false \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" List the locked transactions > verus listlockunspent Unlock the transaction again > verus lockunspent true \"[{\"txid\":\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\",\"vout\":1}]\" As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"listlockunspent\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/listlockunspent"
        ]
    ]
]