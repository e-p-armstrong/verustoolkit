[
    "What is the result of the `z_importviewingkey` command?",
    "The result of the `z_importviewingkey` command is a JSON object that contains two properties:\n\n1. `type`: a string that indicates the type of the viewing key, either \"sprout\" or \"sapling\".\n2. `address`: a string that represents the address corresponding to the viewing key. For Sapling, this is the default address.",
    "z_importviewingkey \"vkey\" ( rescan startHeight ) Adds a viewing key (as returned by z_exportviewingkey) to your wallet. Arguments: 1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey) 2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\" 3. startHeight    (numeric, optional, default=0) Block height to start rescan from Note: This call can take minutes to complete if rescan is true. Result: {  \"type\" : \"xxxx\",             (string) \"sprout\" or \"sapling\"  \"address\" : \"address|DefaultAddress\",  (string) The address corresponding to the viewing key (for Sapling, this is the default address). } Examples: Import a viewing key > verus z_importviewingkey \"vkey\" Import the viewing key without rescan > verus z_importviewingkey \"vkey\", no Import the viewing key with partial rescan > verus z_importviewingkey \"vkey\" whenkeyisnew 30000 Re-import the viewing key with longer partial rescan > verus z_importviewingkey \"vkey\" yes 20000 As a JSON-RPC call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/z_importviewingkey"
]