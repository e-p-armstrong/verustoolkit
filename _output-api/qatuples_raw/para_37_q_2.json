[
    "What information is included in the JSON object returned by the `getblockheader` command when `verbose` is set to `true`?",
    "When `verbose` is set to `true`, the `getblockheader` command returns a JSON object with the following information:\n\n1. `hash`: The block hash (same as provided).\n2. `confirmations`: The number of confirmations, or -1 if the block is not on the main chain.\n3. `height`: The block height or index.\n4. `version`: The block version.\n5. `merkleroot`: The merkle root.\n6. `finalsaplingroot`: The root of the Sapling commitment tree after applying this block.\n7. `time`: The block time in seconds since epoch (Jan 1 1970 GMT).\n8. `nonce`: The nonce.\n9. `bits`: The bits.\n10. `difficulty`: The difficulty.\n11. `previousblockhash`: The hash of the previous block.\n12. `nextblockhash`: The hash of the next block.",
    "getblockheader \"hash\" ( verbose ) If verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'. If verbose is true, returns an Object with information about blockheader <hash>. Arguments: 1. \"hash\"     (string, required) The block hash 2. verbose      (boolean, optional, default=true) true for a json object, false for the hex encoded data Result (for verbose = true): {  \"hash\" : \"hash\",   (string) the block hash (same as provided)  \"confirmations\" : n,  (numeric) The number of confirmations, or -1 if the block is not on the main chain  \"height\" : n,     (numeric) The block height or index  \"version\" : n,     (numeric) The block version  \"merkleroot\" : \"xxxx\", (string) The merkle root  \"finalsaplingroot\" : \"xxxx\", (string) The root of the Sapling commitment tree after applying this block  \"time\" : ttt,     (numeric) The block time in seconds since epoch (Jan 1 1970 GMT)  \"nonce\" : n,      (numeric) The nonce  \"bits\" : \"1d00ffff\", (string) The bits  \"difficulty\" : x.xxx, (numeric) The difficulty  \"previousblockhash\" : \"hash\", (string) The hash of the previous block  \"nextblockhash\" : \"hash\"    (string) The hash of the next block } Result (for verbose=false): \"data\"       (string) A string that is serialized, hex-encoded data for block 'hash'. Examples: > verus getblockheader \"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockheader\", \"params\": [\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getblockheader"
]