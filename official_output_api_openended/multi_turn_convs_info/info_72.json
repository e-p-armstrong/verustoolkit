[
    [
        [
            "What is the purpose of the `submitblock` command in Verus, and how do you use it to submit a new block to the network?",
            "The `submitblock` command in Verus is used to attempt to submit a new block to the network. It takes two arguments: `hexdata` and `jsonparametersobject`. \n\n`hexdata` is a required string parameter that represents the hex-encoded block data to be submitted. \n\n`jsonparametersobject` is an optional string parameter that contains an object of optional parameters. Currently, the only optional parameter is `workid`, which is a string that must be included with submissions if the server provided a workid.\n\nWhen you use the `submitblock` command, the node will attempt to validate the block and add it to the network. The command returns a result that indicates the status of the block submission. The possible results are:\n\n* \"duplicate\" - the node already has a valid copy of the block\n* \"duplicate-invalid\" - the node already has the block, but it is invalid\n* \"duplicate-inconclusive\" - the node already has the block, but has not validated it\n* \"inconclusive\" - the node has not validated the block, and it may not be on the node's current best chain\n* \"rejected\" - the block was rejected as invalid\n\nYou can use the `submitblock` command in two ways: through the Verus command-line interface or by making an HTTP request using a tool like `curl`. The examples provided in the documentation demonstrate both methods.",
            "submitblock \"hexdata\" ( \"jsonparametersobject\" )\n\nAttempts to submit new block to network.\nThe 'jsonparametersobject' parameter is currently ignored.\nSee https://en.bitcoin.it/wiki/BIP_0022 for full specification.\n\nArguments\n1. \"hexdata\"  (string, required) the hex-encoded block data to submit\n2. \"jsonparametersobject\"   (string, optional) object of optional parameters\n  {\n   \"workid\" : \"id\"  (string, optional) if the server provided a workid, it MUST be included with submissions\n  }\n\nResult:\n\"duplicate\" - node already has valid copy of block\n\"duplicate-invalid\" - node already has block, but it is invalid\n\"duplicate-inconclusive\" - node already has block but has not validated it\n\"inconclusive\" - node has not validated the block, it may not be on the node's current best chain\n\"rejected\" - block was rejected as invalid\nFor more information on submitblock parameters and results, see: https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki#block-submission\n\nExamples:\n> verus submitblock \"mydata\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"submitblock\", \"params\": [\"mydata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/submitblock"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d6fe0bf3-bccc-4628-9fdb-40e7003bd97c"
]