[
    [
        [
            "How do I use the `signmessage` command in Verus to sign a message with the private key of a transparent address or an identity, and what are the arguments and results of this command?",
            "The `signmessage` command in Verus is used to sign a message with the private key of a transparent address or an identity. This command can be used to create a digital signature for a given message, which can then be verified by others to ensure the authenticity of the message.\n\nTo use the `signmessage` command, you need to provide three arguments:\n\n1. The transparent address or identity to use for signing, which can be a string representing the address or identity.\n2. The message to be signed, which can be any string.\n3. The current signature of the message encoded in base 64, which is optional and only required for multisig IDs.\n\nThe result of the `signmessage` command is a JSON object that contains two fields:\n\n1. `hash`: a string representing the hash of the message, which is calculated using the SHA256 algorithm.\n2. `signature`: a string representing the aggregate signature of the message, which is encoded in base 64.\n\nBefore using the `signmessage` command, you need to unlock your wallet using the `walletpassphrase` command, which requires a passphrase and a time limit for the unlock.\n\nHere's an example of how to use the `signmessage` command:\n\n```\nverus walletpassphrase \"mypassphrase\" 30\nverus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\"\n```\n\nYou can also use the `verifymessage` command to verify the signature of a message, which takes three arguments: the transparent address or identity, the signature, and the message.\n\nFinally, you can use the `signmessage` command as a JSON RPC method by sending a JSON request to the Verus daemon, which requires a username, a method, and a list of parameters.",
            "signmessage \"address or identity\" \"message\" \"currentsig\"\n\nSign a message with the private key of a t-addr or the authorities present in this wallet for an identity\n\nArguments:\n1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing.\n2. \"message\"          (string, required) The message to create a signature of.\n2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID\n\nResult:\n{\n \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)\n \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful\n}\n\nExamples:\n\nUnlock the wallet for 30 seconds\n> verus walletpassphrase \"mypassphrase\" 30\n\nCreate the signature\n> verus signmessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"my message\"\n\nVerify the signature\n> verus verifymessage \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"my message\"\n\nAs json rpc\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signmessage\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"my message\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/signmessage"
        ]
    ],
    "will",
    "be",
    "replaced",
    "38004b0e-c8c9-4f43-9e18-ea30ac0d1ec2"
]