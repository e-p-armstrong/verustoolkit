[
    [
        [
            "How do I use the `getpendingtransfers` command in Verus to retrieve all pending transfers for a specific chain that have not yet been aggregated into an export?",
            "The `getpendingtransfers` command in Verus is used to retrieve a list of all pending transfers for a specific chain that have not yet been aggregated into an export. This command is useful for checking the status of transfers on a particular chain.\n\nTo use the `getpendingtransfers` command, you need to specify the name of the chain you want to retrieve the pending transfers for. You can do this by running the command with the chain name as an argument, like this:\n```\nverus getpendingtransfers \"chainname\"\n```\nReplace `\"chainname\"` with the actual name of the chain you want to retrieve the pending transfers for.\n\nAlternatively, you can also use the `curl` command to send a JSON-RPC request to the Verus daemon to retrieve the pending transfers. Here's an example:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getpendingtransfers\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `\"myusername\"` with your actual username, and `\"chainname\"` with the actual name of the chain you want to retrieve the pending transfers for.\n\nThe `getpendingtransfers` command returns a result in the following format:\n```\n{\n}\n```\nThe result will contain a list of pending transfers for the specified chain that have not yet been aggregated into an export.\n\nNote that if you don't specify a chain name, the command will return the pending transfers for the current chain in the daemon.",
            "getpendingtransfers \"chainname\"\n\nReturns all pending transfers for a particular chain that have not yet been aggregated into an export\n\nArguments\n1. \"chainname\"           (string, optional) name of the chain to look for. no parameter returns current chain in daemon.\n\nResult:\n {\n }\n\nExamples:\n> verus getpendingtransfers \"chainname\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getpendingtransfers\", \"params\": [\"chainname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/getpendingtransfers"
        ]
    ],
    "will",
    "be",
    "replaced",
    "8f06bfb4-2664-492f-9b26-bf226374cfa1"
]