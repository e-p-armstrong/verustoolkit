[
    [
        [
            "What does the `z_gettotalbalance` command do in Verus, and how does it work?",
            "The `z_gettotalbalance` command in Verus is used to retrieve the total value of funds stored in the node's wallet. It provides a comprehensive overview of the wallet's balance, including both transparent and shielded funds.\n\nWhen you run the command, you can specify two optional arguments: `minconf` and `includeWatchonly`. The `minconf` argument allows you to set a minimum number of confirmations for the transactions to be included in the balance calculation. For example, if you set `minconf` to 5, the command will only include transactions that have been confirmed at least 5 times. The default value is 1.\n\nThe `includeWatchonly` argument is a boolean flag that determines whether to include the balance in watchonly addresses. Watchonly addresses are addresses for which the wallet only has incoming viewing keys, which means that the wallet can see incoming transactions but cannot spend the funds. If you set `includeWatchonly` to `true`, the command will include the balance in these addresses in the calculation.\n\nThe command returns a JSON object with three properties: `transparent`, `private`, and `total`. The `transparent` property represents the total balance of transparent funds, which are funds stored in transparent addresses. The `private` property represents the total balance of shielded funds, which are funds stored in shielded addresses (both Sprout and Sapling addresses). The `total` property represents the total balance of both transparent and shielded funds.\n\nIt's important to note that if the wallet contains any addresses for which it only has incoming viewing keys, the returned private balance may be larger than the actual balance, because spends cannot be detected with incoming viewing keys.\n\nYou can use the `z_gettotalbalance` command in various ways, including as a command-line command, as a JSON RPC call, or through a programming interface.",
            "z_gettotalbalance ( minconf includeWatchonly )\n\nReturn the total value of funds stored in the node's wallet.\n\nCAUTION: If the wallet contains any addresses for which it only has incoming viewing keys,\nthe returned private balance may be larger than the actual balance, because spends cannot\nbe detected with incoming viewing keys.\n\nArguments:\n1. minconf     (numeric, optional, default=1) Only include private and transparent transactions confirmed at least this many times.\n2. includeWatchonly (bool, optional, default=false) Also include balance in watchonly addresses (see 'importaddress' and 'z_importviewingkey')\n\nResult:\n{\n \"transparent\": xxxxx,   (numeric) the total balance of transparent funds\n \"private\": xxxxx,     (numeric) the total balance of shielded funds (in both Sprout and Sapling addresses)\n \"total\": xxxxx,      (numeric) the total balance of both transparent and shielded funds\n}\n\nExamples:\n\nThe total amount in the wallet\n> verus z_gettotalbalance\n\nThe total amount in the wallet at least 5 blocks confirmed\n> verus z_gettotalbalance 5\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettotalbalance\", \"params\": [5] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_gettotalbalance"
        ]
    ],
    "will",
    "be",
    "replaced",
    "1a52f912-59fd-4fe7-a1ac-53918d7e0222"
]