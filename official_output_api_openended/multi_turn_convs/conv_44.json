[
    "## Conversation that answers the provided questions:\n**User:**\nI've got a question about Verus commands. What is the purpose of the `sendrawtransaction` command in Verus, and how can it be used to submit a raw transaction to the local node and network?\n\n**AI Assistant:**\nThe `sendrawtransaction` command in Verus is a powerful tool that allows you to submit a raw transaction, serialized and hex-encoded, to the local node and network. This command takes two arguments: the hex string of the raw transaction, and an optional boolean flag `allowhighfees` that defaults to `false`.\n\nTo use this command, you need to have a raw transaction in hex format, which can be created using the `createrawtransaction` command and then signed using the `signrawtransaction` command. Once you have the signed hex string, you can submit it to the network using `sendrawtransaction`.\n\nLet me walk you through an example of how to use these commands:\n\n1. First, create a raw transaction using `createrawtransaction`:\n```\nverus createrawtransaction \"[{\"txid\" : \"mytxid\",\"vout\":0}]\" \"{\"myaddress\":0.01}\"\n```\nThis will create a raw transaction that spends the output of transaction `mytxid` and sends 0.01 units to `myaddress`.\n\n2. Next, sign the transaction using `signrawtransaction`:\n```\nverus signrawtransaction \"myhex\"\n```\nThis will sign the raw transaction and return the signed hex string.\n\n3. Finally, submit the signed transaction to the network using `sendrawtransaction`:\n```\nverus sendrawtransaction \"signedhex\"\n```\nThis will submit the signed transaction to the local node and network, and return the transaction hash in hex format.\n\nBy the way, did you know that the `sendrawtransaction` command can also be used as a JSON RPC call? Here's an example:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendrawtransaction\", \"params\": [\"signedhex\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nThis allows you to submit the transaction programmatically using a JSON RPC call.\n\nDo you have any more questions about using `sendrawtransaction` or any other Verus commands?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `sendrawtransaction` command in Verus, and how can it be used to submit a raw transaction to the local node and network?",
            "The `sendrawtransaction` command in Verus is used to submit a raw transaction, serialized and hex-encoded, to the local node and network. This command takes two arguments: the hex string of the raw transaction, and an optional boolean flag `allowhighfees` that defaults to `false`.\n\nTo use this command, you need to have a raw transaction in hex format, which can be created using the `createrawtransaction` command and then signed using the `signrawtransaction` command. Once you have the signed hex string, you can submit it to the network using `sendrawtransaction`.\n\nHere's an example of how to use these commands:\n\n1. First, create a raw transaction using `createrawtransaction`:\n```\nverus createrawtransaction \"[{\"txid\" : \"mytxid\",\"vout\":0}]\" \"{\"myaddress\":0.01}\"\n```\nThis will create a raw transaction that spends the output of transaction `mytxid` and sends 0.01 units to `myaddress`.\n\n2. Next, sign the transaction using `signrawtransaction`:\n```\nverus signrawtransaction \"myhex\"\n```\nThis will sign the raw transaction and return the signed hex string.\n\n3. Finally, submit the signed transaction to the network using `sendrawtransaction`:\n```\nverus sendrawtransaction \"signedhex\"\n```\nThis will submit the signed transaction to the local node and network, and return the transaction hash in hex format.\n\nNote that the `sendrawtransaction` command can also be used as a JSON RPC call, as shown in the example:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendrawtransaction\", \"params\": [\"signedhex\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nThis allows you to submit the transaction programmatically using a JSON RPC call.",
            "sendrawtransaction \"hexstring\" ( allowhighfees )\n\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\n\nAlso see createrawtransaction and signrawtransaction calls.\n\nArguments:\n1. \"hexstring\"  (string, required) The hex string of the raw transaction)\n2. allowhighfees  (boolean, optional, default=false) Allow high fees\n\nResult:\n\"hex\"       (string) The transaction hash in hex\n\nExamples:\n\nCreate a transaction\n> verus createrawtransaction \"[{\"txid\" : \"mytxid\",\"vout\":0}]\" \"{\"myaddress\":0.01}\"\nSign the transaction, and get back the hex\n> verus signrawtransaction \"myhex\"\n\nSend the transaction (signed hex)\n> verus sendrawtransaction \"signedhex\"\n\nAs a json rpc call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendrawtransaction\", \"params\": [\"signedhex\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/sendrawtransaction"
        ]
    ]
]