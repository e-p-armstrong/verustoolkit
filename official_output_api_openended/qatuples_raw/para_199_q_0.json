[
    "What information can be obtained from a Verus block and how is it structured?",
    "A Verus block contains a wealth of information about the block itself, its transactions, and the state of the blockchain. This information is structured in a specific way, making it easy to access and understand.\n\n**Block Identification:**\nThe block is identified by its \"hash\", a unique string that serves as a digital fingerprint. Additionally, the block's \"height\" and \"version\" are provided, giving information about its position in the blockchain and its format, respectively.\n\n**Block Size and Confirmation:**\nThe block's \"size\" in bytes is also provided, along with the number of \"confirmations\" it has received. This gives an idea of the block's size and how widely accepted it is by the network.\n\n**Transactions:**\nThe block contains an array of \"deltas\", each representing a transaction. Each delta includes the transaction's \"txid\", \"index\" in the block, and arrays of \"inputs\" and \"outputs\". These inputs and outputs describe the transaction's sources and destinations, including transparent addresses, satoshi amounts, and previous transaction IDs and indices.\n\n**Block Timestamps:**\nThe block's \"time\" and \"mediantime\" are provided, giving information about when the block was created and the average time of the most recent blocks.\n\n**Mining Information:**\nThe block's \"nonce\", \"bits\", and \"difficulty\" are provided, giving information about the mining process that created the block. The \"chainwork\" is also provided, which represents the total amount of work in the active chain.\n\n**Block Linkage:**\nFinally, the block's \"previousblockhash\" and \"nextblockhash\" are provided, linking this block to its predecessors and successors in the blockchain.\n\nOverall, a Verus block contains a rich set of information that helps to understand the blockchain's state and evolution.",
    "Result:\n{\n \"hash\": \"hash\",       (string) block ID\n \"confirmations\": n,     (numeric) number of confirmations\n \"size\": n,          (numeric) block size in bytes\n \"height\": n,         (numeric) block height\n \"version\": n,        (numeric) block version (e.g. 4)\n \"merkleroot\": \"hash\",    (hexstring) block Merkle root\n \"deltas\": [\n  {\n   \"txid\": \"hash\",     (hexstring) transaction ID\n   \"index\": n,       (numeric) The offset of the tx in the block\n   \"inputs\": [        (array of json objects)\n    {\n     \"address\": \"taddr\", (string) transparent address\n     \"satoshis\": n,    (numeric) negative of spend amount\n     \"index\": n,     (numeric) vin index\n     \"prevtxid\": \"hash\", (string) source utxo tx ID\n     \"prevout\": n     (numeric) source utxo index\n    }, ...\n   ],\n   \"outputs\": [       (array of json objects)\n    {\n     \"address\": \"taddr\", (string) transparent address\n     \"satoshis\": n,    (numeric) amount\n     \"index\": n      (numeric) vout index\n    }, ...\n   ]\n  }, ...\n ],\n \"time\" : n,         (numeric) The block version\n \"mediantime\": n,       (numeric) The most recent blocks' ave time\n \"nonce\" : \"nonce\",      (hex string) The nonce\n \"bits\" : \"1d00ffff\",     (hex string) The bits\n \"difficulty\": n,       (numeric) the current difficulty\n \"chainwork\": \"xxxx\"     (hex string) total amount of work in active chain\n \"previousblockhash\" : \"hash\",(hex string) The hash of the previous block\n \"nextblockhash\" : \"hash\"   (hex string) The hash of the next block\n}",
    "./raw_text_input_api_text/getblockdeltas"
]