[
    "How do I use the `z_gettreestate` command in Verus to retrieve information about a block's tree state, and what kind of information can I expect to receive as a result?",
    "The `z_gettreestate` command is a Verus command that returns information about the tree state of a given block. You can use this command by providing a block hash or height as an argument. The height can be negative, where -1 represents the last known valid block.\n\nThe result of the `z_gettreestate` command is a JSON object that contains several pieces of information about the block's tree state. This includes:\n\n* The block hash and height\n* Information about the Sprout and Sapling tree states, including the hash of the most recent block with more information, and the final root and state of the commitment trees.\n\nTo use the `z_gettreestate` command, you can run it from the command line using Verus, or use a tool like `curl` to send a JSON-RPC request to the Verus daemon. For example:\n\n```\nverus z_gettreestate \"00000000febc373a1da2bd9f887b105ad79ddc26ac26c2b28652d64e5207c5b5\"\n```\n\nOr, using `curl`:\n\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettreestate\", \"params\": [\"00000000febc373a1da2bd9f887b105ad79ddc26ac26c2b28652d64e5207c5b5\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nYou can also use a block height instead of a hash:\n\n```\nverus z_gettreestate 12800\n```\n\nOr, using `curl`:\n\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettreestate\", \"params\": [12800] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nOverall, the `z_gettreestate` command is a useful tool for retrieving information about the tree state of a specific block in the Verus blockchain.",
    "z_gettreestate \"hash|height\"\nReturn information about the given block's tree state.\n\nArguments:\n1. \"hash|height\"     (string, required) The block hash or height. Height can be negative where -1 is the last known valid block\n\nResult:\n{\n \"hash\": \"hash\",     (string) hex block hash\n \"height\": n,      (numeric) block height\n \"sprout\": {\n  \"skipHash\": \"hash\",  (string) hash of most recent block with more information\n  \"commitments\": {\n   \"finalRoot\": \"hex\", (string)\n   \"finalState\": \"hex\" (string)\n  }\n },\n \"sapling\": {\n  \"skipHash\": \"hash\",  (string) hash of most recent block with more information\n  \"commitments\": {\n   \"finalRoot\": \"hex\", (string)\n   \"finalState\": \"hex\" (string)\n  }\n }\n}\n\nExamples:\n> verus z_gettreestate \"00000000febc373a1da2bd9f887b105ad79ddc26ac26c2b28652d64e5207c5b5\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettreestate\", \"params\": [\"00000000febc373a1da2bd9f887b105ad79ddc26ac26c2b28652d64e5207c5b5\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n> verus z_gettreestate 12800\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettreestate\", \"params\": [12800] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/z_gettreestate"
]