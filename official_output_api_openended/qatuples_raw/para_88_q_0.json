[
    "How can I use the `getblockhashes` command in Verus to retrieve an array of hashes of blocks within a specific timestamp range, and what options are available to customize the output?",
    "The `getblockhashes` command in Verus allows you to retrieve an array of hashes of blocks within a specific timestamp range. This command is useful for retrieving information about blocks that were mined within a certain time period.\n\nTo use the `getblockhashes` command, you need to provide three arguments: `high`, `low`, and `options`. The `high` argument specifies the newer block timestamp, and the `low` argument specifies the older block timestamp. The `options` argument is a JSON object that allows you to customize the output.\n\nThe `options` JSON object can contain two properties: `noOrphans` and `logicalTimes`. The `noOrphans` property is a boolean that, if set to `true`, will only include blocks on the main chain in the output. The `logicalTimes` property is also a boolean that, if set to `true`, will include logical timestamps with hashes in the output.\n\nThe result of the `getblockhashes` command is an array of block hashes, where each hash is a string. If the `logicalTimes` option is set to `true`, each element in the array will be an object containing the block hash and the logical timestamp.\n\nHere are some examples of how to use the `getblockhashes` command:\n\n* To retrieve an array of block hashes within a specific timestamp range, without any additional options: `verus getblockhashes 1231614698 1231024505`\n* To retrieve an array of block hashes within a specific timestamp range, using the `noOrphans` option: `verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":true}'`\n* To retrieve an array of block hashes within a specific timestamp range, using the `logicalTimes` option: `verus getblockhashes 1231614698 1231024505 '{\"logicalTimes\":true}'`\n* To retrieve an array of block hashes within a specific timestamp range, using both the `noOrphans` and `logicalTimes` options: `verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":true, \"logicalTimes\":true}'`\n\nNote that the `getblockhashes` command can also be used with the Verus RPC interface, by sending a JSON-RPC request to the Verus daemon.",
    "getblockhashes timestamp\n\nReturns array of hashes of blocks within the timestamp range provided.\n\nArguments:\n1. high     (numeric, required) The newer block timestamp\n2. low     (numeric, required) The older block timestamp\n3. options   (string, required) A json object\n  {\n   \"noOrphans\":true  (boolean) will only include blocks on the main chain\n   \"logicalTimes\":true  (boolean) will include logical timestamps with hashes\n  }\n\nResult:\n[\n \"hash\"     (string) The block hash\n]\n[\n {\n  \"blockhash\": (string) The block hash\n  \"logicalts\": (numeric) The logical timestamp\n }\n]\n\nExamples:\n> verus getblockhashes 1231614698 1231024505\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockhashes\", \"params\": [1231614698, 1231024505] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n> verus getblockhashes 1231614698 1231024505 '{\"noOrphans\":false, \"logicalTimes\":true}'",
    "./raw_text_input_api_text/getblockhashes"
]