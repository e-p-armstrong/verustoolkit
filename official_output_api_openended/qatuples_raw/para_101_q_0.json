[
    "What information does the `getwalletinfo` command provide about the Verus wallet, and how can it be accessed?",
    "The `getwalletinfo` command returns an object containing various wallet state information. This information includes:\n\n1. **Wallet Version**: The version number of the wallet.\n2. **Balance**: The total confirmed balance of the wallet in VRSC.\n3. **Reserve Balance**: For PBaaS reserve chains, the total confirmed reserve balance of the wallet in VRSC.\n4. **Unconfirmed Balance**: The total unconfirmed balance of the wallet in VRSC.\n5. **Unconfirmed Reserve Balance**: The total unconfirmed reserve balance of the wallet in VRSC.\n6. **Immature Balance**: The total immature balance of the wallet in VRSC.\n7. **Immature Reserve Balance**: The total immature reserve balance of the wallet in VRSC.\n8. **Eligible Staking Balance**: The eligible staking balance in VRSC.\n9. **Transaction Count**: The total number of transactions in the wallet.\n10. **Key Pool Oldest**: The timestamp of the oldest pre-generated key in the key pool.\n11. **Key Pool Size**: The number of new keys that are pre-generated.\n12. **Unlocked Until**: The timestamp that the wallet is unlocked for transfers, or 0 if the wallet is locked.\n13. **Transaction Fee**: The transaction fee configuration, set in VRSC/kB.\n14. **Seed Fingerprint**: The BLAKE2b-256 hash of the HD seed.\n\nTo access this information, you can use the `getwalletinfo` command in the Verus CLI by running `verus getwalletinfo`. Alternatively, you can use the JSON-RPC API by sending a request to `http://127.0.0.1:27486/` with the method set to `getwalletinfo` and an empty parameter list.",
    "getwalletinfo\nReturns an object containing various wallet state info.\n\nResult:\n{\n \"walletversion\": xxxxx,   (numeric) the wallet version\n \"balance\": xxxxxxx,     (numeric) the total confirmed balance of the wallet in VRSC\n \"reserve_balance\": xxxxxxx, (numeric) for PBaaS reserve chains, the total confirmed reserve balance of the wallet in VRSC\n \"unconfirmed_balance\": xxx, (numeric) the total unconfirmed balance of the wallet in VRSC\n \"unconfirmed_reserve_balance\": xxx, (numeric) total unconfirmed reserve balance of the wallet in VRSC\n \"immature_balance\": xxxxxx, (numeric) the total immature balance of the wallet in VRSC\n \"immature_reserve_balance\": xxxxxx, (numeric) total immature reserve balance of the wallet in VRSC\n \"eligible_staking_balance\": xxxxxx, (numeric) eligible staking balance in VRSC\n \"txcount\": xxxxxxx,     (numeric) the total number of transactions in the wallet\n \"keypoololdest\": xxxxxx,  (numeric) the timestamp (seconds since GMT epoch) of the oldest pre-generated key in the key pool\n \"keypoolsize\": xxxx,    (numeric) how many new keys are pre-generated\n \"unlocked_until\": ttt,   (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\n \"paytxfee\": x.xxxx,     (numeric) the transaction fee configuration, set in VRSC/kB\n \"seedfp\": \"uint256\",   (string) the BLAKE2b-256 hash of the HD seed\n}\n\nExamples:\n> verus getwalletinfo \n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getwalletinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getwalletinfo"
]