[
    "What is the purpose of the `addnode` command in Verus, and how can I use it to manage my node connections?",
    "The `addnode` command in Verus is used to manage the list of nodes that your Verus client connects to. This command allows you to add, remove, or try a connection to a node once.\n\nTo use the `addnode` command, you need to specify two arguments: the node and the command. The node is a string that identifies the node you want to add, remove, or try a connection to. The command is a string that specifies the action you want to perform on the node. The available commands are:\n\n* `add`: Adds the node to the list of nodes that your Verus client connects to.\n* `remove`: Removes the node from the list of nodes that your Verus client connects to.\n* `onetry`: Tries to connect to the node once.\n\nHere are some examples of how to use the `addnode` command:\n\n* To try a connection to a node once, you can use the following command: `verus addnode \"192.168.0.6:8233\" \"onetry\"`\n* To add a node to the list of nodes, you can use the following command: `verus addnode \"192.168.0.6:8233\" \"add\"`\n* To remove a node from the list of nodes, you can use the following command: `verus addnode \"192.168.0.6:8233\" \"remove\"`\n\nYou can also use the `addnode` command with the Verus JSON-RPC API. For example: `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`\n\nIn summary, the `addnode` command is a flexible tool that allows you to manage your node connections in Verus. By using the `add`, `remove`, and `onetry` commands, you can control which nodes your Verus client connects to and try out new connections.",
    "addnode \"node\" \"add|remove|onetry\"\n\nAttempts add or remove a node from the addnode list.\nOr try a connection to a node once.\n\nArguments:\n1. \"node\"   (string, required) The node (see getpeerinfo for nodes)\n2. \"command\" (string, required) 'add' to add a node to the list, 'remove' to remove a node from the list, 'onetry' to try a connection to the node once\n\nExamples:\n> verus addnode \"192.168.0.6:8233\" \"onetry\"\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addnode\", \"params\": [\"192.168.0.6:8233\", \"onetry\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/addnode"
]