[
    "How do I add a viewing key to my Verus wallet, and what are the implications of doing so?",
    "To add a viewing key to your Verus wallet, you can use the `z_importviewingkey` command. This command allows you to import a viewing key, which is a special type of key that allows you to view transactions related to a specific address without being able to spend the funds associated with that address.\n\nThe `z_importviewingkey` command takes three arguments: the viewing key itself, a rescan option, and a start height option. The viewing key is a required string argument, while the rescan and start height options are optional.\n\nThe rescan option determines whether the wallet will rescan for transactions related to the viewing key. This can be set to \"yes\", \"no\", or \"whenkeyisnew\". If set to \"yes\", the wallet will rescan the entire blockchain for transactions related to the viewing key, which can take a significant amount of time. If set to \"no\", the wallet will not rescan for transactions. If set to \"whenkeyisnew\", the wallet will only rescan for transactions if the viewing key is new.\n\nThe start height option determines the block height from which the wallet will start rescanning for transactions. This is only relevant if the rescan option is set to \"yes\" or \"whenkeyisnew\".\n\nWhen you import a viewing key, Verus will return a JSON object with information about the viewing key, including its type (either \"sprout\" or \"sapling\") and the address associated with it.\n\nIt's worth noting that importing a viewing key can take a significant amount of time if the rescan option is set to \"yes\", so it's generally recommended to only do so when necessary. Additionally, importing a viewing key does not give you the ability to spend funds associated with the address, only to view transactions related to it.",
    "z_importviewingkey \"vkey\" ( rescan startHeight )\n\nAdds a viewing key (as returned by z_exportviewingkey) to your wallet.\n\nArguments:\n1. \"vkey\"       (string, required) The viewing key (see z_exportviewingkey)\n2. rescan       (string, optional, default=\"whenkeyisnew\") Rescan the wallet for transactions - can be \"yes\", \"no\" or \"whenkeyisnew\"\n3. startHeight    (numeric, optional, default=0) Block height to start rescan from\n\nNote: This call can take minutes to complete if rescan is true.\n\nResult:\n{\n \"type\" : \"xxxx\",             (string) \"sprout\" or \"sapling\"\n \"address\" : \"address|DefaultAddress\",  (string) The address corresponding to the viewing key (for Sapling, this is the default address).\n}\n\nExamples:\n\nImport a viewing key\n> verus z_importviewingkey \"vkey\"\n\nImport the viewing key without rescan\n> verus z_importviewingkey \"vkey\", no\n\nImport the viewing key with partial rescan\n> verus z_importviewingkey \"vkey\" whenkeyisnew 30000\n\nRe-import the viewing key with longer partial rescan\n> verus z_importviewingkey \"vkey\" yes 20000\n\nAs a JSON-RPC call\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_importviewingkey\", \"params\": [\"vkey\", \"no\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/z_importviewingkey"
]