[
    [
        [
            "What is the purpose of the `updateidentity` command in Verus?",
            "The `updateidentity` command is used to update the definition of an identity in Verus. It allows you to modify the properties of an existing identity.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ],
        [
            "What is the required argument for the `updateidentity` command?",
            "The required argument for the `updateidentity` command is `\"jsonidentity\"`, which is a JSON object that contains the new definition of the identity.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ],
        [
            "What is the default behavior of the `updateidentity` command if the `returntx` argument is not specified?",
            "If the `returntx` argument is not specified, the default behavior of the `updateidentity` command is to send the transaction and return the transaction ID (txid) as a hex string.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ],
        [
            "What is the purpose of the `tokenupdate` argument in the `updateidentity` command?",
            "The `tokenupdate` argument in the `updateidentity` command is used to specify whether the tokenized ID control token should be used to update the identity. If set to `true`, it enables changing the revocation or recovery IDs, even if the wallet holding the token does not control either.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ],
        [
            "How can I specify a non-standard fee amount for the `updateidentity` transaction?",
            "You can specify a non-standard fee amount for the `updateidentity` transaction by using the `feeoffer` argument and providing the desired fee value.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ],
        [
            "What is the purpose of the `sourceoffunds` argument in the `updateidentity` command?",
            "The `sourceoffunds` argument in the `updateidentity` command is used to specify a transparent or private address to source all funds for fees, which helps preserve the privacy of the identity.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ],
        [
            "How can I use the `updateidentity` command via the Verus CLI and via the Verus RPC API?",
            "You can use the `updateidentity` command via the Verus CLI by running a command like `verus updateidentity '{\"name\" : \"myname\"}'`. You can also use it via the Verus RPC API by sending a JSON-RPC request with the method `updateidentity` and the required arguments, like `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`.",
            "updateidentity \"jsonidentity\" (returntx) (tokenupdate) (feeoffer) (sourceoffunds) Arguments    \"jsonidentity\"          (obj,  required) new definition of the identity    \"returntx\"            (bool,  optional) defaults to false and transaction is sent, if true, transaction is signed by this wallet and returned    \"tokenupdate\"           (bool,  optional) defaults to false, if true, the tokenized ID control token, if one exists, will be used to update                                which enables changing the revocation or recovery IDs, even if the wallet holding the token does not                                control either.    \"feeoffer\"            (value, optional) non-standard fee amount to pay for the transaction    \"sourceoffunds\"          (string, optional) transparent or private address to source all funds for fees to preserve privacy of the identity Result:  hex string of either the txid if returnhex is false or the hex serialized transaction if returntx is true Examples: > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/updateidentity"
        ]
    ],
    "will",
    "be",
    "replaced",
    "ac65496c-c345-47b6-8cb6-eeeeb7906070"
]