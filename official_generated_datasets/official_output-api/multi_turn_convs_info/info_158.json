[
    [
        [
            "What is the purpose of the `z_getoperationresult` command in Verus?",
            "The `z_getoperationresult` command is used to retrieve the result and status of an operation that has finished, and then remove the operation from memory.",
            "z_getoperationresult ([\"operationid\", ... ]) Retrieve the result and status of an operation which has finished, and then remove the operation from memory. Arguments: 1. \"operationid\"     (array, optional) A list of operation ids we are interested in. If not provided, examine all operations known to the node. Result: \"  [object, ...]\"   (array) A list of JSON objects Examples: > verus z_getoperationresult '[\"operationid\", ... ]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getoperationresult\", \"params\": ['[\"operationid\", ... ]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_getoperationresult"
        ],
        [
            "What arguments does the `z_getoperationresult` command take?",
            "The `z_getoperationresult` command takes an optional argument, which is an array of operation IDs. If this argument is not provided, the command will examine all operations known to the node.",
            "z_getoperationresult ([\"operationid\", ... ]) Retrieve the result and status of an operation which has finished, and then remove the operation from memory. Arguments: 1. \"operationid\"     (array, optional) A list of operation ids we are interested in. If not provided, examine all operations known to the node. Result: \"  [object, ...]\"   (array) A list of JSON objects Examples: > verus z_getoperationresult '[\"operationid\", ... ]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getoperationresult\", \"params\": ['[\"operationid\", ... ]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_getoperationresult"
        ],
        [
            "What is the format of the result returned by the `z_getoperationresult` command?",
            "The result returned by the `z_getoperationresult` command is an array of JSON objects, each containing the result and status of an operation.",
            "z_getoperationresult ([\"operationid\", ... ]) Retrieve the result and status of an operation which has finished, and then remove the operation from memory. Arguments: 1. \"operationid\"     (array, optional) A list of operation ids we are interested in. If not provided, examine all operations known to the node. Result: \"  [object, ...]\"   (array) A list of JSON objects Examples: > verus z_getoperationresult '[\"operationid\", ... ]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getoperationresult\", \"params\": ['[\"operationid\", ... ]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_getoperationresult"
        ],
        [
            "How can I use the `z_getoperationresult` command from the command line?",
            "You can use the `z_getoperationresult` command from the command line by running `verus z_getoperationresult '[\"operationid\",... ]'`, replacing `operationid` with the actual ID of the operation you're interested in.",
            "z_getoperationresult ([\"operationid\", ... ]) Retrieve the result and status of an operation which has finished, and then remove the operation from memory. Arguments: 1. \"operationid\"     (array, optional) A list of operation ids we are interested in. If not provided, examine all operations known to the node. Result: \"  [object, ...]\"   (array) A list of JSON objects Examples: > verus z_getoperationresult '[\"operationid\", ... ]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getoperationresult\", \"params\": ['[\"operationid\", ... ]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_getoperationresult"
        ],
        [
            "How can I use the `z_getoperationresult` command using curl?",
            "You can use the `z_getoperationresult` command using curl by running a command like `curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getoperationresult\", \"params\": ['[\"operationid\",... ]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/`, replacing `operationid` with the actual ID of the operation you're interested in and `myusername` with your actual username.",
            "z_getoperationresult ([\"operationid\", ... ]) Retrieve the result and status of an operation which has finished, and then remove the operation from memory. Arguments: 1. \"operationid\"     (array, optional) A list of operation ids we are interested in. If not provided, examine all operations known to the node. Result: \"  [object, ...]\"   (array) A list of JSON objects Examples: > verus z_getoperationresult '[\"operationid\", ... ]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_getoperationresult\", \"params\": ['[\"operationid\", ... ]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/z_getoperationresult"
        ]
    ],
    "will",
    "be",
    "replaced",
    "2df4ee16-463e-4969-a39d-6439b6314d54"
]