[
    [
        [
            "What is the purpose of the \"name\" field when defining a PBaaS chain or currency?",
            "The \"name\" field is a required string that specifies the name of an existing identity with no active or pending blockchain.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What does the \"idregistrationfees\" field represent in a PBaaS chain or currency definition?",
            "The \"idregistrationfees\" field represents the price of an identity in the native currency of the PBaaS chain or currency.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What is the role of \"idreferrallevels\" in a PBaaS chain or currency definition?",
            "The \"idreferrallevels\" field specifies how many levels ID referrals go back in reward. It is a required integer value.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What is the purpose of the \"notaries\" field in a PBaaS chain or currency definition?",
            "The \"notaries\" field is an optional list of identities that are assigned as chain notaries.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What does the \"minnotariesconfirm\" field represent in a PBaaS chain or currency definition?",
            "The \"minnotariesconfirm\" field specifies the minimum number of unique notary signatures required to confirm an auto-notarization. It is an optional integer value.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What is the purpose of the \"notarizationreward\" field in a PBaaS chain or currency definition?",
            "The \"notarizationreward\" field specifies the default VRSC notarization reward total for the first billing period. It is a required value.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What does the \"proofprotocol\" field represent in a PBaaS chain or currency definition?",
            "The \"proofprotocol\" field specifies the proof protocol used by the PBaaS chain or currency. It can be one of three values:\n1. PROOF_PBAASMMR (1): Verus MMR proof, no notaries required.\n2. PROOF_CHAINID (2): Non-native only - currency has centralized control, and can mint/burn & change weights.\n3. PROOF_ETHNOTARIZATION (3): ETH & PATRICIA TRIE proof (requires full understanding + C++, JavaScript & Solidity dev(s)).",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What is the purpose of the \"notarizationprotocol\" field in a PBaaS chain or currency definition?",
            "The \"notarizationprotocol\" field specifies the notarization protocol used by the PBaaS chain or currency. It can be one of three values:\n1. PROOF_PBAASMMR (1): Verus MMR proof, no notaries required.\n2. PROOF_CHAINID (2): Chain ID is sole notary for proof, no evidence required.\n3. PROOF_ETHNOTARIZATION (3): Ethereum notarization & PATRICIA TRIE proof.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What does the \"expiryheight\" field represent in a PBaaS chain or currency definition?",
            "The \"expiryheight\" field specifies the block height at which the transaction expires. If not specified, it defaults to the current block height plus 20.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What is the purpose of the \"startblock\" field in a PBaaS chain or currency definition?",
            "The \"startblock\" field specifies the VRSC block that must be notarized into block 1 of the PBaaS chain. If not specified, it defaults to the expiry height.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ],
        [
            "What does the \"endblock\" field represent in a PBaaS chain or currency definition?",
            "The \"endblock\" field specifies the block height at which the chain or currency is intended to end its life. If set to 0, it means there is no end to the chain or currency's life.",
            "\"name\" : \"xxxx\",       (string, required) name of existing identity with no active or pending blockchain     \"idregistrationfees\" : \"xx.xx\", (value, required) price of an identity in native currency     \"idreferrallevels\" : n,     (int, required) how many levels ID referrals go back in reward     \"notaries\" : \"[identity,..]\", (list, optional) list of identities that are assigned as chain notaries     \"minnotariesconfirm\" : n,    (int, optional) unique notary signatures required to confirm an auto-notarization     \"notarizationreward\" : \"xx.xx\", (value, required) default VRSC notarization reward total for first billing period     \"proofprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - non-native only - currency has centralized control, and                                        can mint/burn & change weights                              3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                            full understanding + C++, JavaScript & Solidity dev(s)) \"notarizationprotocol\" : n,      (int,  optional) if 2, currency can be minted by whoever controls the ID                              1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                              2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                              3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof \"expiryheight\" : n,      (int,  optional) block height at which the transaction expires, default: curheight + 20     \"startblock\"  : n,      (int,  optional) VRSC block must be notarized into block 1 of PBaaS chain, default: expiryheight     \"endblock\"   : n,      (int,  optional) chain or currency intended to end life after this height, 0 = no end     \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies bac",
            "./raw_text_input_api_text/definecurrency"
        ]
    ],
    "will",
    "be",
    "replaced",
    "7f4ae1a2-f488-4093-8197-d6d5695c2438"
]