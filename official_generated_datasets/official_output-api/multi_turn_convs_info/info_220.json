[
    [
        [
            "What is the purpose of the `encryptwallet` command in Verus?",
            "The `encryptwallet` command is used to encrypt the wallet with a passphrase. This is typically used for first-time encryption. After encryption, any calls that interact with private keys, such as sending or signing, will require the passphrase to be set prior to making these calls.",
            "encryptwallet \"passphrase\" WARNING: encryptwallet is disabled. To enable it, restart zcashd with the -experimentalfeatures and -developerencryptwallet commandline options, or add these two lines to the zcash.conf file: experimentalfeatures=1 developerencryptwallet=1 Encrypts the wallet with 'passphrase'. This is for first time encryption. After this, any calls that interact with private keys such as sending or signing will require the passphrase to be set prior the making these calls. Use the walletpassphrase call for this, and then walletlock call. If the wallet is already encrypted, use the walletpassphrasechange call. Note that this will shutdown the server. Arguments: 1. \"passphrase\"  (string) The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long. Examples: Encrypt you wallet > verus encryptwallet \"my pass phrase\" Now set the passphrase to use the wallet, such as for signing or sending VRSC > verus walletpassphrase \"my pass phrase\" Now we can so something like sign > verus signmessage \"VRSC_address\" \"test message\" Now lock the wallet again by removing the passphrase > verus walletlock As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"encryptwallet\", \"params\": [\"my pass phrase\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/encryptwallet"
        ],
        [
            "What is the minimum length of the passphrase required to encrypt the wallet?",
            "The passphrase must be at least 1 character long, but it is recommended to use a longer and more secure passphrase.",
            "encryptwallet \"passphrase\" WARNING: encryptwallet is disabled. To enable it, restart zcashd with the -experimentalfeatures and -developerencryptwallet commandline options, or add these two lines to the zcash.conf file: experimentalfeatures=1 developerencryptwallet=1 Encrypts the wallet with 'passphrase'. This is for first time encryption. After this, any calls that interact with private keys such as sending or signing will require the passphrase to be set prior the making these calls. Use the walletpassphrase call for this, and then walletlock call. If the wallet is already encrypted, use the walletpassphrasechange call. Note that this will shutdown the server. Arguments: 1. \"passphrase\"  (string) The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long. Examples: Encrypt you wallet > verus encryptwallet \"my pass phrase\" Now set the passphrase to use the wallet, such as for signing or sending VRSC > verus walletpassphrase \"my pass phrase\" Now we can so something like sign > verus signmessage \"VRSC_address\" \"test message\" Now lock the wallet again by removing the passphrase > verus walletlock As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"encryptwallet\", \"params\": [\"my pass phrase\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/encryptwallet"
        ],
        [
            "What is the purpose of the `walletpassphrase` call after encrypting the wallet?",
            "The `walletpassphrase` call is used to set the passphrase to use the wallet, such as for signing or sending VRSC. This is required after encrypting the wallet to interact with private keys.",
            "encryptwallet \"passphrase\" WARNING: encryptwallet is disabled. To enable it, restart zcashd with the -experimentalfeatures and -developerencryptwallet commandline options, or add these two lines to the zcash.conf file: experimentalfeatures=1 developerencryptwallet=1 Encrypts the wallet with 'passphrase'. This is for first time encryption. After this, any calls that interact with private keys such as sending or signing will require the passphrase to be set prior the making these calls. Use the walletpassphrase call for this, and then walletlock call. If the wallet is already encrypted, use the walletpassphrasechange call. Note that this will shutdown the server. Arguments: 1. \"passphrase\"  (string) The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long. Examples: Encrypt you wallet > verus encryptwallet \"my pass phrase\" Now set the passphrase to use the wallet, such as for signing or sending VRSC > verus walletpassphrase \"my pass phrase\" Now we can so something like sign > verus signmessage \"VRSC_address\" \"test message\" Now lock the wallet again by removing the passphrase > verus walletlock As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"encryptwallet\", \"params\": [\"my pass phrase\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/encryptwallet"
        ],
        [
            "How do I lock the wallet again after using it?",
            "To lock the wallet again, use the `walletlock` command to remove the passphrase.",
            "encryptwallet \"passphrase\" WARNING: encryptwallet is disabled. To enable it, restart zcashd with the -experimentalfeatures and -developerencryptwallet commandline options, or add these two lines to the zcash.conf file: experimentalfeatures=1 developerencryptwallet=1 Encrypts the wallet with 'passphrase'. This is for first time encryption. After this, any calls that interact with private keys such as sending or signing will require the passphrase to be set prior the making these calls. Use the walletpassphrase call for this, and then walletlock call. If the wallet is already encrypted, use the walletpassphrasechange call. Note that this will shutdown the server. Arguments: 1. \"passphrase\"  (string) The pass phrase to encrypt the wallet with. It must be at least 1 character, but should be long. Examples: Encrypt you wallet > verus encryptwallet \"my pass phrase\" Now set the passphrase to use the wallet, such as for signing or sending VRSC > verus walletpassphrase \"my pass phrase\" Now we can so something like sign > verus signmessage \"VRSC_address\" \"test message\" Now lock the wallet again by removing the passphrase > verus walletlock As a json rpc call > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"encryptwallet\", \"params\": [\"my pass phrase\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
            "./raw_text_input_api_text/encryptwallet"
        ]
    ],
    "will",
    "be",
    "replaced",
    "33db1082-ff0c-4d39-862b-d70ad591477f"
]