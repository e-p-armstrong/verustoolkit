[
    "What are the arguments required for the `getcurrencystate` command?",
    "The `getcurrencystate` command requires the following arguments:\n\n1. `currencynameorid`: the name or i-address of the currency in question (string)\n2. `n` or `m,n` or `m,n,o` (optional): the height or inclusive range with optional step at which to get the currency state (int or string)\n3. `connectedsystemid` (optional): the optional connected chain ID (string)",
    "getcurrencystate \"currencynameorid\" (\"n\") (\"connectedsystemid\") Returns the currency state(s) on the blockchain for any specified currency, either with all changes on this chain or relative to another system. Arguments  \"currencynameorid\"         (string)         name or i-address of currency in question  \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the currency state                                  If not specified, the latest currency state and height is returned  (\"connectedchainid\")        (string)         optional Result:  [    {      \"height\": n,      \"blocktime\": n,      \"currencystate\": {        \"flags\" : n,        \"initialratio\" : n,        \"initialsupply\" : n,        \"emitted\" : n,        \"supply\" : n,        \"reserve\" : n,        \"currentratio\" : n,      \"}    },  ] Examples: > verus getcurrencystate \"currencynameorid\" (\"n\") (\"connectedchainid\") > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getcurrencystate\", \"params\": [\"currencynameorid\" (\"n\") (\"connectedchainid\")] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getcurrencystate"
]