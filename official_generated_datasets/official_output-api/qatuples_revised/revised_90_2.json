[
    "What information is returned by the `getaddressmempool` command?",
    "The `getaddressmempool` command returns an array of objects, each containing the following information:\n\n1. `address`: The base58check encoded address.\n2. `txid`: The related transaction ID.\n3. `index`: The related input or output index.\n4. `satoshis`: The difference of satoshis.\n5. `timestamp`: The time the transaction entered the mempool (in seconds).\n6. `prevtxid`: The previous transaction ID (if spending).\n7. `prevout`: The previous transaction output index (if spending).",
    "getaddressmempool Returns all mempool deltas for an address (requires addressindex to be enabled). Arguments: {  \"addresses\"   [    \"address\"   (string) The base58check encoded address    ,...   ]  \"friendlynames\"  (boolean) Include additional array of friendly names keyed by currency i-addresses  \"verbosity\"    (number) (default == 0), if 1, include output information for spends, including all reserve amounts and destinations } Result: [  {   \"address\" (string) The base58check encoded address   \"txid\" (string) The related txid   \"index\" (number) The related input or output index   \"satoshis\" (number) The difference of satoshis   \"timestamp\" (number) The time the transaction entered the mempool (seconds)   \"prevtxid\" (string) The previous txid (if spending)   \"prevout\" (string) The previous transaction output index (if spending)  } ] Examples: > verus getaddressmempool '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressmempool\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getaddressmempool"
]