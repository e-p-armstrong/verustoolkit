[
    "What arguments does the `getaddressutxos` command take?",
    "The `getaddressutxos` command takes the following arguments:\n\n1. `addresses`: An array of base58check encoded addresses.\n2. `chaininfo`: A boolean indicating whether to include chain information with the results.\n3. `friendlynames`: An optional boolean (defaulting to `false`) indicating whether to include an additional array of friendly names keyed by currency i-addresses.\n4. `verbosity`: A number (defaulting to `0`) indicating the level of detail in the output. If set to `1`, it includes output information for spends, including all reserve amounts and destinations.",
    "getaddressutxos Returns all unspent outputs for an address (requires addressindex to be enabled). Arguments: {  \"addresses\"   [    \"address\" (string) The base58check encoded address    ,...   ],  \"chaininfo\"  (boolean) Include chain info with results  \"friendlynames\" (boolean, optional default=false) Include additional array of friendly names keyed by currency i-addresses  \"verbosity\"  (number) (default == 0), if 1, include output information for spends, including all reserve amounts and destinations } Result [  {   \"address\" (string) The address base58check encoded   \"txid\" (string) The output txid   \"height\" (number) The block height   \"outputIndex\" (number) The output index   \"script\" (strin) The script hex encoded   \"satoshis\" (number) The number of satoshis of the output  } ] Examples: > verus getaddressutxos '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressutxos\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getaddressutxos"
]