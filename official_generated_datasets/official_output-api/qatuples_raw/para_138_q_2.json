[
    "How can I use the `getpeerinfo` command to get information about connected network nodes?",
    "You can use the `getpeerinfo` command by running `verus getpeerinfo` in the command line, or by using the JSON RPC interface with a tool like `curl`. For example:\n\n```\n> verus getpeerinfo\n```\n\nor\n\n```\n> curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getpeerinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\n\nThis will return a JSON array of objects containing information about each connected network node.",
    "getpeerinfo Returns data about each connected network node as a json array of objects. bResult: [  {   \"id\": n,          (numeric) Peer index   \"addr\":\"host:port\",   (string) The ip address and port of the peer   \"addrlocal\":\"ip:port\",  (string) local address   \"services\":\"xxxxxxxxxxxxxxxx\",  (string) The services offered   \"tls_established\": true|false,    (boolean) status of TLS connection   \"tls_verified\": true|false,      (boolean) status of peer certificate. True if the chain of trust of a peer certificate can be verified using the OS certificate store   \"lastsend\": ttt,      (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last send   \"lastrecv\": ttt,      (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last receive   \"bytessent\": n,      (numeric) The total bytes sent   \"bytesrecv\": n,      (numeric) The total bytes received   \"conntime\": ttt,      (numeric) The connection time in seconds since epoch (Jan 1 1970 GMT)   \"timeoffset\": ttt,     (numeric) The time offset in seconds   \"pingtime\": n,       (numeric) ping time   \"pingwait\": n,       (numeric) ping wait   \"version\": v,       (numeric) The peer version, such as 170002   \"subver\": \"/MagicBean:x.y.z[-v]/\", (string) The string version   \"inbound\": true|false,   (boolean) Inbound (true) or Outbound (false)   \"startingheight\": n,    (numeric) The starting height (block) of the peer   \"banscore\": n,       (numeric) The ban score   \"synced_headers\": n,    (numeric) The last header we have in common with this peer   \"synced_blocks\": n,    (numeric) The last block we have in common with this peer   \"inflight\": [    n,            (numeric) The heights of blocks we're currently asking from this peer    ...   ]  }  ,... ] Examples: > verus getpeerinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getpeerinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/",
    "./raw_text_input_api_text/getpeerinfo"
]