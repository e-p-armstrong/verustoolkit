[
    [
        [
            "What is the purpose of the `minconf` option in the `sendcurrency` command?",
            "The `minconf` option in the `sendcurrency` command is used to specify the minimum number of confirmations required for the funds to be used in the transaction. The default value is 1.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `burn` option in the `sendcurrency` command?",
            "The `burn` option in the `sendcurrency` command is used to destroy the currency and subtract it from the supply. This option only works if the currency is a token.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `returntxtemplate` option in the `sendcurrency` command?",
            "The `returntxtemplate` option in the `sendcurrency` command is used to return the transaction template without submitting the transaction to the chain. If set to true, it returns the transaction info without submitting the transaction.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `feeamount` option in the `sendcurrency` command?",
            "The `feeamount` option in the `sendcurrency` command is used to specify a specific fee amount for the transaction, instead of using the default miner's fee.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the result of the `sendcurrency` command if `returntxtemplate` is set to true?",
            "If `returntxtemplate` is set to true, the result of the `sendcurrency` command will be a JSON object containing the transaction template with all specified outputs and no inputs. The object will have two properties: `outputtotals` and `hextx`.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `mintnew` option in the `sendcurrency` command?",
            "The `mintnew` option in the `sendcurrency` command is used to create new currency to send. This option only works if the transaction is sent from the currency ID of a centralized currency.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `preconvert` option in the `sendcurrency` command?",
            "The `preconvert` option in the `sendcurrency` command is used to convert the currency to the destination currency at the current market price. This option only works if the transaction is mined before the start of the currency.",
            " reserves, via is a common fractional to convert through    \"address\":\"dest\"    (string, required) The address and optionally chain/system after the \"@\" as a system specific destination    \"refundto\":\"dest\"   (string, optional) For pre-conversions, this is where refunds will go, defaults to fromaddress    \"memo\":memo      (string, optional) If destination is a zaddr (not supported on testnet), a string message (not hexadecimal) to include.    \"preconvert\":\"false\", (bool,  optional) convert to currency at market price (default=false), only works if transaction is mined before start of currency    \"burn\":\"false\",    (bool,  optional) destroy the currency and subtract it from the supply. Currency must be a token.    \"mintnew\":\"false\",   (bool,  optional) if the transaction is sent from the currency ID of a centralized currency, this creates new currency to send   }, ... ]   ``` 3. \"minconf\"         (numeric, optional, default=1) only use funds confirmed at least this many times. 4. \"feeamount\"        (numeric, optional) specific fee amount requested instead of default miner's fee. 5. \"returntxtemplate     (boolean, optional, default false) if true, returns transaction info without submitting the transaction to the chain.#### Result: 1. \"operationid\"     (string) An operationid to pass to z_getoperationstatus to get the result of the operation. 2. If (returntxtemplate) is true  ```json {  \"outputtotals\" : {currencyvaluemap}  Total outputs in all currencies the need to be input to the transaction  \"hextx\" : \"hexstring\"         The transaction with all specified outputs and no inputs } ```Examples: ```bash > verus sendcurrency \"*\" '[{\"currency\":\"btc\",\"address\":\"RRehdmUV7oEAqoZnzEGBH34XysnWaBatct\" ,\"amount\":500.0},...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendcurrency\", \"params\": [\"bob@\", [{\"currency\":\"btc\", \"address\":\"alice@quad\", \"amount\":500.0},...]] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d951d54f-d56c-4056-b29e-534e377ee790"
]