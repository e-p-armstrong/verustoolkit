[
    [
        [
            "What happens when an ID is revoked, and how does it affect its locked status?",
            "When an ID is revoked, its locked status is cleared, regardless of any time delay or unlock height. Additionally, a locked identity cannot revoke itself.",
            "ll of their pre-conversions, less the network fees. The launch options also provide for maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies, similarly price neutral carve-outs of proceeds, and pre-launch discounts for early participants. Using VerusIDs, launches can also include vesting schedules in the pre-allocations as well. ## An interoperable, multichain network for new use cases and unlimited scale** - The Verus multi-currency, multi-chain network allows the creation of an unlimited number of interoperable blockchains in the Verus network. Notary IDs, specified at chain definition, provide decentralized blockchain-specific bridge confirmation, enabling public blockchains available to the world for merge mining and staking, as well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be u",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the two types of time locks available for IDs on the Verus network, and how are they used?",
            "The two types of time locks available for IDs on the Verus network are:\n\n1. **Time Lock:** This sets the unlock height of the identity, specifying the block height at which the ID will be unlocked.\n2. **Time Delay:** This sets a delay in blocks before an ID's unlock when the flags are set back to an unlocked state.",
            "ll of their pre-conversions, less the network fees. The launch options also provide for maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies, similarly price neutral carve-outs of proceeds, and pre-launch discounts for early participants. Using VerusIDs, launches can also include vesting schedules in the pre-allocations as well. ## An interoperable, multichain network for new use cases and unlimited scale** - The Verus multi-currency, multi-chain network allows the creation of an unlimited number of interoperable blockchains in the Verus network. Notary IDs, specified at chain definition, provide decentralized blockchain-specific bridge confirmation, enabling public blockchains available to the world for merge mining and staking, as well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be u",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API, and how is it used?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. This API can be used to find currencies that have liquidity above a certain threshold, for example, to find BTC/ETH markets at or above the liquidity threshold.",
            "ll of their pre-conversions, less the network fees. The launch options also provide for maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies, similarly price neutral carve-outs of proceeds, and pre-launch discounts for early participants. Using VerusIDs, launches can also include vesting schedules in the pre-allocations as well. ## An interoperable, multichain network for new use cases and unlimited scale** - The Verus multi-currency, multi-chain network allows the creation of an unlimited number of interoperable blockchains in the Verus network. Notary IDs, specified at chain definition, provide decentralized blockchain-specific bridge confirmation, enabling public blockchains available to the world for merge mining and staking, as well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be u",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the Verus multi-currency, multi-chain network, and how does it enable scalability and interoperability?",
            "The Verus multi-currency, multi-chain network allows for the creation of an unlimited number of interoperable blockchains within the Verus network. This is achieved through decentralized blockchain-specific bridge confirmation using Notary IDs, specified at chain definition. This enables public blockchains to be available for merge mining and staking, as well as private, internal blockchains that can be easily set up and bridged with public currencies. The Verus network has no limit on the number of blockchains that can continuously operate and interoperate.",
            "ll of their pre-conversions, less the network fees. The launch options also provide for maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies, similarly price neutral carve-outs of proceeds, and pre-launch discounts for early participants. Using VerusIDs, launches can also include vesting schedules in the pre-allocations as well. ## An interoperable, multichain network for new use cases and unlimited scale** - The Verus multi-currency, multi-chain network allows the creation of an unlimited number of interoperable blockchains in the Verus network. Notary IDs, specified at chain definition, provide decentralized blockchain-specific bridge confirmation, enabling public blockchains available to the world for merge mining and staking, as well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be u",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What options are available when launching a new currency on the Verus network?",
            "When launching a new currency on the Verus network, several options are available, including:\n\n1. Maximum participation in one or more currencies.\n2. Pre-launch discounts.\n3. Price-neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies.\n4. Price-neutral carve-outs of proceeds.\n5. Pre-launch discounts for early participants.\n6. Vesting schedules in the pre-allocations using VerusIDs.",
            "ll of their pre-conversions, less the network fees. The launch options also provide for maximum participation in one or more currencies, pre-launch discounts, price neutral pre-allocations to select IDs that increase the fractional reserve ratio to issue currencies, similarly price neutral carve-outs of proceeds, and pre-launch discounts for early participants. Using VerusIDs, launches can also include vesting schedules in the pre-allocations as well. ## An interoperable, multichain network for new use cases and unlimited scale** - The Verus multi-currency, multi-chain network allows the creation of an unlimited number of interoperable blockchains in the Verus network. Notary IDs, specified at chain definition, provide decentralized blockchain-specific bridge confirmation, enabling public blockchains available to the world for merge mining and staking, as well as private, internal blockchains, which are easy to setup with easy bridging of public currencies into an organization and onto their internal private network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be u",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "796ed838-a081-4c2a-b4e4-b67bf3b72b07"
]