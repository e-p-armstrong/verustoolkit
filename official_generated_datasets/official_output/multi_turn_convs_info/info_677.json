[
    [
        [
            "What information is included in the result of the `getsnapshot` command?",
            "The result of the `getsnapshot` command includes the following information:\n\n* A list of addresses with their corresponding amounts\n* The total amount in the snapshot\n* The average amount per address\n* The total number of UTXOs\n* The total number of addresses\n* The start block height\n* The end block height\n* The start time (in Unix epoch time)\n* The end time (in Unix epoch time)",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the `getblock` command used for in Verus?",
            "The `getblock` command is used to retrieve information about a specific block in the blockchain. The command takes two arguments: the block hash or height, and an optional verbosity level.",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What information is included in the result of the `getblock` command, depending on the verbosity level?",
            "The result of the `getblock` command includes the following information, depending on the verbosity level:\n\n* If verbosity is 0, a string that is serialized, hex-encoded data for the block.\n* If verbosity is 1, an object with information about the block.\n* If verbosity is 2, an object with information about the block and information about each transaction.",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the `getbestblockhash` command used for in Verus?",
            "The `getbestblockhash` command is used to retrieve the hash of the best (tip) block in the longest block chain.",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What information is included in the result of the `getbestblockhash` command?",
            "The result of the `getbestblockhash` command includes the block hash in hexadecimal format.",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `coinsupply` command to retrieve coin supply information at a specific block height?",
            "You can use the `coinsupply` command to retrieve coin supply information at a specific block height by passing the block height as an argument. For example:\n```\nverus coinsupply 420\n```\nThis will return the coin supply information at block height 420.",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What information is included in the result of the `coinsupply` command?",
            "The result of the `coinsupply` command includes the following information:\n\n* The result status (success or failure)\n* The currency symbol of the native coin of the blockchain\n* The block height of the coin supply data\n* The transparent coin supply\n* The shielded coin supply (in zaddrs)\n* The total coin supply (sum of transparent and shielded supplies)",
            "#### Result: ```json {  \"addresses\": [   {    \"addr\": \"RMEBhzvATA8mrfVK82E5TgPzzjtaggRGN3\",    \"amount\": \"100.0\"   },   {    \"addr\": \"RqEBhzvATAJmrfVL82E57gPzzjtaggR777\",    \"amount\": \"23.45\"   }  ],  \"total\": 123.45      (numeric) Total amount in snapshot  \"average\": 61.7,     (numeric) Average amount in each address  \"utxos\": 14,       (number) Total number of UTXOs in snapshot  \"total_addresses\": 2,   (number) Total number of addresses in snapshot,  \"start_height\": 91,    (number) Block height snapshot began  \"ending_height\": 91    (number) Block height snapsho finished,  \"start_time\": 1531982752, (number) Unix epoch time snapshot started  \"end_time\": 1531982752  (number) Unix epoch time snapshot finished } ``` Examples: ```bash > verus getsnapshot > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsnapshot\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Blockchain ### `coinsupply <height>` Return coin supply information at a given block height. If no height is given, the current height is used.#### Arguments: 1. \"height\"   (integer, optional) Block height#### Result: ```json {  \"result\" : \"success\",     (string) If the request was successful.  \"coin\" : \"VRSC\",       (string) The currency symbol of the native coin of this blockchain.  \"height\" : 420,         (integer) The height of this coin supply data  \"supply\" : \"777.0\",      (float) The transparent coin supply  \"zfunds\" : \"0.777\",      (float) The shielded coin supply (in zaddrs)  \"total\" : \"777.777\",     (float) The total coin supply, i.e. sum of supply + zfunds } ``` Examples: ```bash > verus coinsupply 420 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"coinsupply\", \"params\": [420] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getbestblockhash` Returns the hash of the best (tip) block in the longest block chain.#### Result: ``` \"hex\"   (string) the block hash hex encoded ``` Examples ```bash > verus getbestblockhash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getbestblockhash\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblock \"hash|height\" ( verbosity )` If verbosity is 0, returns a string that is serialized, hex-encoded data for the block. If verbosity is 1, returns an Object with information about the block. If verbosity is 2, returns an Object with information about the block and information about each transaction.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "d3c8f872-b759-4d0b-904b-23decdd67450"
]