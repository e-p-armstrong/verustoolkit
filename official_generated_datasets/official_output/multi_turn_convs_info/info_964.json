[
    [
        [
            "What are the possible results of the `addmergedblock` command?",
            "The `addmergedblock` command can return two possible results:\n\n1. `\"deserialize-invalid\"`: The block could not be deserialized and was rejected as invalid.\n2. `\"blocksfull\"`: The block did not exceed others in estimated ROI, and there was no room for an additional merge mined block.",
            "#### Arguments: ``` 1. \"hexdata\"           (string, required) the hex-encoded, complete, unsolved block data to add. nTime, and nSolution are replaced. 2. \"name\"            (string, required) chain name symbol 3. \"rpchost\"           (string, required) host address for RPC connection 4. \"rpcport\"           (int,  required) port address for RPC connection 5. \"userpass\"          (string, required) credentials for login to RPC ``` #### Result: ``` \"deserialize-invalid\" - block could not be deserialized and was rejected as invalid \"blocksfull\"     - block did not exceed others in estimated ROI, and there was no room for an additional merge mined block ``` Examples: ```bash > verus addmergedblock \"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addmergedblock\", \"params\": [\"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum, \"estimatedroi\" : (verusreward/hashrate)}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `definecurrency '{\"name\": \"coinortokenname\", ..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}' '({\"name\": \"fractionalgatewayname\", ..., })' ({\"name\": \"reserveonename\", ..., }) ...` This defines a blockchain currency, either as an independent blockchain, or as a token on this blockchain. It also spends the identity after which this currency is named and sets a bit indicating that it has a currently active blockchain in its name.To create a currency of any kind, the identity it is named after must be minted on the blockchain on which the currency is created. Once a currency is activated for an identity name, the same symbol may not be reused for another currency or blockchain, even if the identity is transferred, revoked or recovered, unless there is an endblock specified and the currency or blockchain has deactivated as of that end block.All funds to start the currency and for initial conversion amounts must be available to spend from the identity with the same name and ID as the currency being defined.#### Arguments: ```json {  \"options\" : n,         (int, optional) bits (in hexadecimal):                      OPTION_FRACTIONAL = 1         // (1 decimal )allows reserve conversion using base calculations when set                      OPTION_ID_ISSUANCE = 2         // (2 decimal) clear is permissionless, if set, IDs may only be created by controlling ID                      OPTION_ID_STAKING = 4         // (4 decimal) all I",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `options` argument in the `definecurrency` command?",
            "The `options` argument in the `definecurrency` command is an optional integer that specifies various options for the currency. The available options are:\n\n* `OPTION_FRACTIONAL` (1): Allows reserve conversion using base calculations when set.\n* `OPTION_ID_ISSUANCE` (2): If set, IDs may only be created by controlling ID.\n* `OPTION_ID_STAKING` (4): Enables ID staking.\n\nYou can combine these options using bitwise OR operations.",
            "#### Arguments: ``` 1. \"hexdata\"           (string, required) the hex-encoded, complete, unsolved block data to add. nTime, and nSolution are replaced. 2. \"name\"            (string, required) chain name symbol 3. \"rpchost\"           (string, required) host address for RPC connection 4. \"rpcport\"           (int,  required) port address for RPC connection 5. \"userpass\"          (string, required) credentials for login to RPC ``` #### Result: ``` \"deserialize-invalid\" - block could not be deserialized and was rejected as invalid \"blocksfull\"     - block did not exceed others in estimated ROI, and there was no room for an additional merge mined block ``` Examples: ```bash > verus addmergedblock \"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addmergedblock\", \"params\": [\"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum, \"estimatedroi\" : (verusreward/hashrate)}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `definecurrency '{\"name\": \"coinortokenname\", ..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}' '({\"name\": \"fractionalgatewayname\", ..., })' ({\"name\": \"reserveonename\", ..., }) ...` This defines a blockchain currency, either as an independent blockchain, or as a token on this blockchain. It also spends the identity after which this currency is named and sets a bit indicating that it has a currently active blockchain in its name.To create a currency of any kind, the identity it is named after must be minted on the blockchain on which the currency is created. Once a currency is activated for an identity name, the same symbol may not be reused for another currency or blockchain, even if the identity is transferred, revoked or recovered, unless there is an endblock specified and the currency or blockchain has deactivated as of that end block.All funds to start the currency and for initial conversion amounts must be available to spend from the identity with the same name and ID as the currency being defined.#### Arguments: ```json {  \"options\" : n,         (int, optional) bits (in hexadecimal):                      OPTION_FRACTIONAL = 1         // (1 decimal )allows reserve conversion using base calculations when set                      OPTION_ID_ISSUANCE = 2         // (2 decimal) clear is permissionless, if set, IDs may only be created by controlling ID                      OPTION_ID_STAKING = 4         // (4 decimal) all I",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How do I define a new blockchain currency using the `definecurrency` command in Verus?",
            "To define a new blockchain currency using the `definecurrency` command, you need to provide two JSON objects as arguments. The first object defines the currency properties, and the second object defines the gateway properties. The basic format of the command is:\n```\ndefinecurrency '{\"name\": \"coinortokenname\",..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}' '({\"name\": \"fractionalgatewayname\",..., })'\n```\nYou need to replace the placeholders with the actual values for your currency and gateway.",
            "#### Arguments: ``` 1. \"hexdata\"           (string, required) the hex-encoded, complete, unsolved block data to add. nTime, and nSolution are replaced. 2. \"name\"            (string, required) chain name symbol 3. \"rpchost\"           (string, required) host address for RPC connection 4. \"rpcport\"           (int,  required) port address for RPC connection 5. \"userpass\"          (string, required) credentials for login to RPC ``` #### Result: ``` \"deserialize-invalid\" - block could not be deserialized and was rejected as invalid \"blocksfull\"     - block did not exceed others in estimated ROI, and there was no room for an additional merge mined block ``` Examples: ```bash > verus addmergedblock \"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addmergedblock\", \"params\": [\"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum, \"estimatedroi\" : (verusreward/hashrate)}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `definecurrency '{\"name\": \"coinortokenname\", ..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}' '({\"name\": \"fractionalgatewayname\", ..., })' ({\"name\": \"reserveonename\", ..., }) ...` This defines a blockchain currency, either as an independent blockchain, or as a token on this blockchain. It also spends the identity after which this currency is named and sets a bit indicating that it has a currently active blockchain in its name.To create a currency of any kind, the identity it is named after must be minted on the blockchain on which the currency is created. Once a currency is activated for an identity name, the same symbol may not be reused for another currency or blockchain, even if the identity is transferred, revoked or recovered, unless there is an endblock specified and the currency or blockchain has deactivated as of that end block.All funds to start the currency and for initial conversion amounts must be available to spend from the identity with the same name and ID as the currency being defined.#### Arguments: ```json {  \"options\" : n,         (int, optional) bits (in hexadecimal):                      OPTION_FRACTIONAL = 1         // (1 decimal )allows reserve conversion using base calculations when set                      OPTION_ID_ISSUANCE = 2         // (2 decimal) clear is permissionless, if set, IDs may only be created by controlling ID                      OPTION_ID_STAKING = 4         // (4 decimal) all I",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What are the requirements for creating a new currency in Verus?",
            "To create a new currency in Verus, the identity it is named after must be minted on the blockchain on which the currency is created. Additionally, all funds to start the currency and for initial conversion amounts must be available to spend from the identity with the same name and ID as the currency being defined.",
            "#### Arguments: ``` 1. \"hexdata\"           (string, required) the hex-encoded, complete, unsolved block data to add. nTime, and nSolution are replaced. 2. \"name\"            (string, required) chain name symbol 3. \"rpchost\"           (string, required) host address for RPC connection 4. \"rpcport\"           (int,  required) port address for RPC connection 5. \"userpass\"          (string, required) credentials for login to RPC ``` #### Result: ``` \"deserialize-invalid\" - block could not be deserialized and was rejected as invalid \"blocksfull\"     - block did not exceed others in estimated ROI, and there was no room for an additional merge mined block ``` Examples: ```bash > verus addmergedblock \"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addmergedblock\", \"params\": [\"hexdata\" '{\"currencyid\" : \"hexstring\", \"rpchost\" : \"127.0.0.1\", \"rpcport\" : portnum, \"estimatedroi\" : (verusreward/hashrate)}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `definecurrency '{\"name\": \"coinortokenname\", ..., \"nodes\":[{\"networkaddress\":\"identity\"},..]}' '({\"name\": \"fractionalgatewayname\", ..., })' ({\"name\": \"reserveonename\", ..., }) ...` This defines a blockchain currency, either as an independent blockchain, or as a token on this blockchain. It also spends the identity after which this currency is named and sets a bit indicating that it has a currently active blockchain in its name.To create a currency of any kind, the identity it is named after must be minted on the blockchain on which the currency is created. Once a currency is activated for an identity name, the same symbol may not be reused for another currency or blockchain, even if the identity is transferred, revoked or recovered, unless there is an endblock specified and the currency or blockchain has deactivated as of that end block.All funds to start the currency and for initial conversion amounts must be available to spend from the identity with the same name and ID as the currency being defined.#### Arguments: ```json {  \"options\" : n,         (int, optional) bits (in hexadecimal):                      OPTION_FRACTIONAL = 1         // (1 decimal )allows reserve conversion using base calculations when set                      OPTION_ID_ISSUANCE = 2         // (2 decimal) clear is permissionless, if set, IDs may only be created by controlling ID                      OPTION_ID_STAKING = 4         // (4 decimal) all I",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c47417e0-b31c-4ffb-8dcc-b8a1be4e9553"
]