[
    [
        [
            "What is the purpose of the `timelock` parameter when setting `flags` to 2, and how does it differ from setting `flags` to 0?",
            "When setting `flags` to 2, the `timelock` parameter defines the number of blocks to delay an ID's unlock when the flags are set back to an unlocked state. This is known as a time delay. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nThe main difference between setting `flags` to 0 and 2 is that `flags` 0 sets a specific block height for unlocking, while `flags` 2 sets a delay in blocks before unlocking.",
            "rk and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ## Locking and Unlocking IDs - **Time Lock:**   The timelock parameter defines the unlock height of the identity.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - **Time Delay:**   The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:**   ```   verus -chain=VRSCTEST getcurrencyconverters btc eth   ```   Will return all currencies that have btc/eth markets at or above the liquidity threshold.## Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens to a locked ID when it is revoked, and can a locked ID revoke itself?",
            "When a locked ID is revoked, its locked status is cleared, regardless of any time delay or unlock height. However, a locked ID cannot revoke itself.",
            "rk and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ## Locking and Unlocking IDs - **Time Lock:**   The timelock parameter defines the unlock height of the identity.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - **Time Delay:**   The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:**   ```   verus -chain=VRSCTEST getcurrencyconverters btc eth   ```   Will return all currencies that have btc/eth markets at or above the liquidity threshold.## Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API, and how does it filter currencies based on reserve ratios and liquidity?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. This API filters currencies based on their reserve ratios and liquidity, providing a list of currencies that meet the specified criteria. For example:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis command will return all currencies that have BTC/ETH markets at or above the liquidity threshold.",
            "rk and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ## Locking and Unlocking IDs - **Time Lock:**   The timelock parameter defines the unlock height of the identity.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - **Time Delay:**   The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:**   ```   verus -chain=VRSCTEST getcurrencyconverters btc eth   ```   Will return all currencies that have btc/eth markets at or above the liquidity threshold.## Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the warning about testnet coins and currencies, and what happens to them when VRSCTEST is reset?",
            "The warning states that all testnet coins and currencies have no value and will disappear whenever VRSCTEST is reset. This means that any testnet coins or currencies created on the VRSCTEST network are only temporary and will be lost when the network is reset.",
            "rk and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ## Locking and Unlocking IDs - **Time Lock:**   The timelock parameter defines the unlock height of the identity.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - **Time Delay:**   The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:**   ```   verus -chain=VRSCTEST getcurrencyconverters btc eth   ```   Will return all currencies that have btc/eth markets at or above the liquidity threshold.## Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the concept behind the Verus network's architecture, and how does it enable multiple blockchains to operate and interoperate simultaneously?",
            "The Verus network's architecture is based on a fractal model, which allows for an unlimited number of simultaneously operating, interoperable blockchains. Each blockchain can operate independently, with all features and currencies of the public chain, but without the access controls. While there is some overhead for cross-notarization, the fractal model enables the creation of multiple blockchains that can interoperate seamlessly.",
            "rk and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ## Locking and Unlocking IDs - **Time Lock:**   The timelock parameter defines the unlock height of the identity.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - **Time Delay:**   The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:**   ```   verus -chain=VRSCTEST getcurrencyconverters btc eth   ```   Will return all currencies that have btc/eth markets at or above the liquidity threshold.## Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I lock an ID using the `updateidentity` command, and what is the purpose of the `timelock` parameter?",
            "You can lock an ID using the `updateidentity` command by setting the `flags` to 0 and specifying the `timelock` parameter, which defines the unlock height of the identity. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nThe `timelock` parameter specifies the block height at which the ID will be unlocked.",
            "rk and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. ## Locking and Unlocking IDs - **Time Lock:**   The timelock parameter defines the unlock height of the identity.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - **Time Delay:**   The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state.   ```   verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'   ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ## Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:**   ```   verus -chain=VRSCTEST getcurrencyconverters btc eth   ```   Will return all currencies that have btc/eth markets at or above the liquidity threshold.## Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "a4f00e52-d329-4b7e-9f10-a70d66d511ca"
]