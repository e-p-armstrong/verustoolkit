[
    [
        [
            "How can I use the `getaddednodeinfo` command to get information about a specific node?",
            "You can use the `getaddednodeinfo` command to get information about a specific node by specifying the node's IP address as a parameter. For example: `verus getaddednodeinfo true \"192.168.0.201\"`.",
            "#### Result: ``` [  {   \"addednode\" : \"192.168.0.201\",     (string) The node ip address   \"connected\" : true|false,        (boolean) If connected   \"addresses\" : [    {     \"address\" : \"192.168.0.201:27485\", (string) The Verus server host and port     \"connected\" : \"outbound\"      (string) connection, inbound or outbound    }    ,...   ]  }  ,... ] ``` Examples: ```bash > verus getaddednodeinfo true > verus getaddednodeinfo true \"192.168.0.201\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddednodeinfo\", \"params\": [true, \"192.168.0.201\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getconnectioncount` Returns the number of connections to other nodes.#### Result: n     (numeric) The connection countExamples: ```bash > verus getconnectioncount > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getconnectioncount\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getdeprecationinfo` Returns an object containing current version and deprecation block height. Applicable only on mainnet.#### Result: ```json {  \"version\": xxxxx,           (numeric) the server version  \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string  \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down } ``` Examples: ```bash > verus getdeprecationinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnettotals` Returns information about network traffic, including bytes in, bytes out, and current time.#### Result: ```json {  \"totalbytesrecv\": n,  (numeric) Total bytes received  \"totalbytessent\": n,  (numeric) Total bytes sent  \"timemillis\": t    (numeric) Total cpu time } ``` Examples: ```bash > verus getnettotals > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnettotals\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworkinfo` Returns an object containing various state info regarding P2P networking.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `getaddednodeinfo` command do, and what information does it return about a node?",
            "The `getaddednodeinfo` command returns information about a specific node, or all nodes if no node is specified. It returns an array of objects containing the node's IP address, whether it's connected, and an array of addresses with their connection type (inbound or outbound).",
            "#### Result: ``` [  {   \"addednode\" : \"192.168.0.201\",     (string) The node ip address   \"connected\" : true|false,        (boolean) If connected   \"addresses\" : [    {     \"address\" : \"192.168.0.201:27485\", (string) The Verus server host and port     \"connected\" : \"outbound\"      (string) connection, inbound or outbound    }    ,...   ]  }  ,... ] ``` Examples: ```bash > verus getaddednodeinfo true > verus getaddednodeinfo true \"192.168.0.201\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddednodeinfo\", \"params\": [true, \"192.168.0.201\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getconnectioncount` Returns the number of connections to other nodes.#### Result: n     (numeric) The connection countExamples: ```bash > verus getconnectioncount > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getconnectioncount\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getdeprecationinfo` Returns an object containing current version and deprecation block height. Applicable only on mainnet.#### Result: ```json {  \"version\": xxxxx,           (numeric) the server version  \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string  \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down } ``` Examples: ```bash > verus getdeprecationinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnettotals` Returns information about network traffic, including bytes in, bytes out, and current time.#### Result: ```json {  \"totalbytesrecv\": n,  (numeric) Total bytes received  \"totalbytessent\": n,  (numeric) Total bytes sent  \"timemillis\": t    (numeric) Total cpu time } ``` Examples: ```bash > verus getnettotals > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnettotals\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworkinfo` Returns an object containing various state info regarding P2P networking.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `getnettotals` command do, and what information does it return?",
            "The `getnettotals` command returns information about network traffic, including the total bytes received, total bytes sent, and total CPU time.",
            "#### Result: ``` [  {   \"addednode\" : \"192.168.0.201\",     (string) The node ip address   \"connected\" : true|false,        (boolean) If connected   \"addresses\" : [    {     \"address\" : \"192.168.0.201:27485\", (string) The Verus server host and port     \"connected\" : \"outbound\"      (string) connection, inbound or outbound    }    ,...   ]  }  ,... ] ``` Examples: ```bash > verus getaddednodeinfo true > verus getaddednodeinfo true \"192.168.0.201\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddednodeinfo\", \"params\": [true, \"192.168.0.201\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getconnectioncount` Returns the number of connections to other nodes.#### Result: n     (numeric) The connection countExamples: ```bash > verus getconnectioncount > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getconnectioncount\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getdeprecationinfo` Returns an object containing current version and deprecation block height. Applicable only on mainnet.#### Result: ```json {  \"version\": xxxxx,           (numeric) the server version  \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string  \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down } ``` Examples: ```bash > verus getdeprecationinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnettotals` Returns information about network traffic, including bytes in, bytes out, and current time.#### Result: ```json {  \"totalbytesrecv\": n,  (numeric) Total bytes received  \"totalbytessent\": n,  (numeric) Total bytes sent  \"timemillis\": t    (numeric) Total cpu time } ``` Examples: ```bash > verus getnettotals > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnettotals\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworkinfo` Returns an object containing various state info regarding P2P networking.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `getdeprecationinfo` command do, and what information does it return?",
            "The `getdeprecationinfo` command returns an object containing the current server version, subversion string, and deprecation block height. This command is only applicable on mainnet.",
            "#### Result: ``` [  {   \"addednode\" : \"192.168.0.201\",     (string) The node ip address   \"connected\" : true|false,        (boolean) If connected   \"addresses\" : [    {     \"address\" : \"192.168.0.201:27485\", (string) The Verus server host and port     \"connected\" : \"outbound\"      (string) connection, inbound or outbound    }    ,...   ]  }  ,... ] ``` Examples: ```bash > verus getaddednodeinfo true > verus getaddednodeinfo true \"192.168.0.201\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddednodeinfo\", \"params\": [true, \"192.168.0.201\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getconnectioncount` Returns the number of connections to other nodes.#### Result: n     (numeric) The connection countExamples: ```bash > verus getconnectioncount > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getconnectioncount\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getdeprecationinfo` Returns an object containing current version and deprecation block height. Applicable only on mainnet.#### Result: ```json {  \"version\": xxxxx,           (numeric) the server version  \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string  \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down } ``` Examples: ```bash > verus getdeprecationinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnettotals` Returns information about network traffic, including bytes in, bytes out, and current time.#### Result: ```json {  \"totalbytesrecv\": n,  (numeric) Total bytes received  \"totalbytessent\": n,  (numeric) Total bytes sent  \"timemillis\": t    (numeric) Total cpu time } ``` Examples: ```bash > verus getnettotals > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnettotals\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworkinfo` Returns an object containing various state info regarding P2P networking.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `getconnectioncount` command do, and what information does it return?",
            "The `getconnectioncount` command returns the number of connections to other nodes. It returns a numeric value representing the connection count.",
            "#### Result: ``` [  {   \"addednode\" : \"192.168.0.201\",     (string) The node ip address   \"connected\" : true|false,        (boolean) If connected   \"addresses\" : [    {     \"address\" : \"192.168.0.201:27485\", (string) The Verus server host and port     \"connected\" : \"outbound\"      (string) connection, inbound or outbound    }    ,...   ]  }  ,... ] ``` Examples: ```bash > verus getaddednodeinfo true > verus getaddednodeinfo true \"192.168.0.201\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddednodeinfo\", \"params\": [true, \"192.168.0.201\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getconnectioncount` Returns the number of connections to other nodes.#### Result: n     (numeric) The connection countExamples: ```bash > verus getconnectioncount > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getconnectioncount\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getdeprecationinfo` Returns an object containing current version and deprecation block height. Applicable only on mainnet.#### Result: ```json {  \"version\": xxxxx,           (numeric) the server version  \"subversion\": \"/MagicBean:x.y.z[-v]/\",   (string) the server subversion string  \"deprecationheight\": xxxxx,      (numeric) the block height at which this version will deprecate and shut down } ``` Examples: ```bash > verus getdeprecationinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getdeprecationinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnettotals` Returns information about network traffic, including bytes in, bytes out, and current time.#### Result: ```json {  \"totalbytesrecv\": n,  (numeric) Total bytes received  \"totalbytessent\": n,  (numeric) Total bytes sent  \"timemillis\": t    (numeric) Total cpu time } ``` Examples: ```bash > verus getnettotals > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnettotals\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworkinfo` Returns an object containing various state info regarding P2P networking.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "53f5ad86-795f-43f6-b9af-8f2c194c97bc"
]