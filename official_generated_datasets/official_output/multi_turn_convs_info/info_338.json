[
    [
        [
            "How do I send 0.01 VRSC from a specific account (e.g. \"tabby\") to a specific address using the `verus` command, with a minimum of 6 confirmations?",
            "You can use the following command to send 0.01 VRSC from a specific account (e.g. \"tabby\") to a specific address, with a minimum of 6 confirmations:\n```\nverus sendfrom \"tabby\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 6 \"donation\" \"seans outpost\"\n```\nThis will send 0.01 VRSC from the \"tabby\" account to the address `RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV`, with a minimum of 6 confirmations.",
            "Send 0.01 VRSC from the default account to the address, must have at least 1 confirmation ```bash > verus sendfrom \"\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 ``` Send 0.01 from the tabby account to the given address, funds must have at least 6 confirmations ```bash > verus sendfrom \"tabby\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 6 \"donation\" \"seans outpost\" ``` As a json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendfrom\", \"params\": [\"tabby\", \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", 0.01, 6, \"donation\", \"seans outpost\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `sendmany \"fromaccount\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] )` Send multiple times. Amounts are decimal numbers with at most 8 digits of precision.#### Arguments: 1. \"fromaccount\"     (string, required) MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error. 2. \"amounts\"       (string, required) A json object with addresses and amounts ```json   {    \"address\":amount  (numeric) The VRSC address is the key, the numeric amount in VRSC is the value    ,...   } ``` 3. minconf         (numeric, optional, default=1) Only use the balance confirmed at least this many times. 4. \"comment\"       (string, optional) A comment 5. subtractfeefromamount  (string, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less VRSC than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. ```json   [    \"address\"      (string) Subtract fee from this address    ,...   ] ```#### Result: \"transactionid\"     (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.Examples:",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How do I send 0.01 VRSC from the default account to a specific address using the `verus` command?",
            "You can use the following command to send 0.01 VRSC from the default account to a specific address:\n```\nverus sendfrom \"\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01\n```\nThis will send 0.01 VRSC from the default account to the address `RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV`.",
            "Send 0.01 VRSC from the default account to the address, must have at least 1 confirmation ```bash > verus sendfrom \"\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 ``` Send 0.01 from the tabby account to the given address, funds must have at least 6 confirmations ```bash > verus sendfrom \"tabby\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 6 \"donation\" \"seans outpost\" ``` As a json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendfrom\", \"params\": [\"tabby\", \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", 0.01, 6, \"donation\", \"seans outpost\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `sendmany \"fromaccount\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] )` Send multiple times. Amounts are decimal numbers with at most 8 digits of precision.#### Arguments: 1. \"fromaccount\"     (string, required) MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error. 2. \"amounts\"       (string, required) A json object with addresses and amounts ```json   {    \"address\":amount  (numeric) The VRSC address is the key, the numeric amount in VRSC is the value    ,...   } ``` 3. minconf         (numeric, optional, default=1) Only use the balance confirmed at least this many times. 4. \"comment\"       (string, optional) A comment 5. subtractfeefromamount  (string, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less VRSC than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. ```json   [    \"address\"      (string) Subtract fee from this address    ,...   ] ```#### Result: \"transactionid\"     (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.Examples:",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `minconf` argument in the `sendfrom` and `sendmany` commands?",
            "The `minconf` argument specifies the minimum number of confirmations required for the transaction to be considered valid. This means that the transaction will only be sent if the account has a balance confirmed at least `minconf` times.",
            "Send 0.01 VRSC from the default account to the address, must have at least 1 confirmation ```bash > verus sendfrom \"\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 ``` Send 0.01 from the tabby account to the given address, funds must have at least 6 confirmations ```bash > verus sendfrom \"tabby\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 6 \"donation\" \"seans outpost\" ``` As a json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendfrom\", \"params\": [\"tabby\", \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", 0.01, 6, \"donation\", \"seans outpost\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `sendmany \"fromaccount\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] )` Send multiple times. Amounts are decimal numbers with at most 8 digits of precision.#### Arguments: 1. \"fromaccount\"     (string, required) MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error. 2. \"amounts\"       (string, required) A json object with addresses and amounts ```json   {    \"address\":amount  (numeric) The VRSC address is the key, the numeric amount in VRSC is the value    ,...   } ``` 3. minconf         (numeric, optional, default=1) Only use the balance confirmed at least this many times. 4. \"comment\"       (string, optional) A comment 5. subtractfeefromamount  (string, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less VRSC than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. ```json   [    \"address\"      (string) Subtract fee from this address    ,...   ] ```#### Result: \"transactionid\"     (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.Examples:",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How do I send multiple transactions at once using the `sendmany` command?",
            "The `sendmany` command allows you to send multiple transactions at once. The syntax is as follows:\n```\nverus sendmany \"fromaccount\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] )\n```\nFor example:\n```\nverus sendmany \"\" {\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\":0.01, \"anotheraddress\":0.02} 6 \"donation\" [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"anotheraddress\"]\n```\nThis will send 0.01 VRSC to `RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV` and 0.02 VRSC to `anotheraddress`, with a minimum of 6 confirmations.",
            "Send 0.01 VRSC from the default account to the address, must have at least 1 confirmation ```bash > verus sendfrom \"\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 ``` Send 0.01 from the tabby account to the given address, funds must have at least 6 confirmations ```bash > verus sendfrom \"tabby\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 6 \"donation\" \"seans outpost\" ``` As a json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendfrom\", \"params\": [\"tabby\", \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", 0.01, 6, \"donation\", \"seans outpost\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `sendmany \"fromaccount\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] )` Send multiple times. Amounts are decimal numbers with at most 8 digits of precision.#### Arguments: 1. \"fromaccount\"     (string, required) MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error. 2. \"amounts\"       (string, required) A json object with addresses and amounts ```json   {    \"address\":amount  (numeric) The VRSC address is the key, the numeric amount in VRSC is the value    ,...   } ``` 3. minconf         (numeric, optional, default=1) Only use the balance confirmed at least this many times. 4. \"comment\"       (string, optional) A comment 5. subtractfeefromamount  (string, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less VRSC than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. ```json   [    \"address\"      (string) Subtract fee from this address    ,...   ] ```#### Result: \"transactionid\"     (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.Examples:",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `subtractfeefromamount` argument in the `sendmany` command?",
            "The `subtractfeefromamount` argument is an optional parameter that allows you to specify a list of addresses from which the transaction fee will be deducted. If no addresses are specified, the sender pays the fee. If addresses are specified, the fee will be equally deducted from the amount sent to each of those addresses.",
            "Send 0.01 VRSC from the default account to the address, must have at least 1 confirmation ```bash > verus sendfrom \"\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 ``` Send 0.01 from the tabby account to the given address, funds must have at least 6 confirmations ```bash > verus sendfrom \"tabby\" \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" 0.01 6 \"donation\" \"seans outpost\" ``` As a json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"sendfrom\", \"params\": [\"tabby\", \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", 0.01, 6, \"donation\", \"seans outpost\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `sendmany \"fromaccount\" {\"address\":amount,...} ( minconf \"comment\" [\"address\",...] )` Send multiple times. Amounts are decimal numbers with at most 8 digits of precision.#### Arguments: 1. \"fromaccount\"     (string, required) MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error. 2. \"amounts\"       (string, required) A json object with addresses and amounts ```json   {    \"address\":amount  (numeric) The VRSC address is the key, the numeric amount in VRSC is the value    ,...   } ``` 3. minconf         (numeric, optional, default=1) Only use the balance confirmed at least this many times. 4. \"comment\"       (string, optional) A comment 5. subtractfeefromamount  (string, optional) A json array with addresses. The fee will be equally deducted from the amount of each selected address. Those recipients will receive less VRSC than you enter in their corresponding amount field. If no addresses are specified here, the sender pays the fee. ```json   [    \"address\"      (string) Subtract fee from this address    ,...   ] ```#### Result: \"transactionid\"     (string) The transaction id for the send. Only 1 transaction is created regardless of the number of addresses.Examples:",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "9e613348-17d4-4d12-a778-b6def065bc3a"
]