[
    "How can I add a multisig address from 2 addresses using JSON RPC?",
    "You can add a multisig address from 2 addresses using JSON RPC by sending a request to the Verus node. The format of the request is:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addmultisigaddress\", \"params\": [2, \"[\\\"address1\\\",\\\"address2\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nReplace `address1` and `address2` with the actual addresses you want to use, and `myusername` with your actual username.",
    "Add a multisig address from 2 addresses ```bash > verus addmultisigaddress 2 \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\" ``` As json rpc call ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"addmultisigaddress\", \"params\": [2, \"[\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\",\\\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\\\"]\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `backupwallet \"destination\"` Safely copies `wallet.dat` to destination filename#### Arguments: 1. \"destination\"  (string, required) The destination filename, saved in the directory set by `-exportdir` option.#### Result: \"path\"       (string) The full path of the destination fileExamples: ```bash > verus backupwallet \"backupdata\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"backupwallet\", \"params\": [\"backupdata\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `convertpassphrase \"walletpassphrase\"` Converts Verus Desktop, Agama, Verus Agama, or Verus Mobile passphrase to a private key and WIF (for import with importprivkey).#### Arguments: 1. \"walletpassphrase\"  (string, required) Wallet passphrase#### Result: ``` \"walletpassphrase\": \"walletpassphrase\", (string) Wallet passphrase you entered \"address\": \"verus address\",       (string) Address corresponding to your passphrase \"pubkey\": \"publickeyhex\",        (string) The hex value of the raw public key \"privkey\": \"privatekeyhex\",       (string) The hex value of the raw private key \"wif\": \"wif\"              (string) The private key in WIF format to use with 'importprivkey' ```Examples: ```bash > verus convertpassphrase \"walletpassphrase\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"convertpassphrase\", \"params\": [\"walletpassphrase\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `decryptdata 'json object'` ***`NEW`***Decrypts a vdxf data descriptor, which is typically encrypted to a z-address. If the viewing key is pr$ If either the viewing key or the ssk are correct, the object will be returned with as much decryption $ If no decryption is possible, this function returns an error.",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]