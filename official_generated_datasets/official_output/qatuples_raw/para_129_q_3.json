[
    "What is the purpose of the `listcurrencies` command in Verus?",
    "The `listcurrencies` command is used to retrieve a complete definition for any given chain if it is registered on the blockchain. If the chain requested is NULL, the chain definition of the current chain is returned.",
    "### `getsaplingtree \"n | m,n | m,n,o\"` Returns the entries for a light wallet Sapling tree state.#### Arguments: 1. \"n\" or \"m,n\" or \"m,n,o\"     (int or string, optional) height or inclusive range with optional step at which to get the Sapling tree state. If not specified, the latest currency state and height is returned#### Result: ```json  [    {      \"network\": \"VRSC\",      \"height\": n,      \"hash\": \"hex\"      \"time\": n,      \"tree\": \"hex\"    },  ] ``` Examples: ```bash > verus getsaplingtree name > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getsaplingtree\", \"params\": [name] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `listcurrencies ({query object}) startblock endblock` Returns a complete definition for any given chain if it is registered on the blockchain. If the chain requested is NULL, chain definition of the current chain is returned.#### Arguments: ```json {                      (json, optional) specify valid query conditions  \"launchstate\" :              (\"prelaunch\" | \"launched\" | \"refund\" | \"complete\") (optional) return only currencies in that state  \"systemtype\" :              (\"local\" | \"imported\" | \"gateway\" | \"pbaas\")  \"fromsystem\" :              (\"systemnameeorid\") default is the local chain, but if currency is from another system, specify here  \"converter\": [\"currency1\", (\"currency2\")] (array, optional) default empty, only return fractional currency converters of one or more currencies } ``` #### Result: ```json [  {   \"version\" : n,             (int) version of this chain definition   \"name\" : \"string\",           (string) name or symbol of the chain, same as passed   \"fullyqualifiedname\" : \"string\",    (string) name or symbol of the chain with all parent namespaces, separated by \".\"   \"currencyid\" : \"i-address\",      (string) string that represents the currency ID, same as the ID behind the currency   \"currencyidhex\" : \"hex\",        (string) hex representation of currency ID, getcurrency API supports \"hex:currencyidhex\"   \"parent\" : \"i-address\",        (string) parent blockchain ID   \"systemid\" : \"i-address\",       (string) system on which this currency is considered to run   \"launchsystemid\" : \"i-address\",    (string) system from which this currency was launched   \"notarizationprotocol\" : n       (int) protocol number that determines variations in cross-chain or bridged notarizations   \"proofprotocol\" : n          (int) protocol number that determines variations in",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]