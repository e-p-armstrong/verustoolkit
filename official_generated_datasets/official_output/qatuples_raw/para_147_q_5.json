[
    "What is the purpose of the `nrequired` argument in the `addmultisigaddress` command?",
    "The `nrequired` argument in the `addmultisigaddress` command specifies the number of required signatures out of the n keys or addresses. This determines how many signatures are needed to authorize a transaction sent from the multisignature address.",
    "#### Arguments:  \"vdxfuri\"      (string, required) This message is converted from hex, the data is hashed, then returned ```json {  \"vdxfkey\":\"i-address or vdxfkey\"   (string, optional) VDXF key or i-address to combine via hash  \"uint256\":\"32bytehex\"        (hexstr, optional) 256 bit hash to combine with hash  \"indexnum\":int            (integer, optional) int32_t number to combine with hash } ```#### Result: ```json {                   (object) object with both base58check and hex vdxfid values of string and parents  \"vdxfid\"               (base58check) i-ID of the URI processed with the VDXF & all combined parameters  \"hash160result\"           (hexstring) 20 byte hash in hex of the URL string passed in, processed with the VDXF  \"qualifiedname\":           (object) separate name and parent ID value  {   \"name\": \"namestr\"         (string) leaf name   \"parentid\" | \"namespace\":\"string\" (string) parent ID (or namespace if VDXF key) of name  }  \"bounddata\": {            (object) if additional data is bound to create the value, it is returned here {   \"vdxfkey\":\"i-address or vdxfkey\"  (string) i-address that was combined via hash   \"uint256\":\"32bytehex\"       (hexstr) 256 bit hash combined with hash   \"indexnum\":int           (integer) int32_t combined with hash  } }``` Examples: ```bash Create the signature > verus getvdxfid \"system.currency.export\"Verify the signature > verus getvdxfid \"idname::userdefinedgroup.subgroup.publishedname\"As json rpc > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getvdxfid\", \"params\": [\"idname::userdefinedgroup.subgroup.publishedname\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Wallet### `addmultisigaddress nrequired [\"key\",...] ( \"account\" )` Add a nrequired-to-sign multisignature address to the wallet. Each key is a VRSC address or hex-encoded public key. If 'account' is specified (DEPRECATED), assign address to that account.#### Arguments: 1. nrequired   (numeric, required) The number of required signatures out of the n keys or addresses. 2. \"keysobject\"  (string, required) A json array of VRSC addresses or hex-encoded public keys ```json   [    \"address\" (string) VRSC address or hex-encoded public key    ...,   ] ``` 3. \"account\"   (string, optional) DEPRECATED. If provided, MUST be set to the empty string \"\" to represent the default account. Passing any other string will result in an error.#### Result: \"VRSC_address\" (string) A VRSC address associated with the keys.Examples:",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]