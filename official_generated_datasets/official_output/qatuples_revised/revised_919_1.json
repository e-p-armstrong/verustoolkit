[
    "What new parameters were added in Verus v0.9.6, and what is their purpose?",
    "The new parameters added in Verus v0.9.6 are `-arbitragecurrencies=[\u201cVRSCTEST\u201d,\u201dvETH\u201d]` and `-arbitrageaddress=valid R-address, pubkey, or ID`. These parameters are currently for testing and are preparing for an \"auto-arbitrage\" feature that will be available in the daemon before mainnet PBaaS activation.",
    "v0.9.6 also includes support for new parameters `-arbitragecurrencies=[\u201cVRSCTEST\u201d,\u201dvETH\u201d]` and `-arbitrageaddress=valid R-address, pubkey, or ID`. They\u2019re exciting, but don\u2019t try to use them just yet. They are for testing right now, and are preparing for an \u201cauto-arbitrage\u201d feature already supported in the protocol, but which we hope to have in the daemon before mainnet PBaaS activation that combines decentralized on-chain marketplace offers for currency with liquidity basket import processing to provide miners and stakers the opportunity to commit some amount of funds from their node wallet in common currencies to spot and leverage guaranteed arbitrage opportunities when making a block. These opportunities arise between orders on chain and liquidity basket pricing that if leveraged to earn, actually result in P2P crowdsourcing of liquidity for all baskets across the network, both from the blockchain itself as well as miners and stakers, while benefiting all participants in the following ways: - Miners and stakers can capture guaranteed arbitrage opportunities and arbitrage with any currency that they choose from their wallets. - Blockchain users can set limit orders and have them filled if they are near the market price for a currency, or if the market moves in their direction. - LPs and users of liquidity baskets for conversion get as close to market prices as possible on their conversions, never releasing funds from a basket before an on-chain, MEV-resistant auction takes place for the pricing of those assets.Although this release is likely to be robust enough for a mainnet, we have come this far with quality and will not rush for a few days earlier upgrade. We still plan to review and complete a small number of hardening items before PBaaS 1.0 is ready for its mainnet release.That said, this release fixes all reported issues in all community testing. Community developers, including myself are grateful for all of the testing many have contributed to to date. It has made it possible to get incredible test coverage across all network capabilities, and we appreciate all of your participation and pushing of boundaries. This release is expected to be the final PBaaS protocol that will be released on mainnet. There are no known changes required, and all functions should work as intended.The rest of these release notes are the same as the prior release. We encourage you to drop by the #pbaas-development channel, help the community prepare for mainnet release in the next couple weeks and start building your vision today!",
    "./raw_txt_input/release_notes.md"
]