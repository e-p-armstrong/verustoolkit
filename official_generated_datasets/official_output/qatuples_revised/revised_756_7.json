[
    "What are the arguments that can be passed to the `z_gettreestate` command, and what do they do?",
    "The `z_gettreestate` command takes a single required argument, `hash|height`, which can be either a block hash or a block height. If a negative height is specified, it is interpreted as a relative block height, with -1 being the last known valid block.",
    "#### Arguments: ``` 1. checklevel  (numeric, optional, 0-4, default=3) How thorough the block verification is.         check level 0: read from disk         check level 1: verify block validity         check level 2: verify undo validity         check level 3: check for inconsistencies during memory-only disconnect of tip blocks         check level 4: try reconnecting blocks 2. numblocks  (numeric, optional, default=288, 0=all) The number of blocks to check. ``` #### Result: ``` true|false    (boolean) Verified or not ``` Examples: ```bash > verus verifychain > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifychain\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `verifytxoutproof \"proof\"` Verifies that a proof points to a transaction in a block, returning the transaction it commits to and throwing an RPC error if the block is not in our best chain#### Arguments: ``` 1. \"proof\"  (string, required) The hex-encoded proof generated by gettxoutproof ``` #### Result: ```json [\"txid\"]   (array, strings) The txid(s) which the proof commits to, or empty array if the proof is invalid ```### `z_gettreestate \"hash|height\"` Return information about the given block's tree state.#### Arguments: 1. \"hash|height\"     (string, required) The block hash or height. Height can be negative where -1 is the last known valid block#### Result: ```json {  \"hash\": \"hash\",     (string) hex block hash  \"height\": n,      (numeric) block height  \"sprout\": {   \"skipHash\": \"hash\",  (string) hash of most recent block with more information   \"commitments\": {    \"finalRoot\": \"hex\", (string)    \"finalState\": \"hex\" (string)   }  },  \"sapling\": {   \"skipHash\": \"hash\",  (string) hash of most recent block with more information   \"commitments\": {    \"finalRoot\": \"hex\", (string)    \"finalState\": \"hex\" (string)   }  } } ```Examples: ```bash > verus z_gettreestate \"00000000febc373a1da2bd9f887b105ad79ddc26ac26c2b28652d64e5207c5b5\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettreestate\", \"params\": [\"00000000febc373a1da2bd9f887b105ad79ddc26ac26c2b28652d64e5207c5b5\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ > verus z_gettreestate 12800 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_gettreestate\", \"params\": [12800] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]