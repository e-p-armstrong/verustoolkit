[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHi there! I'm here to help you with any questions you have about Verus. What would you like to know?\n\n**User:**\nI'm interested in creating a currency in Verus. How do I define a currency, and what are some of the key properties that I need to specify?\n\n**AI Assistant:**\nTo define a currency in Verus, you can use the `definecurrency` command. Some of the key properties that you need to specify include:\n\n* `name`: The name of the currency.\n* `options`: An integer that specifies various options for the currency.\n* `currencies`: An array of currencies that the new currency can be converted to.\n* `conversions`: An array of conversion ratios between the new currency and the currencies specified in the `currencies` array.\n* `minpreconversion`: The minimum amount of the currency that needs to be preconverted to launch the currency.\n* `preallocations`: An array of preallocations of the currency to specific IDs.\n\nDo you have any other questions about defining a currency in Verus?\n\n**User:**\nYes, I do. What is the relationship between an ID and a currency in Verus?\n\n**AI Assistant:**\nIn Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.\n\nDo you have any other questions about IDs and currencies in Verus?\n\n**User:**\nNo, that makes sense. But what if I want to convert some VRSCTEST to a newly launched currency? How can I do that?\n\n**AI Assistant:**\nTo convert VRSCTEST to a newly launched currency in Verus, you can use the `sendcurrency` command. You can park your conversion until the token launches, and once it launches, you will either receive the converted amount of the new currency or have your VRSCTEST back. The command to convert VRSCTEST to GOLD, for example, would be:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nDo you have any other questions about converting currencies in Verus?\n\n**User:**\nWhat happens when I define a currency in Verus, and what are the requirements for launching a currency?\n\n**AI Assistant:**\nWhen you define a currency in Verus, you need to fund the identity of the currency with at least 10 VRSCTEST before sending the transaction to initiate a currency launch. The currency launch will start at 50 blocks from when the transaction was made (default), and it must have a minimum amount of VRSCTEST preconverted to the new currency at a specified conversion rate in order to launch. The mining process earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.\n\nDo you have any other questions about launching a currency in Verus?\n\n**User:**\nI think I understand. But how can I create a new token in Verus that can be converted to with either GOLD or VRSCTEST?\n\n**AI Assistant:**\nTo create a new token in Verus that can be converted to with either GOLD or VRSCTEST, you can use the `definecurrency` command. You need to specify the name of the token, the options, the proof protocol, the currencies that the token can be converted to, and the minimum preconversion amounts. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn this example, the proof protocol is set to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins. Do you have any other questions about creating a new token in Verus?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "How do I define a currency in Verus, and what are some of the key properties that I need to specify?",
            "To define a currency in Verus, you can use the `definecurrency` command. Some of the key properties that you need to specify include:\n\n* `name`: The name of the currency.\n* `options`: An integer that specifies various options for the currency.\n* `currencies`: An array of currencies that the new currency can be converted to.\n* `conversions`: An array of conversion ratios between the new currency and the currencies specified in the `currencies` array.\n* `minpreconversion`: The minimum amount of the currency that needs to be preconverted to launch the currency.\n* `preallocations`: An array of preallocations of the currency to specific IDs.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency in Verus?",
            "To convert VRSCTEST to a newly launched currency in Verus, you can use the `sendcurrency` command. You can park your conversion until the token launches, and once it launches, you will either receive the converted amount of the new currency or have your VRSCTEST back. The command to convert VRSCTEST to GOLD, for example, would be:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when I define a currency in Verus, and what are the requirements for launching a currency?",
            "When you define a currency in Verus, you need to fund the identity of the currency with at least 10 VRSCTEST before sending the transaction to initiate a currency launch. The currency launch will start at 50 blocks from when the transaction was made (default), and it must have a minimum amount of VRSCTEST preconverted to the new currency at a specified conversion rate in order to launch. The mining process earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token in Verus that can be converted to with either GOLD or VRSCTEST?",
            "To create a new token in Verus that can be converted to with either GOLD or VRSCTEST, you can use the `definecurrency` command. You need to specify the name of the token, the options, the proof protocol, the currencies that the token can be converted to, and the minimum preconversion amounts. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nIn this example, the proof protocol is set to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":33, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ]
    ]
]