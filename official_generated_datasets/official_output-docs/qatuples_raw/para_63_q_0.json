[
    "How does the Verus protocol process transactions within a block, and what are the implications of this approach?",
    "The Verus protocol processes transactions \"simultaneously\" within a block, as opposed to processing them serially (in order) like other systems that use the VM-model, such as Ethereum. This approach has several important implications:\n\n1. **Elimination of front-running, back-running, and sandwich attacks**: By processing transactions simultaneously, Verus eliminates the possibility of these types of attacks, which can occur when transactions are processed in a specific order.\n2. **Enhanced system-wide liquidity**: Verus's approach reduces slippage by offsetting conversions going to and from any given currency within the same block against each other, resulting in increased liquidity.\n3. **Fair pricing for all users**: Verus ensures that all users converting to and from a currency within the same block receive the same fair price, with no spread.",
    "The Verus protocol solves all transactions ``simultaneously`` within a block (as opposed to serially, in order, as is done on Ethereum and all other systems which use the VM-model). This has important implications for security, fairness, and efficiency: * Elimination of front-running, back-running and sandwich attacks. * Enhancing system-wide liquidity, thus reducing slippage, as conversions going to and from any given currency within the same block are offset against each other. * Providing all users converting to and from a currency within the same block the same fair price with no spread.",
    "./raw_text_input_docs/README_sendcurrency.md"
]