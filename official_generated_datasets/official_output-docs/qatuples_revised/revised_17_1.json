[
    "What information does the Transfer Destination construct encapsulate?",
    "The Transfer Destination construct encapsulates key information necessary for blockchain transactions, including the destination type, destination-specific bytes, gateway information, and associated fees.",
    "# Transfer DestinationThe Transfer Destination construct is a universal component used within the Verus blockchain network, designed to define destinations within blockchain operations comprehensively. This construct is crucial for specifying the end points in a variety of blockchain transactions, supporting a wide array of destination types to accommodate diverse blockchain functionalities and cross-chain interactions.## Core ConceptsTransfer Destination encapsulates key information necessary for blockchain transactions, including the destination type, destination-specific bytes, gateway information, and associated fees. It supports a flexible architecture for defining complex transaction paths, enhancing the blockchain's capability to handle sophisticated and multi-layered operations.### Destination TypesThe Transfer Destination construct supports various destination types, each serving specific purposes:- **DEST_INVALID (0)**: Represents an invalid or unspecified destination type, used as a default or error state. - **DEST_PK (1)**: Indicates a public key destination, typically used for transactions directly to a public key. - **DEST_PKH (2)**: Stands for a public key hash destination, common in many blockchain platforms for sending transactions to a hashed version of a public key (e.g. an r-address). - **DEST_SH (3)**: Represents a script hash destination, used for transactions that should be processed by a specific script, enabling smart contracts or complex spending conditions. - **DEST_ID (4)**: Identifies a [**VerusID**](/verusid/) destination. - **DEST_FULLID (5)**: - **DEST_REGISTERCURRENCY (6)**: - **DEST_QUANTUM (7)**: Used for quantum-resistant addresses. - **DEST_NESTEDTRANSFER (8)**: - **DEST_ETH (9)**: Specifies an Ethereum account as the destination, facilitating cross-chain transactions with Ethereum. - **DEST_ETHNFT (10)**: Indicates a destination for an Ethereum-compatible Non-Fungible Token (NFT), enabling the mapping of NFTs across different blockchain systems. - **DEST_RAW (11)**: Represents a raw data destination, allowing for arbitrary data to be included as a destination, offering maximum flexibility.### FlagsTransfer Destination also supports the use of flags to indicate additional attributes of a destination:",
    "./raw_text_input_docs/transfer-destination.md"
]