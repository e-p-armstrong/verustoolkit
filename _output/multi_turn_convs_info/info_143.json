[
    [
        [
            "What is the architecture of the Verus network, and how does it enable unlimited simultaneous operation of interoperable blockchains?",
            "The Verus network architecture is fractal, allowing for an unlimited number of simultaneously operating, interoperable blockchains. This is possible because each blockchain on the network can operate independently, with its own features and currencies, while still being able to interoperate with other blockchains on the network.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I lock an ID on the Verus network, and what are the different types of locks available?",
            "You can lock an ID on the Verus network using the `updateidentity` command. There are two types of locks available: Time Lock and Time Delay. \n\nA Time Lock sets the unlock height of the identity, which means the ID will be locked until the specified block height is reached. \n\nA Time Delay sets a delay in blocks before the ID can be unlocked again after its flags are set back to an unlocked state.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when an ID is revoked, and how does it affect the locked status of the ID?",
            "When an ID is revoked, its locked status is cleared, regardless of any time delay or unlock height that may have been set. However, a locked identity cannot revoke itself.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API, and how can I use it to retrieve information about currencies on the Verus network?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use it to retrieve information about currencies on the Verus network by specifying the currencies you're interested in, for example: `verus -chain=VRSCTEST getcurrencyconverters btc eth`.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I send and convert funds on the Verus network using the `sendcurrency` API?",
            "You can use the `sendcurrency` API to send and convert funds on the Verus network. The API allows you to specify the sender, recipient, amount, and currency, as well as any conversion options. For example, you can send VRSCTEST from a single address to a single recipient, or convert VRSCTEST to a fractional basket currency.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the concept of fractal blockchains in Verus, and how does it enable interoperability between multiple blockchains?",
            "In Verus, the concept of fractal blockchains refers to the ability of the network to support an unlimited number of simultaneously operating, interoperable blockchains. This is achieved through a fractal model, where each blockchain can have its own features and currencies, while still being able to interact with other blockchains on the network. This enables seamless interoperability between multiple blockchains, allowing for a high degree of flexibility and scalability.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I lock and unlock an ID on the Verus network, and what are the implications of doing so?",
            "To lock an ID on the Verus network, you can use the `updateidentity` API with the `timelock` parameter. This sets an unlock height or delay for the ID. A locked ID cannot revoke itself, and revoking an ID will clear its locked status, regardless of time delay or unlock height. To unlock an ID, you can update the identity with the `flags` set back to an unlocked state, and optionally specify a time delay for the unlock.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API in Verus, and how does it work?",
            "The `getcurrencyconverters` API in Verus retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. This API is useful for querying conversion possibilities between different currencies on the network. For example, you can use it to find all currencies that have a BTC/ETH market at or above the liquidity threshold.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I use the `sendcurrency` API to send and convert funds on the Verus network?",
            "The `sendcurrency` API in Verus can be used to send and convert funds in various ways. You can use it to send funds from a single address to a single recipient, from all private wallet funds to multiple recipients, or to convert funds from one currency to another using IDs as a funding source. You can also use it to convert funds through a fractional currency, or to preconvert to a new currency before it is active.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the concept of a fractal model in the context of the Verus blockchain network?",
            "The fractal model in the Verus blockchain network refers to the ability to have an unlimited number of simultaneously operating, interoperable blockchains. This allows for a scalable and flexible architecture, where multiple blockchains can coexist and interact with each other, without any limitations.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I lock an ID using the `updateidentity` command, and what is the purpose of the `timelock` parameter?",
            "You can lock an ID using the `updateidentity` command by setting the `flags` parameter to 0 and specifying the `timelock` parameter, which defines the unlock height of the identity. For example:\n```\nverus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}'\n```\nThe `timelock` parameter can also be used to define a time delay for unlocking an ID, by setting the `flags` parameter to 2. This allows for a delay in unlocking the ID after the flags are set back to an unlocked state.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API, and how can I use it to retrieve information about currencies with a certain liquidity threshold?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use it to retrieve information about currencies with a certain liquidity threshold by specifying the currencies you're interested in, for example:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return all currencies that have BTC/ETH markets at or above the liquidity threshold.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I use the `sendcurrency` API to send and convert funds, and what are some examples of its usage?",
            "The `sendcurrency` API can be used to send and convert funds by specifying the source and destination addresses, currencies, and amounts. Some examples of its usage include:\n\n* Sending VRSCTEST from a single address to a single recipient:\n```\nverus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n```\n* Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses:\n```\nverus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]'\n```\n* Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:\n```\nverus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n```\n* Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]'\n```",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the concept of the Verus network, and how does it enable multiple blockchains to operate and interoperate?",
            "The Verus network is a fractal model that allows an unlimited number of simultaneously operating, interoperable blockchains. This is achieved by allowing each blockchain to operate independently, with its own features and currencies, while still being connected to the Verus network. This connection enables cross-notarization, which allows the blockchains to interoperate with each other.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the different types of locks that can be applied to an ID on the Verus network?",
            "There are two types of locks that can be applied to an ID on the Verus network: Time Lock and Time Delay. A Time Lock sets the unlock height of the identity, while a Time Delay sets a delay in blocks before the ID can be unlocked after its flags are set back to an unlocked state.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens to a locked identity when it is revoked?",
            "When a locked identity is revoked, its locked status is cleared, regardless of any time delay or unlock height that was set.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "Can a locked identity revoke itself?",
            "No, a locked identity cannot revoke itself.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API, and how does it work?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. It can be used to find currencies that have specific market pairs, such as BTC/ETH.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the `sendcurrency` API used for, and what are some examples of its usage?",
            "The `sendcurrency` API is used to send and convert funds on the Verus network. It can be used to send funds from one address to another, convert funds from one currency to another, and even preconvert funds to a new currency before it is active. Examples of its usage include sending VRSCTEST from one address to another, sending VRSCTEST from all private wallet funds to multiple recipients, converting VRSCTEST to a fractional basket currency, and converting VRSCTEST to another reserve currency through a fractional currency.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The timelock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 0, \"timelock\": <Unlock block height>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - **Time Delay:**  The timelock parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST updateidentity '{\"name\": \"ID@\", \"flags\": 2, \"timelock\": <Unlock block delay>, \"minimumsignatures\": 1, \"primaryaddresses\": [\"t-address\"]}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:**",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "b5352b3d-395f-4a3a-a8e0-723ff024ccd6"
]