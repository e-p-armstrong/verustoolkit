[
    [
        [
            "What is the purpose of this guide, and which Linux distributions is it intended for?",
            "This guide is intended to help users compile Monkins' Verus enhanced CCMiner for various hardware, and it is specifically aimed at Debian-based Linux distributions. If you are using a different type of distribution, such as RPM-based (like CentOS), you will need to install the dependencies using a procedure that fits your specific distribution.",
            "# Compile Monkins Verus enhanced CCMiner for various hardware Read it completely before using. ## Important General Information This guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution (eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your specific distribution. There are 3 active branches in ccminer github repo:  `ARM`       (for 64bit ARM chips with AES intrinsic)  `Verus2.2`    (standard x86-64 pc's)  `Verus2.2gpu`   (GPUs) Note: Replace `ARM` in the `git clone` line below with the branchname above you want to use. ## Procedure: Install dependencies (specific for Debian-based distributions): ```bash sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git ``` For GPU-miner compilation additional sources are required (Not needed for CPU or ARM): ```bash wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run sudo sh cuda_10.2.89_440.33.01_linux.run ``` Download the source and compile: ```bash git clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git cd ccminer chmod +x build.sh chmod +x configure.sh chmod +x autogen.sh ./build.sh ``` And finally starting the miner (Change pool, address & workername to your own liking): ```bash ./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x ``` Info from @Chris - Monkins1010 LOUD Mining. Note: last revision date 2021-04-20.",
            "./raw_txt_input/faq-lin06_compile_ccminer.md"
        ],
        [
            "What are the three active branches in the CCMiner GitHub repository, and what type of hardware is each intended for?",
            "The three active branches in the CCMiner GitHub repository are:\n\n1. `ARM`: intended for 64-bit ARM chips with AES intrinsic.\n2. `Verus2.2`: intended for standard x86-64 PCs.\n3. `Verus2.2gpu`: intended for GPUs.",
            "# Compile Monkins Verus enhanced CCMiner for various hardware Read it completely before using. ## Important General Information This guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution (eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your specific distribution. There are 3 active branches in ccminer github repo:  `ARM`       (for 64bit ARM chips with AES intrinsic)  `Verus2.2`    (standard x86-64 pc's)  `Verus2.2gpu`   (GPUs) Note: Replace `ARM` in the `git clone` line below with the branchname above you want to use. ## Procedure: Install dependencies (specific for Debian-based distributions): ```bash sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git ``` For GPU-miner compilation additional sources are required (Not needed for CPU or ARM): ```bash wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run sudo sh cuda_10.2.89_440.33.01_linux.run ``` Download the source and compile: ```bash git clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git cd ccminer chmod +x build.sh chmod +x configure.sh chmod +x autogen.sh ./build.sh ``` And finally starting the miner (Change pool, address & workername to your own liking): ```bash ./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x ``` Info from @Chris - Monkins1010 LOUD Mining. Note: last revision date 2021-04-20.",
            "./raw_txt_input/faq-lin06_compile_ccminer.md"
        ],
        [
            "What dependencies need to be installed before compiling CCMiner, and how can they be installed on a Debian-based system?",
            "The dependencies that need to be installed before compiling CCMiner are:\n\n* `libcurl4-openssl-dev`\n* `libssl-dev`\n* `libjansson-dev`\n* `automake`\n* `autotools-dev`\n* `build-essential`\n* `git`\n\nThese dependencies can be installed on a Debian-based system using the following command:\n```\nsudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git\n```",
            "# Compile Monkins Verus enhanced CCMiner for various hardware Read it completely before using. ## Important General Information This guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution (eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your specific distribution. There are 3 active branches in ccminer github repo:  `ARM`       (for 64bit ARM chips with AES intrinsic)  `Verus2.2`    (standard x86-64 pc's)  `Verus2.2gpu`   (GPUs) Note: Replace `ARM` in the `git clone` line below with the branchname above you want to use. ## Procedure: Install dependencies (specific for Debian-based distributions): ```bash sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git ``` For GPU-miner compilation additional sources are required (Not needed for CPU or ARM): ```bash wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run sudo sh cuda_10.2.89_440.33.01_linux.run ``` Download the source and compile: ```bash git clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git cd ccminer chmod +x build.sh chmod +x configure.sh chmod +x autogen.sh ./build.sh ``` And finally starting the miner (Change pool, address & workername to your own liking): ```bash ./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x ``` Info from @Chris - Monkins1010 LOUD Mining. Note: last revision date 2021-04-20.",
            "./raw_txt_input/faq-lin06_compile_ccminer.md"
        ],
        [
            "What additional sources are required for compiling the GPU miner, and how can they be obtained?",
            "For compiling the GPU miner, additional sources are required, specifically the CUDA toolkit from NVIDIA. This can be obtained by downloading and running the CUDA installer:\n```\nwget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run\nsudo sh cuda_10.2.89_440.33.01_linux.run\n```",
            "# Compile Monkins Verus enhanced CCMiner for various hardware Read it completely before using. ## Important General Information This guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution (eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your specific distribution. There are 3 active branches in ccminer github repo:  `ARM`       (for 64bit ARM chips with AES intrinsic)  `Verus2.2`    (standard x86-64 pc's)  `Verus2.2gpu`   (GPUs) Note: Replace `ARM` in the `git clone` line below with the branchname above you want to use. ## Procedure: Install dependencies (specific for Debian-based distributions): ```bash sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git ``` For GPU-miner compilation additional sources are required (Not needed for CPU or ARM): ```bash wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run sudo sh cuda_10.2.89_440.33.01_linux.run ``` Download the source and compile: ```bash git clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git cd ccminer chmod +x build.sh chmod +x configure.sh chmod +x autogen.sh ./build.sh ``` And finally starting the miner (Change pool, address & workername to your own liking): ```bash ./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x ``` Info from @Chris - Monkins1010 LOUD Mining. Note: last revision date 2021-04-20.",
            "./raw_txt_input/faq-lin06_compile_ccminer.md"
        ],
        [
            "How do I download and compile the CCMiner source code, and what commands need to be run?",
            "To download and compile the CCMiner source code, you need to:\n\n1. Clone the CCMiner repository using `git clone` and specify the branch you want to use (e.g., `ARM`, `Verus2.2`, or `Verus2.2gpu`).\n2. Change into the cloned directory.\n3. Make the `build.sh`, `configure.sh`, and `autogen.sh` scripts executable using `chmod +x`.\n4. Run the `./build.sh` command to compile the source code.",
            "# Compile Monkins Verus enhanced CCMiner for various hardware Read it completely before using. ## Important General Information This guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution (eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your specific distribution. There are 3 active branches in ccminer github repo:  `ARM`       (for 64bit ARM chips with AES intrinsic)  `Verus2.2`    (standard x86-64 pc's)  `Verus2.2gpu`   (GPUs) Note: Replace `ARM` in the `git clone` line below with the branchname above you want to use. ## Procedure: Install dependencies (specific for Debian-based distributions): ```bash sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git ``` For GPU-miner compilation additional sources are required (Not needed for CPU or ARM): ```bash wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run sudo sh cuda_10.2.89_440.33.01_linux.run ``` Download the source and compile: ```bash git clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git cd ccminer chmod +x build.sh chmod +x configure.sh chmod +x autogen.sh ./build.sh ``` And finally starting the miner (Change pool, address & workername to your own liking): ```bash ./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x ``` Info from @Chris - Monkins1010 LOUD Mining. Note: last revision date 2021-04-20.",
            "./raw_txt_input/faq-lin06_compile_ccminer.md"
        ],
        [
            "How do I start the miner, and what parameters need to be specified?",
            "To start the miner, you need to run the following command:\n```\n./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x\n```\nYou need to specify the algorithm (`-a verus`), the pool URL (`-o stratum+tcp://pool.verus.io:9999`), your wallet address (`-u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator`), and the password (`-p x`).",
            "# Compile Monkins Verus enhanced CCMiner for various hardware Read it completely before using. ## Important General Information This guide is aimed towards Debian based Linux distributions. If you are using a different kind of distribution (eg RPM-based, like CentOS) you will need to install the dependancies using a procedure that fits your specific distribution. There are 3 active branches in ccminer github repo:  `ARM`       (for 64bit ARM chips with AES intrinsic)  `Verus2.2`    (standard x86-64 pc's)  `Verus2.2gpu`   (GPUs) Note: Replace `ARM` in the `git clone` line below with the branchname above you want to use. ## Procedure: Install dependencies (specific for Debian-based distributions): ```bash sudo apt-get install libcurl4-openssl-dev libssl-dev libjansson-dev automake autotools-dev build-essential git ``` For GPU-miner compilation additional sources are required (Not needed for CPU or ARM): ```bash wget http://developer.download.nvidia.com/compute/cuda/10.2/Prod/local_installers/cuda_10.2.89_440.33.01_linux.run sudo sh cuda_10.2.89_440.33.01_linux.run ``` Download the source and compile: ```bash git clone --single-branch -b ARM https://github.com/monkins1010/ccminer.git cd ccminer chmod +x build.sh chmod +x configure.sh chmod +x autogen.sh ./build.sh ``` And finally starting the miner (Change pool, address & workername to your own liking): ```bash ./ccminer -a verus -o stratum+tcp://pool.verus.io:9999 -u RVjvbZuqSGLGDm1B9BFkbHWySPKEx4tfjQ.donator -p x ``` Info from @Chris - Monkins1010 LOUD Mining. Note: last revision date 2021-04-20.",
            "./raw_txt_input/faq-lin06_compile_ccminer.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c411c683-5ed4-482b-bc8b-7b71702a33e1"
]