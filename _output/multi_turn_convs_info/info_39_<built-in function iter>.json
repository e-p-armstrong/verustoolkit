[
    [
        [
            "How can I create a currency with a specific name on Verus?",
            "To create a currency with a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I define a currency, for example \"gold\", on Verus?",
            "You can define a currency, for example \"gold\", using the `definecurrency` command, like this:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' \n```\nThis command defines a currency named \"gold\" with specific options, currencies, conversions, and preallocations.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the requirements for launching a currency on Verus?",
            "To launch a currency on Verus, the identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from the `definecurrency` command to initiate a currency launch. The launch will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency using the command line and Verus?",
            "To define a currency, you can use the `definecurrency` command with Verus. The command should specify the name of the currency, options, currencies, conversions, minpreconversion, and preallocations, if any. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' \n```",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when a currency is launched using Verus?",
            "When a currency is launched using Verus, the identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from the `definecurrency` command to initiate a currency launch that will start at 50 blocks from when it was made (default). The launch process also requires a certain amount of preconversion, which earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I launch a currency, such as \"gold\", that is widely trusted to a specific, auditable store of gold?",
            "To launch a currency like \"gold\", you need to define the currency using the `definecurrency` command, specifying the name, options, currencies, conversions, and other properties of the currency. You also need to fund the identity of the currency with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch. The launch process will start at 50 blocks from when it was made, and will require 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What does the `OPTION_GATEWAY_CONVERTER` option do in a PBaaS chain definition?",
            "The `OPTION_GATEWAY_CONVERTER` option, set to 512, means that for a specific PBaaS gateway, this is the default converter and will publish prices.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `OPTION_GATEWAY_NAMECONTROLLER` option in a PBaaS chain definition?",
            "The `OPTION_GATEWAY_NAMECONTROLLER` option, set to 1024, means that when not set on a gateway, top-level ID and currency registration happen on launch chain.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to GOLD on Verus?",
            "You can convert VRSCTEST to GOLD on Verus by issuing the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' \n```\nThis command will effectively park your conversion until the token launches, at which point, you will either find 0.975 GOLD in your wallet, or you will have your VRSCTEST back.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I create a currency of a specific name using Verus?",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What does the OPTION_GATEWAY_CONVERTER option do in a PBaaS chain definition?",
            "The OPTION_GATEWAY_CONVERTER option in a PBaaS chain definition means that for a specific PBaaS gateway, this is the default converter and will publish prices.",
            "   // this is a PBaaS chain definition OPTION_GATEWAY_CONVERTER = 512     // this means that for a specific PBaaS gateway, this is the default converter and will publish prices OPTION_GATEWAY_NAMECONTROLLER = 1024  // when not set on a gateway, top level ID and currency registration happen on launch chain OPTION_NFT_TOKEN = 2048        // single satoshi NFT token, tokenizes control over the root ID ```To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows:  ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":32,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command:  ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "65550866-e25c-4281-be87-963ecab7a9fc"
]