[
    [
        [
            "What is the purpose of the `getcurrencyconverters` API in Verus, and how can I use it?",
            "The `getcurrencyconverters` API in Verus retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use it to find currencies that have a specific market, for example:\n```\nverus -chain=VRSCTEST getcurrencyconverters btc eth\n```\nThis will return all currencies that have btc/eth markets at or above the liquidity threshold.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I use the `sendcurrency` API in Verus to send and convert funds?",
            "The `sendcurrency` API in Verus can be used to send and convert funds in various ways. For example, you can send VRSCTEST from a single address to a single recipient:\n```\nverus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]'\n```\nOr, you can send VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses:\n```\nverus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]'\n```\nYou can also convert VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:\n```\nverus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]'\n```\nOr, convert VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]'\n```\nAdditionally, you can preconvert to a new currency, NEWCOIN, before it is active:\n```\nverus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund\":true}]'\n```",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the concept of a fractal model in the Verus network, and how does it enable the operation of multiple blockchains?",
            "The fractal model in the Verus network refers to the ability of the network to support an unlimited number of simultaneously operating, interoperable blockchains. This means that there is no limit to the number of blockchains that can continuously operate and interoperate on the Verus network, with all features and currencies of the public chain but none of the access. While there is some overhead for cross notarization, the fractal model enables this unlimited scalability.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I lock an ID on the Verus network, and what are the implications of doing so?",
            "You can lock an ID on the Verus network using the `setidentitytimelock` command, specifying the unlock height of the identity or the unlock delay. For example:\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}'\n```\nor\n```\nverus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}'`\n```\nA locked identity cannot revoke itself, and revoking an identity will clear its locked status, regardless of time delay or unlock height.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c899cae5-8ef3-4e00-a47a-a99d8b8b2f47"
]