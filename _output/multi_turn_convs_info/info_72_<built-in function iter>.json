[
    [
        [
            "What do the \"weights\", \"conversions\", and \"minpreconversion\" fields represent in a cross-chain or bridged proof definition?",
            "The \"weights\" field represents the relative currency weights in a liquidity basket. The \"conversions\" field represents the pre-launch conversion rates for non-fractional currencies. The \"minpreconversion\" field represents the minimum amounts required in pre-conversions for a currency to launch.",
            " cross-chain or bridged proofs   \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain   \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over   \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)   \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies   \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch   \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket   \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies   \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance   \"prelaunchcarveout\" : n,        (number) pre-launch percentage of proceeds for fractional currency sent to launching ID   \"preallocations\" : \"[{\"i-address\":n}, ...]\", (objarray) VerusIDs and amounts for pre-allocation at launch   \"initialcontributions\" : \"[n, ...]\",  (numberarray) amounts of pre-conversions reserved for launching ID   \"idregistrationfees\" : n,       (number) base cost of IDs for this currency namespace in this currency   \"idreferrallevels\" : n,        (int) levels of ID referrals (only for native PBaaS chains and IDs)   \"idimportfees\" : n,          (number) fees required to import an ID to this system (only for native PBaaS chains and IDs)   \"eras\" : \"[obj, ...]\",         (objarray) different chain phases of rewards and convertibility   {    \"reward\" : \"[n, ...]\",        (int) reward start for each era in native coin    \"decay\" : \"[n, ...]\",        (int) exponential or linear decay of rewards during each era    \"halving\" : \"[n, ...]\",       (int) blocks between halvings during each era    \"eraend\" : \"[n, ...]\",        (int) block marking the end of each era    \"eraoptions\" : \"[n, ...]\",      (int) options (reserved)   }   \"nodes\"   : \"[obj, ..]\",      (objectarray, optional) up to 8 nodes that can be used to connect to the blockchain   [{     \"nodeidentity\" : \"txid\",     (string, optional) internet, TOR, or other supported address for node     \"paymentaddress\" : n,       (int,   optional) rewards payment address    }, .. ]   \"lastconfirmedcurrencystate\" : {   ",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the \"currencies\" and \"currencynames\" fields in a cross-chain or bridged proof definition?",
            "The \"currencies\" field is an array of currencies that can be converted to this currency at launch or make up a liquidity basket. The \"currencynames\" field is an object that maps i-addresses to fully qualified names of all sub-currencies.",
            " cross-chain or bridged proofs   \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain   \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over   \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)   \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies   \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch   \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket   \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies   \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance   \"prelaunchcarveout\" : n,        (number) pre-launch percentage of proceeds for fractional currency sent to launching ID   \"preallocations\" : \"[{\"i-address\":n}, ...]\", (objarray) VerusIDs and amounts for pre-allocation at launch   \"initialcontributions\" : \"[n, ...]\",  (numberarray) amounts of pre-conversions reserved for launching ID   \"idregistrationfees\" : n,       (number) base cost of IDs for this currency namespace in this currency   \"idreferrallevels\" : n,        (int) levels of ID referrals (only for native PBaaS chains and IDs)   \"idimportfees\" : n,          (number) fees required to import an ID to this system (only for native PBaaS chains and IDs)   \"eras\" : \"[obj, ...]\",         (objarray) different chain phases of rewards and convertibility   {    \"reward\" : \"[n, ...]\",        (int) reward start for each era in native coin    \"decay\" : \"[n, ...]\",        (int) exponential or linear decay of rewards during each era    \"halving\" : \"[n, ...]\",       (int) blocks between halvings during each era    \"eraend\" : \"[n, ...]\",        (int) block marking the end of each era    \"eraoptions\" : \"[n, ...]\",      (int) options (reserved)   }   \"nodes\"   : \"[obj, ..]\",      (objectarray, optional) up to 8 nodes that can be used to connect to the blockchain   [{     \"nodeidentity\" : \"txid\",     (string, optional) internet, TOR, or other supported address for node     \"paymentaddress\" : n,       (int,   optional) rewards payment address    }, .. ]   \"lastconfirmedcurrencystate\" : {   ",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What do the \"initialsupply\", \"prelaunchcarveout\", and \"preallocations\" fields represent in a cross-chain or bridged proof definition?",
            "The \"initialsupply\" field represents the initial currency supply for fractional currencies before preallocation or issuance. The \"prelaunchcarveout\" field represents the pre-launch percentage of proceeds for fractional currency sent to the launching ID. The \"preallocations\" field is an array of objects that specify the VerusIDs and amounts for pre-allocation at launch.",
            " cross-chain or bridged proofs   \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain   \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over   \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)   \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies   \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch   \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket   \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies   \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance   \"prelaunchcarveout\" : n,        (number) pre-launch percentage of proceeds for fractional currency sent to launching ID   \"preallocations\" : \"[{\"i-address\":n}, ...]\", (objarray) VerusIDs and amounts for pre-allocation at launch   \"initialcontributions\" : \"[n, ...]\",  (numberarray) amounts of pre-conversions reserved for launching ID   \"idregistrationfees\" : n,       (number) base cost of IDs for this currency namespace in this currency   \"idreferrallevels\" : n,        (int) levels of ID referrals (only for native PBaaS chains and IDs)   \"idimportfees\" : n,          (number) fees required to import an ID to this system (only for native PBaaS chains and IDs)   \"eras\" : \"[obj, ...]\",         (objarray) different chain phases of rewards and convertibility   {    \"reward\" : \"[n, ...]\",        (int) reward start for each era in native coin    \"decay\" : \"[n, ...]\",        (int) exponential or linear decay of rewards during each era    \"halving\" : \"[n, ...]\",       (int) blocks between halvings during each era    \"eraend\" : \"[n, ...]\",        (int) block marking the end of each era    \"eraoptions\" : \"[n, ...]\",      (int) options (reserved)   }   \"nodes\"   : \"[obj, ..]\",      (objectarray, optional) up to 8 nodes that can be used to connect to the blockchain   [{     \"nodeidentity\" : \"txid\",     (string, optional) internet, TOR, or other supported address for node     \"paymentaddress\" : n,       (int,   optional) rewards payment address    }, .. ]   \"lastconfirmedcurrencystate\" : {   ",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What does the \"eras\" field represent in a cross-chain or bridged proof definition?",
            "The \"eras\" field is an array of objects that define different chain phases of rewards and convertibility. Each era object can contain fields such as \"reward\", \"decay\", \"halving\", \"eraend\", and \"eraoptions\" that specify the reward start, decay, halving, era end, and options for each era.",
            " cross-chain or bridged proofs   \"startblock\" : n,           (int) block # on this chain, which must be notarized into block one of the chain   \"endblock\" : n,            (int) block # after which, this chain's useful life is considered to be over   \"weights\" : \"[n, ...]\",        (numberarray) relative currency weights (only returned for a liquidity basket)   \"conversions\" : \"[n, ...]\",      (numberarray) pre-launch conversion rates for non-fractional currencies   \"minpreconversion\" : \"[n, ...]\",    (numberarray) minimum amounts required in pre-conversions for currency to launch   \"currencies\" : \"[\"i-address\", ...]\",  (stringarray) currencies that can be converted to this currency at launch or makeup a liquidity basket   \"currencynames\" : \"{\"i-address\":\"fullname\",...}\", (obj) i-addresses mapped to fully qualified names of all sub-currencies   \"initialsupply\" : n,          (number) initial currency supply for fractional currencies before preallocation or issuance   \"prelaunchcarveout\" : n,        (number) pre-launch percentage of proceeds for fractional currency sent to launching ID   \"preallocations\" : \"[{\"i-address\":n}, ...]\", (objarray) VerusIDs and amounts for pre-allocation at launch   \"initialcontributions\" : \"[n, ...]\",  (numberarray) amounts of pre-conversions reserved for launching ID   \"idregistrationfees\" : n,       (number) base cost of IDs for this currency namespace in this currency   \"idreferrallevels\" : n,        (int) levels of ID referrals (only for native PBaaS chains and IDs)   \"idimportfees\" : n,          (number) fees required to import an ID to this system (only for native PBaaS chains and IDs)   \"eras\" : \"[obj, ...]\",         (objarray) different chain phases of rewards and convertibility   {    \"reward\" : \"[n, ...]\",        (int) reward start for each era in native coin    \"decay\" : \"[n, ...]\",        (int) exponential or linear decay of rewards during each era    \"halving\" : \"[n, ...]\",       (int) blocks between halvings during each era    \"eraend\" : \"[n, ...]\",        (int) block marking the end of each era    \"eraoptions\" : \"[n, ...]\",      (int) options (reserved)   }   \"nodes\"   : \"[obj, ..]\",      (objectarray, optional) up to 8 nodes that can be used to connect to the blockchain   [{     \"nodeidentity\" : \"txid\",     (string, optional) internet, TOR, or other supported address for node     \"paymentaddress\" : n,       (int,   optional) rewards payment address    }, .. ]   \"lastconfirmedcurrencystate\" : {   ",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "e118a30c-d318-4505-a637-9f3a7ece9b53"
]