[
    [
        [
            "How can I use the `getidentitycontent` command to retrieve content for a specific identity, starting from a certain block height?",
            "You can use the `getidentitycontent` command with the \"heightstart\" argument to specify the block height from which to start retrieving content. For example:\n```\nverus getidentitycontent \"name@\" 100\n```\nThis command would retrieve content for the identity \"name@\" starting from block height 100.",
            "#### Arguments:   \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity   \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive   \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,                       inclusive. -1 means also return values from the mempool.   \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID   \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof   \"vdxfkey\"      (vdxf key, optional) default=null, more selective search for specific content in ID#### Result:#### Examples: ```bash > verus getidentitycontent \"name@\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitycontent\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getidentityhistory \"name@ || iid\" (heightstart) (heightend) (txproofs) (txproofheight)`#### Arguments:   \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity   \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive   \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,             inclusive. -1 means also return values from the mempool.   \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID   \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof#### Result:#### Examples: ```bash > verus getidentityhistory \"name@\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentityhistory\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getidentitytrust '[\"id\",...]'` #### Arguments: ```json \"[\"id\",...]\"                    (strarray, optional) if specified, only returns rating values for specified IDs, otherwise all ``` #### Result: ```json {  \"setratings\":{\"id\":JSONRatingObject,...},    (jsonobj) an ID/ratings key/value object  \"identitytrustmode\":<n>              (int) 0 = no restriction on sync, 1 = only sync to IDs rated approved, 2 = sync to all IDs but those on block list } ``` ####Examples: ```bash > verus getidentitytrust '[\"id\",...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitytrust\", \"params\": ['[\"id\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `getidentityhistory` command in Verus?",
            "The `getidentityhistory` command is used to retrieve the history of content associated with a specific identity on the Verus network. It takes similar arguments to `getidentitycontent`, including the identity name or i-address, and optional parameters to filter the results by height range and proof of ID.",
            "#### Arguments:   \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity   \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive   \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,                       inclusive. -1 means also return values from the mempool.   \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID   \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof   \"vdxfkey\"      (vdxf key, optional) default=null, more selective search for specific content in ID#### Result:#### Examples: ```bash > verus getidentitycontent \"name@\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitycontent\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getidentityhistory \"name@ || iid\" (heightstart) (heightend) (txproofs) (txproofheight)`#### Arguments:   \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity   \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive   \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,             inclusive. -1 means also return values from the mempool.   \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID   \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof#### Result:#### Examples: ```bash > verus getidentityhistory \"name@\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentityhistory\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getidentitytrust '[\"id\",...]'` #### Arguments: ```json \"[\"id\",...]\"                    (strarray, optional) if specified, only returns rating values for specified IDs, otherwise all ``` #### Result: ```json {  \"setratings\":{\"id\":JSONRatingObject,...},    (jsonobj) an ID/ratings key/value object  \"identitytrustmode\":<n>              (int) 0 = no restriction on sync, 1 = only sync to IDs rated approved, 2 = sync to all IDs but those on block list } ``` ####Examples: ```bash > verus getidentitytrust '[\"id\",...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitytrust\", \"params\": ['[\"id\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How can I use the `getidentitytrust` command to retrieve ratings for specific identities?",
            "You can use the `getidentitytrust` command with an array of identity names or i-addresses as an argument to retrieve their corresponding rating values. For example:\n```\nverus getidentitytrust '[\"id1\", \"id2\", \"id3\"]'\n```\nThis command would retrieve the rating values for the identities \"id1\", \"id2\", and \"id3\". If no identities are specified, the command will return ratings for all identities.",
            "#### Arguments:   \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity   \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive   \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,                       inclusive. -1 means also return values from the mempool.   \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID   \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof   \"vdxfkey\"      (vdxf key, optional) default=null, more selective search for specific content in ID#### Result:#### Examples: ```bash > verus getidentitycontent \"name@\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitycontent\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getidentityhistory \"name@ || iid\" (heightstart) (heightend) (txproofs) (txproofheight)`#### Arguments:   \"name@ || iid\"    (string, required) name followed by \"@\" or i-address of an identity   \"heightstart\"    (number, optional) default=0, only return content from this height forward, inclusive   \"heightend\"     (number, optional) default=0 which means max height, only return content up to this height,             inclusive. -1 means also return values from the mempool.   \"txproofs\"      (bool, optional) default=false, if true, returns proof of ID   \"txproofheight\"   (number, optional) default=\"height\", height from which to generate a proof#### Result:#### Examples: ```bash > verus getidentityhistory \"name@\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentityhistory\", \"params\": [\"name@\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getidentitytrust '[\"id\",...]'` #### Arguments: ```json \"[\"id\",...]\"                    (strarray, optional) if specified, only returns rating values for specified IDs, otherwise all ``` #### Result: ```json {  \"setratings\":{\"id\":JSONRatingObject,...},    (jsonobj) an ID/ratings key/value object  \"identitytrustmode\":<n>              (int) 0 = no restriction on sync, 1 = only sync to IDs rated approved, 2 = sync to all IDs but those on block list } ``` ####Examples: ```bash > verus getidentitytrust '[\"id\",...]' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getidentitytrust\", \"params\": ['[\"id\",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "6c2b7402-bf14-4474-895d-cb0278f5ec87"
]