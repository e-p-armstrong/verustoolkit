[
    [
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a new currency in Verus, and what are the requirements for launching it?",
            "To define a new currency, you can use the `definecurrency` command with the required parameters, such as name, options, currencies, conversions, and preallocations. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' \n```\nTo launch the currency, you need to fund the identity of the currency with at least 10 VRSCTEST and preconvert at least 1000 VRSCTEST to the new currency at the specified conversion rate. This happens as part of the mining process, and the mining blocks that launch the currency earn the conversion fees.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a new currency, such as GOLD, before the token launches?",
            "You can convert VRSCTEST to a new currency, such as GOLD, before the token launches by parking your conversion with the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches. After the launch, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token that can be converted to with either GOLD or VRSCTEST?",
            "You can create a new token that can be converted to with either GOLD or VRSCTEST by defining the token with the `definecurrency` command, specifying the currencies that can be converted to it. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn this example, the new token \"mycoin\" can be converted to with either GOLD or VRSCTEST.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the requirement for creating a currency of a specific name in Verus?",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency called \"gold\" using the command line, which can be widely trusted to a specific, auditable store of gold?",
            "You can define the currency \"gold\" using the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines a currency called \"gold\" with specific options, conversions, and preallocations.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the requirement for launching a currency in Verus, and how does the launch process work?",
            "To launch a currency, the identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from the `definecurrency` command. The launch process happens as part of the mining process, where mining the blocks that launch a currency earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency. The launch will start 50 blocks from when the transaction was made (default).",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to GOLD using the command line, assuming the GOLD token has launched?",
            "You can convert VRSCTEST to GOLD using the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis command will effectively park your conversion until the token launches, at which point, you will either find 0.975 GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST, using the command line?",
            "You can create a new token called \"mycoin\" using the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis command defines a new token called \"mycoin\" with specific options, proof protocol, currencies, and initial supply.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What does it mean when I set the `proofprotocol` to 2 when defining a new token, and how can I mint new coins of that token?",
            "When you set the `proofprotocol` to 2, it means that the controller of the chain ID can mint new coins. You can mint new coins of the token using the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency in Verus, and what are the required parameters?",
            "To define a currency in Verus, you use the `definecurrency` command. The required parameters include:\n\n* `name`: The name of the currency.\n* `options`: An integer that specifies the currency's options.\n* `currencies`: An array of currencies that the new currency can be converted to.\n* `conversions`: An array of conversion ratios between the new currency and each currency in the `currencies` array.\n* `minpreconversion`: An array of minimum amounts of each currency in `currencies` required to launch the new currency.\n\nOptional parameters include `preallocations`, which specifies the initial allocation of the new currency to specific IDs.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when a currency is launched in Verus, and how are conversion fees handled?",
            "When a currency is launched in Verus, it is launched 50 blocks after the `definecurrency` transaction is mined, and it requires a minimum amount of VRSCTEST to be preconverted at the specified conversion rate. The mining process earns a 0.025% conversion fee, which is paid in VRSCTEST.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I convert VRSCTEST to a new currency in Verus, and what happens if the currency has not launched yet?",
            "To convert VRSCTEST to a new currency in Verus, you use the `sendcurrency` command with the `convertto` and `preconvert` options. If the currency has not launched yet, the conversion is parked until the currency launches, at which point you will either receive the converted amount or have your VRSCTEST refunded.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I create a new currency that can be converted to with either GOLD or VRSCTEST, and what is the significance of the `proofprotocol` option?",
            "To create a new currency that can be converted to with either GOLD or VRSCTEST, you use the `definecurrency` command with the `currencies` option set to an array including GOLD and VRSCTEST. The `proofprotocol` option specifies the proof protocol for the new currency. If set to 2 (PROOF_CHAINID), the controller of the chain ID can mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the requirement for creating a currency of a specific name in Verus?",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency, such as \"gold\", and what are the necessary steps to launch it?",
            "To define a currency, you can use the `definecurrency` command. For example, to define a currency \"gold\" with specific properties, you can run the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' \n```\nAfter defining the currency, you need to fund the identity of the currency with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch. The launch will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to GOLD before the GOLD token launches?",
            "You can convert VRSCTEST to GOLD by issuing the following command before the block where GOLD token launches:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches, at which point, you will either find 0.975 GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I create a new token, such as \"mycoin\", that can be converted to with either GOLD or VRSCTEST?",
            "To create a new token, such as \"mycoin\", you can use the `definecurrency` command with the following properties:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn \"mycoin\", you set `proofprotocol` to 2, which is PROOF_CHAINID. This means that the controller of the chain ID can mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I mint new coins of \"mycoin\" as the controller of the chain ID?",
            "As the controller of the chain ID, you can mint new coins of \"mycoin\" by issuing the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, a currency can only be created by the controller of an ID with the same name as the currency. This means that the controller of the ID has exclusive control over the creation of the currency, and they can only create it once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a new currency in Verus, and what are the necessary steps for its launch?",
            "To define a new currency, you need to use the `definecurrency` command, specifying the name, options, and other properties of the currency. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nAfter defining the currency, you need to fund the identity of the currency with at least 10 VRSCTEST and preconvert at least 1000 VRSCTEST to the new currency at the specified conversion rate. This will initiate the currency launch, which will start 50 blocks from when the transaction was made.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency, such as GOLD?",
            "To convert VRSCTEST to a newly launched currency like GOLD, you can use the `sendcurrency` command, specifying the address, conversion, and amount. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will park your conversion until the token launches, and then you will either receive the converted amount of GOLD or have your VRSCTEST returned.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token that can be converted to with either GOLD or VRSCTEST?",
            "To create a new token that can be converted to with either GOLD or VRSCTEST, you need to define the token using the `definecurrency` command, specifying the name, options, proof protocol, currencies, and other properties. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis will create a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST. The proof protocol is set to PROOF_CHAINID, which means that the controller of the chain ID can mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is a requirement for creating a currency of a specific name in Verus?",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a new currency in Verus, and what are some important considerations when doing so?",
            "To define a new currency in Verus, you can use the `definecurrency` command. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nSome important considerations when defining a new currency include:\n\n1. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction to initiate the currency launch.\n2. A minimum amount of VRSCTEST must be preconverted to the new currency at a specified conversion rate in order to launch.\n3. The mining process earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency, such as GOLD?",
            "You can convert VRSCTEST to a newly launched currency, such as GOLD, by using the `sendcurrency` command. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis command will effectively park your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new currency that can be converted to with either GOLD or VRSCTEST?",
            "You can create a new currency that can be converted to with either GOLD or VRSCTEST by using the `definecurrency` command. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis command defines a new currency called \"mycoin\" that can be converted to with either GOLD or VRSCTEST. The `proofprotocol` is set to 2, which means that the controller of the chain ID can mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the requirement for creating a currency with a specific name in Verus?",
            "To create a currency with a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency in Verus, and what are the necessary conditions for it to launch?",
            "To define a currency in Verus, you can use the `definecurrency` command with the necessary parameters, such as the currency name, options, currencies, conversions, minpreconversion, and preallocations. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' \n```\nThe necessary conditions for the currency to launch are:\n\n* The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction.\n* There must be 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch.\n* The currency launch will start at 50 blocks from when it was made (default).",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens to the conversion fees during the currency launch process in Verus?",
            "During the currency launch process, the mining process earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to GOLD in Verus?",
            "To convert VRSCTEST to GOLD, you can use the `sendcurrency` command with the necessary parameters, such as the address, convertto, preconvert, and amount. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches, at which point, you will either find 0.975 GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token in Verus that can be converted to with either GOLD or VRSCTEST?",
            "To create a new token in Verus that can be converted to with either GOLD or VRSCTEST, you can use the `definecurrency` command with the necessary parameters, such as the token name, options, proofprotocol, currencies, minpreconversion, and initialsupply. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis will create a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the requirement for creating a currency with a specific name?",
            "To create a currency with a specific name, you need an ID with the same name. The controller of this ID is the only one who can create a currency with that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the steps to define a currency called \"gold\" using the command line?",
            "To define a currency called \"gold\", you can use the following command:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\n\nThis command defines a currency called \"gold\" with specific options, conversion rates, and preallocations.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when a currency is launched, and how are new tokens created after launch?",
            "When a currency is launched, it starts at 50 blocks from when the launch transaction was made, and it must have a minimum of 1000 VRSCTEST preconverted at the specified conversion rate in order to launch. After launch, the only way to create new tokens at present is with a centralized issuance option.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to GOLD before the GOLD token launches?",
            "You can convert VRSCTEST to GOLD before the GOLD token launches by issuing the following command:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\n\nThis command effectively parks your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST?",
            "You can create a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST by defining the currency with the following command:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nIn this definition, the `proofprotocol` is set to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, a currency can only be created by the controller of an ID with the same name as the currency. The controller of the ID can only create a currency with that name once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I define a new currency using the `definecurrency` command in Verus?",
            "To define a new currency, you can use the `definecurrency` command with a JSON object that specifies the currency's properties. For example:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\n\nThis command defines a new currency called \"gold\" with specific options, conversions, and preallocations.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the requirements for launching a new currency in Verus?",
            "To launch a new currency, the identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from the `definecurrency` command. Additionally, there must be at least 1000 VRSCTEST preconverted at the specified conversion rate (e.g., 0.01 VRSCTEST per GOLD) in order to launch the currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a new currency, such as GOLD, before it launches?",
            "You can convert VRSCTEST to a new currency, such as GOLD, before it launches by using the `sendcurrency` command with the `convertto` option. For example:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\n\nThis command will effectively park your conversion until the token launches, at which point, you will either receive the converted amount of GOLD or have your VRSCTEST returned.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token that can be converted to with either GOLD or VRSCTEST?",
            "You can create a new token that can be converted to with either GOLD or VRSCTEST by defining a new currency with the `definecurrency` command and specifying the currencies that it can be converted to. For example:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nThis command defines a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is required to create a currency with a specific name in Verus?",
            "To create a currency with a specific name in Verus, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency in Verus, and what are the requirements for launching it?",
            "To define a currency in Verus, you can use the `definecurrency` command. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThe requirements for launching a currency include:\n\n1. The identity of the currency must be funded with at least 10 VRSCTEST.\n2. There must be at least 1000 VRSCTEST preconverted at the specified conversion rate (in this case, 0.01 VRSCTEST per GOLD).",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What does it mean to set `proofprotocol` to 2 when defining a new token?",
            "When `proofprotocol` is set to 2 when defining a new token, it means that the proof protocol is set to PROOF_CHAINID, which allows the controller of the chain ID to mint new coins. This can be done with a command like:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens during the mining process when a currency is launched in Verus?",
            "During the mining process, the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I define a new currency, for example, \"gold\", using the command line?",
            "You can define a new currency using the `definecurrency` command. Here's an example of how to define a currency named \"gold\":\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\n\nThis command defines a new currency named \"gold\" with specific properties, such as conversion rates, preallocations, and more.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency, such as GOLD, in Verus?",
            "You can convert VRSCTEST to a newly launched currency, such as GOLD, by issuing a command like:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What needs to happen before a currency launch can occur?",
            "Before a currency launch can occur, the identity of the currency must be funded with at least 10 VRSCTEST, and there must be at least 1000 VRSCTEST preconverted at the specified conversion rate. This happens as part of the mining process, and mining the blocks that launch a currency earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token that can be converted to with either GOLD or VRSCTEST in Verus?",
            "You can create a new token that can be converted to with either GOLD or VRSCTEST by defining the currency with the `definecurrency` command, specifying the currencies that it can be converted to, and setting the proof protocol to 2 (PROOF_CHAINID). For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis allows the controller of the chain ID to mint new coins as needed.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly created currency, such as GOLD, before it launches?",
            "You can convert VRSCTEST to a newly created currency, such as GOLD, before it launches by using the `sendcurrency` command. Here's an example:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\n\nThis command effectively parks your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new currency, such as \"mycoin\", that can be converted to with either GOLD or VRSCTEST?",
            "You can create a new currency, such as \"mycoin\", that can be converted to with either GOLD or VRSCTEST by using the `definecurrency` command. Here's an example:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nThis command defines a new currency named \"mycoin\" with specific properties, such as conversion rates, proof protocol, and more.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "To create a currency with a specific name, you need an ID with the same name. The controller of this ID is the only one who can create a currency with that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I define a new currency in Verus, and what are the required parameters?",
            "To define a new currency in Verus, you can use the `definecurrency` command. The required parameters include:\n\n* `name`: the name of the currency\n* `options`: an integer that specifies the options for the currency\n* `currencies`: an array of currencies that the new currency can be converted to\n* `conversions`: an array of conversion rates between the new currency and the currencies in the `currencies` array\n* `minpreconversion`: an array of minimum amounts required to convert to the new currency\n* `preallocations`: an array of pre-allocations of the new currency to specific IDs",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a new currency using the command line, and what are the necessary conditions for its launch?",
            "To define a new currency, you can use the `definecurrency` command with the following format:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"currency_name\",\"options\":options_value,\"currencies\":[\"vrsctest\"],\"conversions\":[conversion_rate],\"minpreconversion\":[minimum_preconversion],\"preallocations\":[{\"controller_id@\":preallocation_amount}]}'`\n```\nThe necessary conditions for the currency launch include:\n\n1. Funding the identity of the currency with at least 10 VRSCTEST.\n2. Having at least `minpreconversion` VRSCTEST preconverted at the specified `conversion_rate` to launch the currency.\n3. The currency launch will start 50 blocks from when the transaction is made (default).",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when a currency is launched in Verus?",
            "When a currency is launched in Verus, it must be funded with at least 10 VRSCTEST before sending the transaction returned from the `definecurrency` command to initiate a currency launch. The launch will start at 50 blocks from when it was made (default), and it must have a minimum amount of VRSCTEST preconverted at a specified rate in order to launch. During the launch, mining the blocks that launch a currency earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to the new currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency, like GOLD?",
            "To convert VRSCTEST to a newly launched currency, like GOLD, you can use the `sendcurrency` command with the following format:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"your_address@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a new currency in Verus?",
            "To convert VRSCTEST to a new currency in Verus, you can use the `sendcurrency` command. For example, to convert VRSCTEST to GOLD, you can issue the command:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token that can be converted to with either GOLD or VRSCTEST?",
            "To create a new token, like mycoin, that can be converted to with either GOLD or VRSCTEST, you can use the `definecurrency` command with the following format:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nIn this example, `proofprotocol` is set to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins. You can mint new coins using the `sendcurrency` command with the `mintnew` option.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new currency that can be converted to with either GOLD or VRSCTEST in Verus?",
            "To create a new currency that can be converted to with either GOLD or VRSCTEST in Verus, you can use the `definecurrency` command. For example, to create a currency called \"mycoin\" that can be converted to with either GOLD or VRSCTEST, you can issue the command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis will define a new currency called \"mycoin\" with the specified options and conversion rates.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the requirement for creating a currency of a specific name in Verus?",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is a prerequisite to creating a currency of a specific name in Verus?",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a currency, such as \"gold\", using the command line?",
            "You can define a currency using the `definecurrency` command. For example, to define a currency called \"gold\", you would run the following command:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\n\nThis command defines a currency called \"gold\" with specific properties, such as conversion rates and preallocations.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do you define a currency in Verus, and what are some of the important parameters involved?",
            "You can define a currency in Verus using the `definecurrency` command. Some important parameters involved are:\n\n* `name`: The name of the currency.\n* `options`: An integer that configures the currency's properties.\n* `currencies`: An array of currencies that the new currency can be converted to.\n* `conversions`: An array of conversion ratios between the new currency and the currencies in the `currencies` array.\n* `minpreconversion`: The minimum amount of the currencies in the `currencies` array required to launch the currency.\n* `preallocations`: An array of preallocated amounts of the currency to specific IDs.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is required to launch a currency, and how does the launch process work?",
            "To launch a currency, the identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from the `definecurrency` command. The currency launch will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. The launch process happens as part of the mining process, and mining the blocks that launch a currency earns the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when a currency is launched in Verus, and how do miners benefit from it?",
            "When a currency is launched in Verus, it happens as part of the mining process. Miners earn a 0.025% conversion fee for participating in the launch by mining the blocks that launch the currency. This conversion fee is paid in the form of the new currency, converted from the original currency (e.g., VRSCTEST).",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can you convert VRSCTEST to a newly launched currency, such as GOLD, in Verus?",
            "You can convert VRSCTEST to a newly launched currency, such as GOLD, by issuing the `sendcurrency` command with the `convertto` option. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis command will effectively park the conversion until the token launches, at which point, you will either receive the converted amount of GOLD or have your VRSCTEST returned.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token, such as \"mycoin\", that can be converted to with either GOLD or VRSCTEST?",
            "You can create a new token, such as \"mycoin\", by defining it with the `definecurrency` command. For example:\n\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\n\nThis defines a new token called \"mycoin\" with specific properties, such as conversion rates and initial supply. The `proofprotocol` is set to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can you create a new token that can be converted to with either GOLD or VRSCTEST in Verus?",
            "You can create a new token that can be converted to with either GOLD or VRSCTEST by defining the currency with the `definecurrency` command and specifying the `currencies` array to include both GOLD and VRSCTEST. For example:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis command defines a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I mint new coins for a token, such as \"mycoin\", using the command line?",
            "To mint new coins for a token, such as \"mycoin\", you can use the `sendcurrency` command. For example:\n\n```\n./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]'\n```\n\nThis command mints 10,000 new \"mycoin\" tokens and sends them to the address \"mike@\".",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is required to create a currency of a specific name on the Verus network?",
            "To create a currency of a specific name, you need to have an ID with the same name. The controller of this ID is the only one who can create a currency with that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I define a currency called \"gold\" using the command line, which can be converted to with VRSCTEST, with a specific conversion rate and pre-allocation of tokens to an ID?",
            "You can define the currency \"gold\" using the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```\nThis command defines a currency called \"gold\" with a conversion rate of 0.01 VRSCTEST per GOLD, and pre-allocates 50,000,000 GOLD to the ID \"mike@\".",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are the requirements for launching a currency on the Verus network, and how does the mining process relate to currency launch?",
            "To launch a currency on the Verus network, the identity of the currency must be funded with at least 10 VRSCTEST. Additionally, there must be at least 1000 VRSCTEST pre-converted at the specified conversion rate in order to launch the currency. The mining process plays a role in the currency launch, as mining the blocks that launch a currency earns the miner 0.025% conversion fees of participation in the launch, which involves converting VRSCTEST to the new currency.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency, such as GOLD, using the command line?",
            "You can convert VRSCTEST to GOLD using the following command:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis command will effectively park your conversion until the token launches, at which point, you will either find the converted amount of GOLD in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token called \"mycoin\" that can be converted to with either GOLD or VRSCTEST, using the command line?",
            "You can create a new token called \"mycoin\" using the following command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":20000'\n```\nThis command defines a new token called \"mycoin\" with a proof protocol set to PROOF_CHAINID, which allows the controller of the chain ID to mint new coins. The token can be converted to with either GOLD or VRSCTEST.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, an ID of a specific name is required to create a currency of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a new currency in Verus, and what are the necessary steps to launch it?",
            "To define a new currency in Verus, you need to use the `definecurrency` command, specifying the currency's properties such as its name, options, currencies it can be converted to, conversion ratios, and preallocations. After defining the currency, you need to fund the identity of the currency with at least 10 VRSCTEST and send a transaction to initiate the currency launch. The launch will start 50 blocks from when the transaction was made, and the currency will be launched after 1000 VRSCTEST are preconverted at the specified conversion ratio.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I convert VRSCTEST to a newly launched currency, such as GOLD?",
            "To convert VRSCTEST to a newly launched currency, such as GOLD, you can use the `sendcurrency` command, specifying the address, convertto, preconvert, and amount. The conversion will be parked until the token launches, and then you will either receive the converted amount or have your VRSCTEST returned.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new token that can be converted to with either GOLD or VRSCTEST?",
            "To create a new token that can be converted to with either GOLD or VRSCTEST, you need to define the token using the `definecurrency` command, specifying its properties such as its name, options, proof protocol, currencies it can be converted to, and initial supply. You can then use the `sendcurrency` command to mint new coins as the controller of the chain ID.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What does it mean if the `proofprotocol` is set to 2 when defining a new token?",
            "If the `proofprotocol` is set to 2 when defining a new token, it means that the proof protocol is set to PROOF_CHAINID, which allows the controller of the chain ID to mint new coins. This can be done using the `sendcurrency` command with the `mintnew` option.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is required to create a currency of a specific name on Verus?",
            "To create a currency of a specific name on Verus, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do you define a currency on Verus, and what are some of the important properties that need to be specified?",
            "To define a currency on Verus, you use the `definecurrency` command. Some important properties that need to be specified include:\n* `name`: the name of the currency\n* `options`: an integer that configures certain properties of the currency\n* `currencies`: an array of currencies that the new currency can be converted to\n* `conversions`: an array of conversion rates between the new currency and the currencies specified in `currencies`\n* `minpreconversion`: the minimum amount of the currencies specified in `currencies` that need to be pre-converted to launch the currency\n* `preallocations`: an array of pre-allocations of the new currency to specific IDs",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when a currency is launched on Verus, and how can you convert to it?",
            "When a currency is launched on Verus, it is launched as part of the mining process. The launch is initiated when a transaction returned from the `definecurrency` command is sent, and it will start 50 blocks from when it was made (by default). The currency is launched when a certain amount of the base currency (VRSCTEST in this case) is pre-converted to the new currency at a specified conversion rate.\n\nTo convert to the new currency, you can use the `sendcurrency` command with the `convertto` option. For example:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis will effectively park your conversion until the token launches, at which point, you will either find the converted amount of the new currency in your wallet, or you will have your original base currency back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the relationship between an ID and a currency in Verus?",
            "In Verus, to create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do I define a new currency in Verus using the command line, and what are the required parameters?",
            "You can define a new currency in Verus using the `definecurrency` command. The required parameters include:\n* `name`: the name of the currency\n* `options`: an integer specifying the currency's options\n* `currencies`: an array of currencies that can be converted to the new currency\n* `conversions`: an array of conversion ratios between the new currency and each currency in `currencies`\n* `minpreconversion`: an array of minimum amounts of each currency in `currencies` required to launch the new currency\n* `preallocations`: an array of pre-allocations of the new currency to specific IDs\n\nHere's an example command:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}'\n```",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What happens when I send the `definecurrency` command, and how can I convert VRSCTEST to the new currency?",
            "When you send the `definecurrency` command, it initiates a currency launch that will start at 50 blocks from when it was made (default). The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command. The launch requires 1000 VRSCTEST preconverted at the specified conversion rate to launch.\n\nTo convert VRSCTEST to the new currency, you can issue a `sendcurrency` command, like this:\n```\n./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]'\n```\nThis command will effectively park your conversion until the token launches, at which point, you will either find the converted amount of the new currency in your wallet, or you will have your VRSCTEST back.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I create a new currency that can be converted to with either GOLD or VRSCTEST?",
            "To create a new currency that can be converted to with either GOLD or VRSCTEST, you can use the `definecurrency` command with the following format:\n```\n./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]'\n```\nThis command defines a new currency called \"mycoin\" that can be converted to with either GOLD or VRSCTEST. The `proofprotocol` is set to 2, which is PROOF_CHAINID, allowing the controller of the chain ID to mint new coins.",
            "To create a currency of a specific name, you need an ID of the same name. The controller of this ID is the only one who can create a currency of that name, and they can only do so once. So, let's hypothetically assume I have 3 IDs, one named gold@, one named mycoin@, and one named mike@. I would like to have one currency, gold@, that I somehow launch in a way that maps it in a way that can be widely trusted to a specific, auditable store of gold. I also would like to launch a token called mycoin@, which is something like a Kickstarter, where a business, \"my\", offers to attribute the coins some utility or product value if the purchase exceeds a certain level. First, I could define the currency \"gold\" as follows: ``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"gold\",\"options\":96,\"currencies\":[\"vrsctest\"],\"conversions\":[0.01],\"minpreconversion\":[1000],\"preallocations\":[{\"mike@\":50000000.00000000}]}' ``` of course, since this is a test currency, I send myself some to start. The identity of the currency must be funded with at least 10 VRSCTEST before sending the transaction returned from this command to initiate a currency launch that will start at 50 blocks from when it was made (default), and that must have 1000 VRSCTEST preconverted at 0.01 VRSCTEST per GOLD in order to launch. all of this happens as part of the mining process, since mining the blocks that launch a currency earn the 0.025% conversion fees of participation in the launch, converting VRSCTEST to GOLD. I could send the following command before the block where GOLD token launches. After it launches, the only way at present to create new tokens is with a centralized issuance option. To convert VRSCTEST to GOLD, you could issue the command: ``` ./verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"mike@\",\"convertto\":\"gold\",\"preconvert\":1,\"amount\":100}]' ``` that would effectively park my conversion until the token launches, at which point, I will either find 0.975 GOLD in my wallet, or I will have my VRSCTEST back. Assuming it launches, and I later want to create mycoin, which can be converted to with either GOLD or VRSCTEST, I can create mycoin with:``` ./verus -chain=VRSCTEST definecurrency '{\"name\":\"mycoin\",\"options\":97, \"proofprotocol\":2,\"currencies\":[\"vrsctest\", \"gold\"],\"minpreconversion\":[10000,5.1298]}, \"initialsupply\":[20000]' ``` In \"mycoin\", I set proofprotocol to 2, which is PROOF_CHAINID. That means that the controller of the chain ID can mint new coins as follows:``` ./verus -chain=VRSCTEST sendcurrency \"mycoin@\" '[{\"address\":\"mike@\",\"currency\":\"mycoin\",\"mintnew\":1,\"amount\":10000}]' ```",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "c63a9a59-7dea-4d5b-8110-67a4af34ffe8"
]