[
    [
        [
            "How can I verify the authenticity of a Verus download using the command line?",
            "To verify the authenticity of a Verus download, you can use the `verifyfile` or `verifyhash` command in the Verus CLI. The `verifyfile` command takes three arguments: the identity of the signer, the signature, and the path to the file to be verified. The `verifyhash` command takes four arguments: the identity of the signer, the signature, the expected hash, and the path to the file to be verified.\n\nHere are some examples:\n\n**Verifying file directly**\n```\n./verus verifyfile \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH /Downloads/Verus-CLI-Linux-v0.6.5-amd64/Verus-CLI-Linux-v0.6.5-amd64.tar.gz\n```\n\n**Verifying using a checksum**\n```\n./verus verifyhash \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH 60020bfebbb2ced560c5d1e1333c43d9f80c4db4797812213ae04ad39df99c22\n```\n\nIf the signature is valid, the result will be `true`.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation Releases@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted textfile. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH /Downloads/Verus-CLI-Linux-v0.6.5-amd64/Verus-CLI-Linux-v0.6.5-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH 60020bfebbb2ced560c5d1e1333c43d9f80c4db4797812213ae04ad39df99c22 ```**The result will be true if the signature is valid.** ``` true ``` ## New in v0.6.4-3 - Added `z_viewtransaction` api: Gets detailed shielded information about an in-wallet transaction# Verus CLI v0.6.4-3### Worldwide Verifiable Digital Signatures for All! Verus digital signatures, based on Verus ID, offer the first worldwide verifiable, decentralized, single or multi-sig friendly-name signatures for content such as messages and files, authentication, and attestations, with full support for revocation and recovery in case of key loss or theft.Bitcoin, which was first to enable worldwide, P2P decentralized blockchain transactions, and most of its derivatives, offer ways to sign messages with specific private keys that can be verified against public addresses. While that does offer some limited signing capability, it does not offer capabilities that can compete with centralized services offering more sophisticated key management. A single public/private key pair lacks critical capabilities to make it suitable as an actual identity, most notable and obvious being the ability to recover from loss or theft of private keys, but arguably as important are friendly name aliases, modifiable multi-sig signing, updates, privacy, and the association of signed attestations by other identities to statements about properties of the identity.Verus ID enables free verifiable digital signatures for all through the Verus ID protocol as just one of the many new capabilities it enables. It is also the foundation upon which many new applications and additional capabilities can be built.",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the significance of Verus digital signatures?",
            "Verus digital signatures, based on Verus ID, offer the first worldwide verifiable, decentralized, single or multi-sig friendly-name signatures for content such as messages and files, authentication, and attestations, with full support for revocation and recovery in case of key loss or theft. They provide capabilities that can compete with centralized services offering more sophisticated key management, including friendly name aliases, modifiable multi-sig signing, updates, privacy, and the association of signed attestations by other identities to statements about properties of the identity.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation Releases@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted textfile. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH /Downloads/Verus-CLI-Linux-v0.6.5-amd64/Verus-CLI-Linux-v0.6.5-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH 60020bfebbb2ced560c5d1e1333c43d9f80c4db4797812213ae04ad39df99c22 ```**The result will be true if the signature is valid.** ``` true ``` ## New in v0.6.4-3 - Added `z_viewtransaction` api: Gets detailed shielded information about an in-wallet transaction# Verus CLI v0.6.4-3### Worldwide Verifiable Digital Signatures for All! Verus digital signatures, based on Verus ID, offer the first worldwide verifiable, decentralized, single or multi-sig friendly-name signatures for content such as messages and files, authentication, and attestations, with full support for revocation and recovery in case of key loss or theft.Bitcoin, which was first to enable worldwide, P2P decentralized blockchain transactions, and most of its derivatives, offer ways to sign messages with specific private keys that can be verified against public addresses. While that does offer some limited signing capability, it does not offer capabilities that can compete with centralized services offering more sophisticated key management. A single public/private key pair lacks critical capabilities to make it suitable as an actual identity, most notable and obvious being the ability to recover from loss or theft of private keys, but arguably as important are friendly name aliases, modifiable multi-sig signing, updates, privacy, and the association of signed attestations by other identities to statements about properties of the identity.Verus ID enables free verifiable digital signatures for all through the Verus ID protocol as just one of the many new capabilities it enables. It is also the foundation upon which many new applications and additional capabilities can be built.",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How do Verus digital signatures compare to those offered by Bitcoin and its derivatives?",
            "While Bitcoin and its derivatives do offer ways to sign messages with specific private keys that can be verified against public addresses, they lack critical capabilities to make them suitable as an actual identity. Verus digital signatures, on the other hand, offer more sophisticated key management, including the ability to recover from loss or theft of private keys, friendly name aliases, modifiable multi-sig signing, updates, privacy, and the association of signed attestations by other identities to statements about properties of the identity.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation Releases@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted textfile. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH /Downloads/Verus-CLI-Linux-v0.6.5-amd64/Verus-CLI-Linux-v0.6.5-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation Releases@\" AT9MDwABQR+giVSMbRiq3p60hCUVfEdm/yPLZYjX1Eh+ufvtnpDPhyjvjUGQRClss+mQohhXPxfWY5oqIzfioqJsnHHlo2XH 60020bfebbb2ced560c5d1e1333c43d9f80c4db4797812213ae04ad39df99c22 ```**The result will be true if the signature is valid.** ``` true ``` ## New in v0.6.4-3 - Added `z_viewtransaction` api: Gets detailed shielded information about an in-wallet transaction# Verus CLI v0.6.4-3### Worldwide Verifiable Digital Signatures for All! Verus digital signatures, based on Verus ID, offer the first worldwide verifiable, decentralized, single or multi-sig friendly-name signatures for content such as messages and files, authentication, and attestations, with full support for revocation and recovery in case of key loss or theft.Bitcoin, which was first to enable worldwide, P2P decentralized blockchain transactions, and most of its derivatives, offer ways to sign messages with specific private keys that can be verified against public addresses. While that does offer some limited signing capability, it does not offer capabilities that can compete with centralized services offering more sophisticated key management. A single public/private key pair lacks critical capabilities to make it suitable as an actual identity, most notable and obvious being the ability to recover from loss or theft of private keys, but arguably as important are friendly name aliases, modifiable multi-sig signing, updates, privacy, and the association of signed attestations by other identities to statements about properties of the identity.Verus ID enables free verifiable digital signatures for all through the Verus ID protocol as just one of the many new capabilities it enables. It is also the foundation upon which many new applications and additional capabilities can be built.",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "a48a558b-5e25-4bf4-bd04-f1af7cc3a374"
]