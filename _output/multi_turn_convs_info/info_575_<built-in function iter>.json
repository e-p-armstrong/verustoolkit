[
    [
        [
            "What is the purpose of the `takeoffer` command in Verus, and what are its required and optional arguments?",
            "The `takeoffer` command is used to accept an offer on the Verus network. It requires three arguments: `fromaddress`, a JSON object with the offer details, and an optional `returntx` boolean and `feeamount` value.\n\nThe `fromaddress` argument is a string specifying the Sapling, VerusID, or wildcard address to send funds from. The JSON object argument contains the offer details, including the transaction ID, hexadecimal transaction, and delivery information. The `returntx` boolean, if set to `true`, returns a transaction waiting for taker completion instead of posting. The `feeamount` value, if specified, sets a specific fee amount instead of using the default miner's fee.",
            "#### Arguments: 1. \"fromaddress\"     (string, required) The Sapling, VerusID, or wildcard address to send funds from, including fees for ID swaps.                       \"\\*\", \"R\\*\", or \"i\\*\" are valid wildcards 2. {   \"txid\"        (string, required) The transaction ID for the offer to accept   \"tx\"         (string, required) The hex transaction to complete in order to accept the offer   \"deliver\"      (object, required) One of \"fullidnameoriaddresstotrade\" or {\"currency\":\"currencynameorid\", \"amount\":value}   \"feeamount\"     (number, optional) Specific fee amount requested instead of default miner's fee  } 3. \"returntx\" (bool, optional) default = false, if true, returns a transaction waiting for taker completion instead of posting 4. \"feeamount\" (value, optional) default = 0.0001#### Result:  \"txid\" : \"transactionid\" (string) The transaction id if (returntx) is false  \"hextx\" : \"hex\"     (string) The hexadecimal, serialized transaction if (returntx) is trueExamples: ``` > verus takeoffer fromaddress '{\"txid\":\"txid\" | \"tx\":\"hextx\", \"deliver\":\"fullidnameoriaddresstodeliver\" | {\"currency\":\"currencynameorid\",\"amount\"}, \"accept\":{\"address\":\"addressorid\",\"currency\":\"currencynameorid\",\"amount\"} | {identitydefinition}}' (returntx) (feeamount) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"takeoffer\", \"params\": [fromaddress {\"txid\":\"txid\" | \"tx\":\"hextx\", \"deliver\":\"fullidnameoriaddresstodeliver\" | {\"currency\":\"currencynameorid\",\"amount\"}, \"accept\":{\"address\":\"addressorid\",\"currency\":\"currencynameorid\",\"amount\"} | {identitydefinition}} (returntx) (feeamount)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Mining ### `getblocksubsidy height` Returns block subsidy reward, taking into account the mining slow start and the founders reward, of block at index provided.#### Arguments: 1. height     (numeric, optional) The block height. If not provided, defaults to the current height of the chain.#### Result: ```json {  \"miner\" : x.xxx      (numeric) The coinbase reward amount in VRSC. } ``` Examples: ```bash > verus getblocksubsidy 1000 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockubsidy\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblocktemplate ( \"jsonrequestobject\" )` If the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'. It returns data needed to construct a block to work on. See https://en.bitcoin.it/wiki/BIP_0022 for full specification.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the result of the `takeoffer` command, and how does it change depending on the `returntx` argument?",
            "The result of the `takeoffer` command is a JSON object with either a `txid` string or a `hextx` string, depending on the value of the `returntx` argument. If `returntx` is `false` (default), the result is a JSON object with a `txid` string containing the transaction ID. If `returntx` is `true`, the result is a JSON object with a `hextx` string containing the hexadecimal, serialized transaction.",
            "#### Arguments: 1. \"fromaddress\"     (string, required) The Sapling, VerusID, or wildcard address to send funds from, including fees for ID swaps.                       \"\\*\", \"R\\*\", or \"i\\*\" are valid wildcards 2. {   \"txid\"        (string, required) The transaction ID for the offer to accept   \"tx\"         (string, required) The hex transaction to complete in order to accept the offer   \"deliver\"      (object, required) One of \"fullidnameoriaddresstotrade\" or {\"currency\":\"currencynameorid\", \"amount\":value}   \"feeamount\"     (number, optional) Specific fee amount requested instead of default miner's fee  } 3. \"returntx\" (bool, optional) default = false, if true, returns a transaction waiting for taker completion instead of posting 4. \"feeamount\" (value, optional) default = 0.0001#### Result:  \"txid\" : \"transactionid\" (string) The transaction id if (returntx) is false  \"hextx\" : \"hex\"     (string) The hexadecimal, serialized transaction if (returntx) is trueExamples: ``` > verus takeoffer fromaddress '{\"txid\":\"txid\" | \"tx\":\"hextx\", \"deliver\":\"fullidnameoriaddresstodeliver\" | {\"currency\":\"currencynameorid\",\"amount\"}, \"accept\":{\"address\":\"addressorid\",\"currency\":\"currencynameorid\",\"amount\"} | {identitydefinition}}' (returntx) (feeamount) > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"takeoffer\", \"params\": [fromaddress {\"txid\":\"txid\" | \"tx\":\"hextx\", \"deliver\":\"fullidnameoriaddresstodeliver\" | {\"currency\":\"currencynameorid\",\"amount\"}, \"accept\":{\"address\":\"addressorid\",\"currency\":\"currencynameorid\",\"amount\"} | {identitydefinition}} (returntx) (feeamount)] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```## Mining ### `getblocksubsidy height` Returns block subsidy reward, taking into account the mining slow start and the founders reward, of block at index provided.#### Arguments: 1. height     (numeric, optional) The block height. If not provided, defaults to the current height of the chain.#### Result: ```json {  \"miner\" : x.xxx      (numeric) The coinbase reward amount in VRSC. } ``` Examples: ```bash > verus getblocksubsidy 1000 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getblockubsidy\", \"params\": [1000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getblocktemplate ( \"jsonrequestobject\" )` If the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'. It returns data needed to construct a block to work on. See https://en.bitcoin.it/wiki/BIP_0022 for full specification.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "fc4bd961-b572-42e9-b316-d2e9a01d6c58"
]