[
    [
        [
            "What is the output format of the `zcrawjoinsplit` command?",
            "The output format of the `zcrawjoinsplit` command is a JSON object containing three properties: `\"encryptednote1\"`, `\"encryptednote2\"`, and `\"rawtxn\"`. Specifically, the output looks like this:\n```json\n{\n  \"encryptednote1\": enc1,\n  \"encryptednote2\": enc2,\n  \"rawtxn\": rawtxout\n}\n```",
            "#### Result: ```json [  {   \"runningtime\": runningtime  },  {   \"runningtime\": runningtime  }  ... ] ``` ### `zcrawjoinsplit rawtx inputs outputs vpub_old vpub_new` inputs: a JSON object mapping {note: zcsecretkey, ...} outputs: a JSON object mapping {zcaddr: value, ...} DEPRECATED. Splices a joinsplit into rawtx. Inputs are unilaterally confidential. Outputs are confidential between sender/receiver. The vpub_old and vpub_new values are globally public and move transparent value into or out of the confidential value store, respectively. Note: The caller is responsible for delivering the output enc1 and enc2 to the appropriate recipients, as well as signing rawtxout and ensuring it is mined. (A future RPC call will deliver the confidential payments in-band on the blockchain.) Output: ```json { \"encryptednote1\": enc1, \"encryptednote2\": enc2, \"rawtxn\": rawtxout } ``` ### `zcrawkeygen` DEPRECATED. Generate a zcaddr which can send and receive confidential values. Output: ```json {  \"zcaddress\": zcaddr,  \"zcsecretkey\": zcsecretkey,  \"zcviewingkey\": zcviewingkey, } ``` ### `zcrawreceive zcsecretkey encryptednote` DEPRECATED. Decrypts encryptednote and checks if the coin commitments are in the blockchain as indicated by the \"exists\" result. Output: ```json {  \"amount\": value,  \"note\": noteplaintext,  \"exists\": exists } ``` ### `zcsamplejoinsplit` Perform a joinsplit and return the JSDescription. compiled by Oink.vrsc@, additions by Mike@, grewalsatinder@ and allbits@ Note: last revision date 2024-05-03.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `zcrawjoinsplit` command, and what are the inputs and outputs?",
            "The `zcrawjoinsplit` command splices a joinsplit into a raw transaction. The inputs are:\n\n* `inputs`: a JSON object mapping `{note: zcsecretkey,...}`\n* `outputs`: a JSON object mapping `{zcaddr: value,...}`\n* `vpub_old`: a globally public value\n* `vpub_new`: a globally public value\n\nThe outputs are confidential between the sender and receiver, and the caller is responsible for delivering the output `enc1` and `enc2` to the appropriate recipients, as well as signing `rawtxout` and ensuring it is mined.",
            "#### Result: ```json [  {   \"runningtime\": runningtime  },  {   \"runningtime\": runningtime  }  ... ] ``` ### `zcrawjoinsplit rawtx inputs outputs vpub_old vpub_new` inputs: a JSON object mapping {note: zcsecretkey, ...} outputs: a JSON object mapping {zcaddr: value, ...} DEPRECATED. Splices a joinsplit into rawtx. Inputs are unilaterally confidential. Outputs are confidential between sender/receiver. The vpub_old and vpub_new values are globally public and move transparent value into or out of the confidential value store, respectively. Note: The caller is responsible for delivering the output enc1 and enc2 to the appropriate recipients, as well as signing rawtxout and ensuring it is mined. (A future RPC call will deliver the confidential payments in-band on the blockchain.) Output: ```json { \"encryptednote1\": enc1, \"encryptednote2\": enc2, \"rawtxn\": rawtxout } ``` ### `zcrawkeygen` DEPRECATED. Generate a zcaddr which can send and receive confidential values. Output: ```json {  \"zcaddress\": zcaddr,  \"zcsecretkey\": zcsecretkey,  \"zcviewingkey\": zcviewingkey, } ``` ### `zcrawreceive zcsecretkey encryptednote` DEPRECATED. Decrypts encryptednote and checks if the coin commitments are in the blockchain as indicated by the \"exists\" result. Output: ```json {  \"amount\": value,  \"note\": noteplaintext,  \"exists\": exists } ``` ### `zcsamplejoinsplit` Perform a joinsplit and return the JSDescription. compiled by Oink.vrsc@, additions by Mike@, grewalsatinder@ and allbits@ Note: last revision date 2024-05-03.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `zcrawkeygen` command, and what is its output?",
            "The `zcrawkeygen` command generates a `zcaddr` that can send and receive confidential values. The output is a JSON object containing three properties: `\"zcaddress\"`, `\"zcsecretkey\"`, and `\"zcviewingkey\"`. Specifically, the output looks like this:\n```json\n{\n  \"zcaddress\": zcaddr,\n  \"zcsecretkey\": zcsecretkey,\n  \"zcviewingkey\": zcviewingkey\n}\n```",
            "#### Result: ```json [  {   \"runningtime\": runningtime  },  {   \"runningtime\": runningtime  }  ... ] ``` ### `zcrawjoinsplit rawtx inputs outputs vpub_old vpub_new` inputs: a JSON object mapping {note: zcsecretkey, ...} outputs: a JSON object mapping {zcaddr: value, ...} DEPRECATED. Splices a joinsplit into rawtx. Inputs are unilaterally confidential. Outputs are confidential between sender/receiver. The vpub_old and vpub_new values are globally public and move transparent value into or out of the confidential value store, respectively. Note: The caller is responsible for delivering the output enc1 and enc2 to the appropriate recipients, as well as signing rawtxout and ensuring it is mined. (A future RPC call will deliver the confidential payments in-band on the blockchain.) Output: ```json { \"encryptednote1\": enc1, \"encryptednote2\": enc2, \"rawtxn\": rawtxout } ``` ### `zcrawkeygen` DEPRECATED. Generate a zcaddr which can send and receive confidential values. Output: ```json {  \"zcaddress\": zcaddr,  \"zcsecretkey\": zcsecretkey,  \"zcviewingkey\": zcviewingkey, } ``` ### `zcrawreceive zcsecretkey encryptednote` DEPRECATED. Decrypts encryptednote and checks if the coin commitments are in the blockchain as indicated by the \"exists\" result. Output: ```json {  \"amount\": value,  \"note\": noteplaintext,  \"exists\": exists } ``` ### `zcsamplejoinsplit` Perform a joinsplit and return the JSDescription. compiled by Oink.vrsc@, additions by Mike@, grewalsatinder@ and allbits@ Note: last revision date 2024-05-03.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `zcrawreceive` command, and what is its output?",
            "The `zcrawreceive` command decrypts an `encryptednote` and checks if the coin commitments are in the blockchain as indicated by the `\"exists\"` result. The output is a JSON object containing three properties: `\"amount\"`, `\"note\"`, and `\"exists\"`. Specifically, the output looks like this:\n```json\n{\n  \"amount\": value,\n  \"note\": noteplaintext,\n  \"exists\": exists\n}\n```",
            "#### Result: ```json [  {   \"runningtime\": runningtime  },  {   \"runningtime\": runningtime  }  ... ] ``` ### `zcrawjoinsplit rawtx inputs outputs vpub_old vpub_new` inputs: a JSON object mapping {note: zcsecretkey, ...} outputs: a JSON object mapping {zcaddr: value, ...} DEPRECATED. Splices a joinsplit into rawtx. Inputs are unilaterally confidential. Outputs are confidential between sender/receiver. The vpub_old and vpub_new values are globally public and move transparent value into or out of the confidential value store, respectively. Note: The caller is responsible for delivering the output enc1 and enc2 to the appropriate recipients, as well as signing rawtxout and ensuring it is mined. (A future RPC call will deliver the confidential payments in-band on the blockchain.) Output: ```json { \"encryptednote1\": enc1, \"encryptednote2\": enc2, \"rawtxn\": rawtxout } ``` ### `zcrawkeygen` DEPRECATED. Generate a zcaddr which can send and receive confidential values. Output: ```json {  \"zcaddress\": zcaddr,  \"zcsecretkey\": zcsecretkey,  \"zcviewingkey\": zcviewingkey, } ``` ### `zcrawreceive zcsecretkey encryptednote` DEPRECATED. Decrypts encryptednote and checks if the coin commitments are in the blockchain as indicated by the \"exists\" result. Output: ```json {  \"amount\": value,  \"note\": noteplaintext,  \"exists\": exists } ``` ### `zcsamplejoinsplit` Perform a joinsplit and return the JSDescription. compiled by Oink.vrsc@, additions by Mike@, grewalsatinder@ and allbits@ Note: last revision date 2024-05-03.",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "37e85d46-7bd4-416c-8877-b63933d06053"
]