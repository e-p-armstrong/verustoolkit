[
    [
        [
            "How can I verify the integrity of a Verus download using the command line?",
            "To verify the integrity of a Verus download, you can use the `verifyfile` or `verifyhash` commands. Here are the steps:\n\n1. Extract the downloaded archive.\n2. Verify the signature for the extracted archive using the extracted text file.\n\nHere are some CLI examples:\n\n**Verifying file directly**\n```\n./verus verifyfile \"Verus Coin Foundation@\" <signature> <file_path>\n```\n**Verifying using a checksum**\n```\n./verus verifyhash \"Verus Coin Foundation@\" <signature> <checksum>\n```\nThe result will be `true` if the signature is valid.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted text file. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV /Downloads/Verus-CLI-Linux-v0.6.5-2-amd64/Verus-CLI-Linux-v0.6.5-2-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV 99d7451472bc1fb34359d17e524d7755defbd279b0c2569a67231f8b7a37f9ff ```**The result will be true if the signature is valid.** ``` true ``` This release is intended for use in the VRSCTEST only. Mainnet approved testnet release is not yet available## Notable Changes: - Check for creation of invalid staking transactions# Verus Testnet PBaaS Multi-currency TokensThe testnet supports a completely new capability of token definitions and token launches (Kickstarter/Gofundme style, ICO, ITO, IPO, etc.). These tokens can be sent through the Verus protocol using the new 'sendcurrency' API, which works for all currencies in the Verus network. Tokens can be used as reserve currencies for other currencies as well. Token launches can accept multiple other coins or tokens for conversion to the new token with payment to the token ID. Each token can have a different conversion price for pre-launch participation as well as minimums and maximums of participation. If minimums are not met by the currency's startblock, all participation will be refunded, less a minimal transfer/network fee, which was already allocated to miners/stakers.Tokens can be controlled by the blockchain and used for many purposes, including payment models, tickets, point systems, etc., or they can be partially blockchain controlled, centralized tokens, with currencies that are mintable at any time by the ID behind them. The controlling ID can also receive receive aggregated outgoing transactions to external systems that both burn coins and pass account data in the process. This will allow applications to control currency supplies on the public network, whether these applications are external, decentralized networks or centralized custodial systems, in many typical use cases of tokens, including club coins, game tokens, token launches, etc., no programming is required.## Defining a Currency",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `verifyfile` and `verifyhash` commands in Verus?",
            "The `verifyfile` and `verifyhash` commands are used to verify the integrity of a Verus download by checking the signature against a known signer's identity (in this case, \"Verus Coin Foundation@\"). This ensures that the download has not been tampered with or corrupted during transmission.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted text file. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV /Downloads/Verus-CLI-Linux-v0.6.5-2-amd64/Verus-CLI-Linux-v0.6.5-2-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV 99d7451472bc1fb34359d17e524d7755defbd279b0c2569a67231f8b7a37f9ff ```**The result will be true if the signature is valid.** ``` true ``` This release is intended for use in the VRSCTEST only. Mainnet approved testnet release is not yet available## Notable Changes: - Check for creation of invalid staking transactions# Verus Testnet PBaaS Multi-currency TokensThe testnet supports a completely new capability of token definitions and token launches (Kickstarter/Gofundme style, ICO, ITO, IPO, etc.). These tokens can be sent through the Verus protocol using the new 'sendcurrency' API, which works for all currencies in the Verus network. Tokens can be used as reserve currencies for other currencies as well. Token launches can accept multiple other coins or tokens for conversion to the new token with payment to the token ID. Each token can have a different conversion price for pre-launch participation as well as minimums and maximums of participation. If minimums are not met by the currency's startblock, all participation will be refunded, less a minimal transfer/network fee, which was already allocated to miners/stakers.Tokens can be controlled by the blockchain and used for many purposes, including payment models, tickets, point systems, etc., or they can be partially blockchain controlled, centralized tokens, with currencies that are mintable at any time by the ID behind them. The controlling ID can also receive receive aggregated outgoing transactions to external systems that both burn coins and pass account data in the process. This will allow applications to control currency supplies on the public network, whether these applications are external, decentralized networks or centralized custodial systems, in many typical use cases of tokens, including club coins, game tokens, token launches, etc., no programming is required.## Defining a Currency",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is a notable change in the latest software release?",
            "A notable change in this release is the check for creation of invalid staking transactions.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted text file. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV /Downloads/Verus-CLI-Linux-v0.6.5-2-amd64/Verus-CLI-Linux-v0.6.5-2-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV 99d7451472bc1fb34359d17e524d7755defbd279b0c2569a67231f8b7a37f9ff ```**The result will be true if the signature is valid.** ``` true ``` This release is intended for use in the VRSCTEST only. Mainnet approved testnet release is not yet available## Notable Changes: - Check for creation of invalid staking transactions# Verus Testnet PBaaS Multi-currency TokensThe testnet supports a completely new capability of token definitions and token launches (Kickstarter/Gofundme style, ICO, ITO, IPO, etc.). These tokens can be sent through the Verus protocol using the new 'sendcurrency' API, which works for all currencies in the Verus network. Tokens can be used as reserve currencies for other currencies as well. Token launches can accept multiple other coins or tokens for conversion to the new token with payment to the token ID. Each token can have a different conversion price for pre-launch participation as well as minimums and maximums of participation. If minimums are not met by the currency's startblock, all participation will be refunded, less a minimal transfer/network fee, which was already allocated to miners/stakers.Tokens can be controlled by the blockchain and used for many purposes, including payment models, tickets, point systems, etc., or they can be partially blockchain controlled, centralized tokens, with currencies that are mintable at any time by the ID behind them. The controlling ID can also receive receive aggregated outgoing transactions to external systems that both burn coins and pass account data in the process. This will allow applications to control currency supplies on the public network, whether these applications are external, decentralized networks or centralized custodial systems, in many typical use cases of tokens, including club coins, game tokens, token launches, etc., no programming is required.## Defining a Currency",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the Verus Testnet PBaaS Multi-currency Tokens feature?",
            "The Verus Testnet PBaaS Multi-currency Tokens feature allows for the definition and launch of new tokens, similar to Kickstarter or ICO-style token launches. These tokens can be sent through the Verus protocol using the new `sendcurrency` API, which works for all currencies in the Verus network. Tokens can be used as reserve currencies for other currencies, and can have different conversion prices, minimums, and maximums of participation.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted text file. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV /Downloads/Verus-CLI-Linux-v0.6.5-2-amd64/Verus-CLI-Linux-v0.6.5-2-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV 99d7451472bc1fb34359d17e524d7755defbd279b0c2569a67231f8b7a37f9ff ```**The result will be true if the signature is valid.** ``` true ``` This release is intended for use in the VRSCTEST only. Mainnet approved testnet release is not yet available## Notable Changes: - Check for creation of invalid staking transactions# Verus Testnet PBaaS Multi-currency TokensThe testnet supports a completely new capability of token definitions and token launches (Kickstarter/Gofundme style, ICO, ITO, IPO, etc.). These tokens can be sent through the Verus protocol using the new 'sendcurrency' API, which works for all currencies in the Verus network. Tokens can be used as reserve currencies for other currencies as well. Token launches can accept multiple other coins or tokens for conversion to the new token with payment to the token ID. Each token can have a different conversion price for pre-launch participation as well as minimums and maximums of participation. If minimums are not met by the currency's startblock, all participation will be refunded, less a minimal transfer/network fee, which was already allocated to miners/stakers.Tokens can be controlled by the blockchain and used for many purposes, including payment models, tickets, point systems, etc., or they can be partially blockchain controlled, centralized tokens, with currencies that are mintable at any time by the ID behind them. The controlling ID can also receive receive aggregated outgoing transactions to external systems that both burn coins and pass account data in the process. This will allow applications to control currency supplies on the public network, whether these applications are external, decentralized networks or centralized custodial systems, in many typical use cases of tokens, including club coins, game tokens, token launches, etc., no programming is required.## Defining a Currency",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What are some use cases for tokens in Verus?",
            "Tokens in Verus can be used for various purposes, including payment models, tickets, point systems, and more. They can be controlled by the blockchain or be partially blockchain-controlled, centralized tokens, with currencies that are mintable at any time by the ID behind them. Tokens can also be used for club coins, game tokens, token launches, and other typical use cases, without requiring programming.",
            "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted text file. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV /Downloads/Verus-CLI-Linux-v0.6.5-2-amd64/Verus-CLI-Linux-v0.6.5-2-amd64.tar.gz ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation@\" AfeNDwABQR+hVp1D3jZymlkW4NrwdJbsh4jQDxxXf44WNf6QZoXY/UiU1WFy9RM+/pkCC1IQfCXF6I9ey3B/3DofrvzKKAsV 99d7451472bc1fb34359d17e524d7755defbd279b0c2569a67231f8b7a37f9ff ```**The result will be true if the signature is valid.** ``` true ``` This release is intended for use in the VRSCTEST only. Mainnet approved testnet release is not yet available## Notable Changes: - Check for creation of invalid staking transactions# Verus Testnet PBaaS Multi-currency TokensThe testnet supports a completely new capability of token definitions and token launches (Kickstarter/Gofundme style, ICO, ITO, IPO, etc.). These tokens can be sent through the Verus protocol using the new 'sendcurrency' API, which works for all currencies in the Verus network. Tokens can be used as reserve currencies for other currencies as well. Token launches can accept multiple other coins or tokens for conversion to the new token with payment to the token ID. Each token can have a different conversion price for pre-launch participation as well as minimums and maximums of participation. If minimums are not met by the currency's startblock, all participation will be refunded, less a minimal transfer/network fee, which was already allocated to miners/stakers.Tokens can be controlled by the blockchain and used for many purposes, including payment models, tickets, point systems, etc., or they can be partially blockchain controlled, centralized tokens, with currencies that are mintable at any time by the ID behind them. The controlling ID can also receive receive aggregated outgoing transactions to external systems that both burn coins and pass account data in the process. This will allow applications to control currency supplies on the public network, whether these applications are external, decentralized networks or centralized custodial systems, in many typical use cases of tokens, including club coins, game tokens, token launches, etc., no programming is required.## Defining a Currency",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "aef700e3-5d0b-4660-8a9a-d40e42deddaf"
]