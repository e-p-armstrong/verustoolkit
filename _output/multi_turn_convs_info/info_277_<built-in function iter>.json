[
    [
        [
            "What information does the `z_listreceivedbyaddress` command return about each transaction?",
            "The `z_listreceivedbyaddress` command returns the following information about each transaction:\n\n* `txid`: the transaction ID\n* `amount`: the amount of value in the note\n* `memo`: a hexadecimal string representation of the memo field\n* `jsindex` or `jsoutindex` or `outindex`: the joinsplit index or output index, depending on the type of transaction\n* `change`: a boolean indicating whether the address that received the note is also one of the sending addresses",
            "#### Result: ```json [           (json array of string)  \"zaddr\"      (string) a zaddr belonging to the wallet  ,... ] ``` Examples: ```bash > verus z_listaddresses > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listaddresses\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listoperationids` Returns the list of operation ids currently known to the wallet.#### Arguments: 1. \"status\"     (string, optional) Filter result by the operation's state e.g. \"success\".#### Result: ```json [           (json array of string)  \"operationid\"    (string) an operation id belonging to the wallet  ,... ] ``` Examples: ```bash > verus z_listoperationids > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listoperationids\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listreceivedbyaddress \"address\" ( minconf )` Return a list of amounts received by a zaddr belonging to the node's wallet.#### Arguments: 1. \"address\"   (string) The private address. 2. minconf     (numeric, optional, default=1) Only include transactions confirmed at least this many times.#### Result: ```json {  \"txid\": \"txid\",      (string) the transaction id  \"amount\": xxxxx,     (numeric) the amount of value in the note  \"memo\": xxxxx,      (string) hexadecimal string representation of memo field  \"jsindex\" (sprout) : n,   (numeric) the joinsplit index  \"jsoutindex\" (sprout) : n,   (numeric) the output index of the joinsplit  \"outindex\" (sapling) : n,   (numeric) the output index  \"change\": true|false,  (boolean) true if the address that received the note is also one of the sending addresses } ```Examples: ```bash > verus z_listreceivedbyaddress \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listreceivedbyaddress\", \"params\": [\"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What does the `z_listaddresses` command do in Verus, and how can I use it?",
            "The `z_listaddresses` command in Verus returns a list of zaddresses (a type of private address) belonging to the wallet. You can use this command by running `verus z_listaddresses` in the command line or by making a JSON-RPC request to `http://127.0.0.1:27486/` with the method `z_listaddresses` and no parameters.",
            "#### Result: ```json [           (json array of string)  \"zaddr\"      (string) a zaddr belonging to the wallet  ,... ] ``` Examples: ```bash > verus z_listaddresses > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listaddresses\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listoperationids` Returns the list of operation ids currently known to the wallet.#### Arguments: 1. \"status\"     (string, optional) Filter result by the operation's state e.g. \"success\".#### Result: ```json [           (json array of string)  \"operationid\"    (string) an operation id belonging to the wallet  ,... ] ``` Examples: ```bash > verus z_listoperationids > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listoperationids\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `z_listreceivedbyaddress \"address\" ( minconf )` Return a list of amounts received by a zaddr belonging to the node's wallet.#### Arguments: 1. \"address\"   (string) The private address. 2. minconf     (numeric, optional, default=1) Only include transactions confirmed at least this many times.#### Result: ```json {  \"txid\": \"txid\",      (string) the transaction id  \"amount\": xxxxx,     (numeric) the amount of value in the note  \"memo\": xxxxx,      (string) hexadecimal string representation of memo field  \"jsindex\" (sprout) : n,   (numeric) the joinsplit index  \"jsoutindex\" (sprout) : n,   (numeric) the output index of the joinsplit  \"outindex\" (sapling) : n,   (numeric) the output index  \"change\": true|false,  (boolean) true if the address that received the note is also one of the sending addresses } ```Examples: ```bash > verus z_listreceivedbyaddress \"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_listreceivedbyaddress\", \"params\": [\"ztfaW34Gj9FrnGUEf833ywDVL62NWXBM81u6EQnM6VR45eYnXhwztecW1SjxA7JrmAXKJhxhj3vDNEpVCQoSvVoSpmbhtjf\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "ec232ab3-6ffd-41ef-ba9c-162cabd46b29"
]