[
    [
        [
            "What are the main features of Verus version v0.7.1-3, and is it considered hardened for mainnet?",
            "Version v0.7.1-3 of Verus has several key features, including increased scale over previous versions, the ability to apply fractional and centralized attributes to a currency, and the introduction of currency burn functions. However, this version is not yet considered hardened for mainnet.",
            "# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies Version v0.7.1-3 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.# An end to front running Conversion will always be at the same rate as all conversions processed in one group of transactions. There is also no spread between the conversion to and from a currency. All transactions in a aggregation of import blocks, which will be detailed in later documentation, are simultaneously solved in all currency conversion directions and all converted at the same rate, all getting the same price in each direction as any person who may be exchanging in the other.There is a fee, 0.025% for conversions, 100% of which goes to miners and stakers. While it is not yet implemented, we also intend to add an implied volatility fee, which will be charged variably on imbalanced blocks of transactions, making blocks that change the price of a currency significantly pay more of an implied volatility fee, and ensuring that relatively volatile currency baskets offset any potential impermanent loss to liquidity providers risk with earnings from implied volatility fees. At the same time, currency baskets that are less volatile relative to the constituent currencies will typically have lower implied volatility fees and lower earnings for liquidity providers to offset a lower risk of impermanent loss.# The Best Way to Launch a Currency Currency launches with Kickstarter-like minimums to activate or, if not met, automatically refund, dynamic currency launch pricing, based on participation, pre-launch participation price discounts, pre-conversion reserve currency carveouts, and price-neutral launch pre-allocations, all specified in easy to understand commands and parameters, no programming necessary!",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the \"burn\" parameter in the \"sendcurrency\" API, and how does it affect the currency's supply?",
            "The \"burn\" parameter in the \"sendcurrency\" API allows a currency to be officially removed from its supply. If \"burn\" is set to 1, the currency sent (which must be a token or fractional currency) is removed from circulation. In the case of a fractional currency, this will increase the on-chain price for all holders, depending on the amount burned.",
            "# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies Version v0.7.1-3 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.# An end to front running Conversion will always be at the same rate as all conversions processed in one group of transactions. There is also no spread between the conversion to and from a currency. All transactions in a aggregation of import blocks, which will be detailed in later documentation, are simultaneously solved in all currency conversion directions and all converted at the same rate, all getting the same price in each direction as any person who may be exchanging in the other.There is a fee, 0.025% for conversions, 100% of which goes to miners and stakers. While it is not yet implemented, we also intend to add an implied volatility fee, which will be charged variably on imbalanced blocks of transactions, making blocks that change the price of a currency significantly pay more of an implied volatility fee, and ensuring that relatively volatile currency baskets offset any potential impermanent loss to liquidity providers risk with earnings from implied volatility fees. At the same time, currency baskets that are less volatile relative to the constituent currencies will typically have lower implied volatility fees and lower earnings for liquidity providers to offset a lower risk of impermanent loss.# The Best Way to Launch a Currency Currency launches with Kickstarter-like minimums to activate or, if not met, automatically refund, dynamic currency launch pricing, based on participation, pre-launch participation price discounts, pre-conversion reserve currency carveouts, and price-neutral launch pre-allocations, all specified in easy to understand commands and parameters, no programming necessary!",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How does the conversion process work in Verus, and what fees are associated with it?",
            "In Verus, all transactions in an aggregation of import blocks are simultaneously solved in all currency conversion directions and converted at the same rate, with no spread between the conversion to and from a currency. This means that all users exchanging currencies will get the same price in each direction. There is a fee of 0.025% for conversions, which goes entirely to miners and stakers. Additionally, an implied volatility fee is planned to be introduced, which will vary based on the imbalance of transactions in a block and will help offset the risk of impermanent loss for liquidity providers.",
            "# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies Version v0.7.1-3 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.# An end to front running Conversion will always be at the same rate as all conversions processed in one group of transactions. There is also no spread between the conversion to and from a currency. All transactions in a aggregation of import blocks, which will be detailed in later documentation, are simultaneously solved in all currency conversion directions and all converted at the same rate, all getting the same price in each direction as any person who may be exchanging in the other.There is a fee, 0.025% for conversions, 100% of which goes to miners and stakers. While it is not yet implemented, we also intend to add an implied volatility fee, which will be charged variably on imbalanced blocks of transactions, making blocks that change the price of a currency significantly pay more of an implied volatility fee, and ensuring that relatively volatile currency baskets offset any potential impermanent loss to liquidity providers risk with earnings from implied volatility fees. At the same time, currency baskets that are less volatile relative to the constituent currencies will typically have lower implied volatility fees and lower earnings for liquidity providers to offset a lower risk of impermanent loss.# The Best Way to Launch a Currency Currency launches with Kickstarter-like minimums to activate or, if not met, automatically refund, dynamic currency launch pricing, based on participation, pre-launch participation price discounts, pre-conversion reserve currency carveouts, and price-neutral launch pre-allocations, all specified in easy to understand commands and parameters, no programming necessary!",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What features are available for launching a currency in Verus, and do they require programming knowledge?",
            "Verus offers a range of features for launching a currency, including Kickstarter-like minimums to activate or automatically refund, dynamic currency launch pricing based on participation, pre-launch participation price discounts, pre-conversion reserve currency carveouts, and price-neutral launch pre-allocations. These features can be accessed through easy-to-understand commands and parameters, and do not require programming knowledge.",
            "# Enhancements to TestNet Protocols for Increased Scale, Currency Burn Functions, and Centralized Fractional Currencies Version v0.7.1-3 is not yet considered hardened for mainnet, but has increased scale over previous versions in addition to the ability to apply both fractional and centralized attributes to a currency. This allows price neutral minting by the currency controller through automatic reductions of the reserve ratio of all currencies. This version also enables a new parameter to the \"sendcurrency\" API called \"burn\". If \"burn\" is set to 1, a currency sent, which must be a token or fractional currency is officially removed from that currency's supply. In the case of a fractional currency, this will have the effect of increasing the on-chain price for all holders, depending on the amount burned.# An end to front running Conversion will always be at the same rate as all conversions processed in one group of transactions. There is also no spread between the conversion to and from a currency. All transactions in a aggregation of import blocks, which will be detailed in later documentation, are simultaneously solved in all currency conversion directions and all converted at the same rate, all getting the same price in each direction as any person who may be exchanging in the other.There is a fee, 0.025% for conversions, 100% of which goes to miners and stakers. While it is not yet implemented, we also intend to add an implied volatility fee, which will be charged variably on imbalanced blocks of transactions, making blocks that change the price of a currency significantly pay more of an implied volatility fee, and ensuring that relatively volatile currency baskets offset any potential impermanent loss to liquidity providers risk with earnings from implied volatility fees. At the same time, currency baskets that are less volatile relative to the constituent currencies will typically have lower implied volatility fees and lower earnings for liquidity providers to offset a lower risk of impermanent loss.# The Best Way to Launch a Currency Currency launches with Kickstarter-like minimums to activate or, if not met, automatically refund, dynamic currency launch pricing, based on participation, pre-launch participation price discounts, pre-conversion reserve currency carveouts, and price-neutral launch pre-allocations, all specified in easy to understand commands and parameters, no programming necessary!",
            "./raw_txt_input/release_notes.md"
        ]
    ],
    "will",
    "be",
    "replaced",
    "07517150-2777-447d-86d6-41e0e930cef3"
]