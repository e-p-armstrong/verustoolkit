[
    "How can I use the `kvsearch` command in Verus?",
    "You can use the `kvsearch` command in Verus by running the following command in your terminal:\n```\nverus kvsearch <key>\n```\nReplace `<key>` with the key you want to search for.\n\nAlternatively, you can use the JSON-RPC interface by sending a POST request to `http://127.0.0.1:27486/` with the following JSON data:\n```json\n{\n  \"jsonrpc\": \"1.0\",\n  \"id\": \"curltest\",\n  \"method\": \"kvsearch\",\n  \"params\": [<key>]\n}\n```\nYou can use the `curl` command to send the request:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [<key>] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "#### Result: ``` \"data\"      (string) A string that is a serialized, hex-encoded data for the proof. ```### `gettxoutsetinfo` Returns statistics about the unspent transaction output set. Note this call may take some time.#### Result: ```json {  \"height\":n,         (numeric) The current block height (index)  \"bestblock\": \"hex\",     (string) the best block hash hex  \"transactions\": n,      (numeric) The number of transactions  \"txouts\": n,         (numeric) The number of output transactions  \"bytes_serialized\": n,    (numeric) The serialized size  \"hash_serialized\": \"hash\",  (string) The serialized hash  \"total_amount\": x.xxx    (numeric) The total amount } ``` Examples: ```bash > verus gettxoutsetinfo > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"gettxoutsetinfo\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `kvsearch key` Search for a key stored via the kvupdate command. This feature is only available for asset chains.#### Arguments: ``` 1. key           (string, required) search the chain for this key ``` #### Result: ```json {  \"coin\": \"xxxxx\",     (string) chain the key is stored on  \"currentheight\": xxxxx,  (numeric) current height of the chain  \"key\": \"xxxxx\",      (string) key  \"keylen\": xxxxx,     (string) length of the key  \"owner\": \"xxxxx\"     (string) hex string representing the owner of the key  \"height\": xxxxx,     (numeric) height the key was stored at  \"expiration\": xxxxx,   (numeric) height the key will expire  \"flags\": x        (numeric) 1 if the key was created with a password; 0 otherwise.  \"value\": \"xxxxx\",     (string) stored value  \"valuesize\": xxxxx    (string) amount of characters stored } ``` Examples: ```bash > verus kvsearch examplekey > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"kvsearch\", \"params\": [examplekey] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]