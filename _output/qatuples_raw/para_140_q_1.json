[
    "What information can you expect to find in the JSON object returned by the `decoderawtransaction` command?",
    "The JSON object returned by the `decoderawtransaction` command contains various information about the transaction, including:\n\n* `txid`: the transaction ID\n* `overwintered`: a boolean indicating whether the transaction is Overwintered\n* `version`: the transaction version\n* `versiongroupid`: the version group ID (only present for Overwintered transactions)\n* `locktime`: the lock time\n* `expiryheight`: the last valid block height for mining the transaction (only present for Overwintered transactions)\n* `vin`: an array of input transactions, each containing `txid`, `vout`, `scriptSig`, and `sequence` information\n* `vout`: an array of output transactions, each containing `value`, `n`, and `scriptPubKey` information\n* `vjoinsplit`: an array of join-split transactions (only present for transactions with version >= 2), each containing information about the public input and output values, anchor, nullifiers, commitments, onetime public key, random seed, MACs, proof, and ciphertexts.",
    "### `decoderawtransaction \"hexstring\"` Return a JSON object representing the serialized, hex-encoded transaction.#### Arguments: 1. \"hex\"   (string, required) The transaction hex string#### Result: ```json {  \"txid\" : \"id\",    (string) The transaction id  \"overwintered\" : bool  (boolean) The Overwintered flag  \"version\" : n,     (numeric) The version  \"versiongroupid\": \"hex\"  (string, optional) The version group id (Overwintered txs)  \"locktime\" : ttt,    (numeric) The lock time  \"expiryheight\" : n,   (numeric, optional) Last valid block height for mining transaction (Overwintered txs)  \"vin\" : [        (array of json objects)   {    \"txid\": \"id\",  (string) The transaction id    \"vout\": n,     (numeric) The output number    \"scriptSig\": {   (json object) The script     \"asm\": \"asm\", (string) asm     \"hex\": \"hex\"  (string) hex    },    \"sequence\": n   (numeric) The script sequence number   }   ,...  ],  \"vout\" : [       (array of json objects)   {    \"value\" : x.xxx,      (numeric) The value in VRSC    \"n\" : n,          (numeric) index    \"scriptPubKey\" : {     (json object)     \"asm\" : \"asm\",     (string) the asm     \"hex\" : \"hex\",     (string) the hex     \"reqSigs\" : n,      (numeric) The required sigs     \"type\" : \"pubkeyhash\", (string) The type, eg 'pubkeyhash'     \"addresses\" : [      (json array of string)      \"RTZMZHDFSTFQst8XmX2dR4DaH87cEUs3gC\"  (string) komodo address      ,...     ]    }   }   ,...  ],  \"vjoinsplit\" : [    (array of json objects, only for version >= 2)   {    \"vpub_old\" : x.xxx,     (numeric) public input value in KMD    \"vpub_new\" : x.xxx,     (numeric) public output value in KMD    \"anchor\" : \"hex\",     (string) the anchor    \"nullifiers\" : [      (json array of string)     \"hex\"           (string) input note nullifier     ,...    ],    \"commitments\" : [      (json array of string)     \"hex\"           (string) output note commitment     ,...    ],    \"onetimePubKey\" : \"hex\", (string) the onetime public key used to encrypt the ciphertexts    \"randomSeed\" : \"hex\",   (string) the random seed    \"macs\" : [         (json array of string)     \"hex\"           (string) input note MAC     ,...    ],    \"proof\" : \"hex\",     (string) the zero-knowledge proof    \"ciphertexts\" : [      (json array of string)     \"hex\"           (string) output note ciphertext ",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]