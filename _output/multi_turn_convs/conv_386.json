[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to help with any questions you might have about Verus. What's on your mind today?\n\n**User:**\nI'm trying to understand some of the commands in Verus. Specifically, what is the purpose of the `getaddresstxids` command?\n\n**AI Assistant:**\nThe `getaddresstxids` command is used to retrieve a list of transaction IDs associated with a specific address or set of addresses. This command requires the addressindex to be enabled. It's a useful tool for tracking transactions related to a particular address.\n\n**User:**\nThat makes sense. How do I actually use the `getaddresstxids` command to retrieve transaction IDs for a specific address?\n\n**AI Assistant:**\nYou can use the `getaddresstxids` command by providing a JSON object with an \"addresses\" property containing an array of base58check encoded addresses. For example, you can use the following command:\n```\nverus getaddresstxids '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}'\n```\nAlternatively, you can use the JSON-RPC interface:\n```\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddresstxids\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```\nJust replace `RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87` with the address you're interested in, and you'll get a list of transaction IDs associated with that address. Do you have any more questions about `getaddresstxids` or Verus in general?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the purpose of the `getaddresstxids` command in Verus?",
            "The `getaddresstxids` command is used to retrieve a list of transaction IDs associated with a specific address or set of addresses. This command requires the addressindex to be enabled.",
            "#### Arguments: ```json {  \"addresses\"   [    \"address\" (string) The base58check encoded address    ,...   ]  \"start\" (number) The start block height  \"end\" (number) The end block height } ``` #### Result: ```json [  \"transactionid\" (string) The transaction id  ,... ] ``` Examples: ```bash > verus getaddresstxids '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddresstxids\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getaddressutxos` Returns all unspent outputs for an address (requires addressindex to be enabled).#### Arguments: ```json {  \"addresses\"   [    \"address\" (string) The base58check encoded address    ,...   ],  \"chainInfo\" (boolean) Include chain info with results  \"friendlynames\" (boolean) Include additional array of friendly names keyed by currency i-addresses  \"verbosity\"  (number) (default == 0), if 1, include output information for spends, including all reserve amounts and destinations } ``` #### Result: ```json [  {   \"address\" (string) The address base58check encoded   \"txid\" (string) The output txid   \"height\" (number) The block height   \"outputIndex\" (number) The output index   \"script\" (strin) The script hex encoded   \"satoshis\" (number) The number of satoshis of the output  } ] ``` Examples: ```bash > verus getaddressutxos '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressutxos\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getsnapshot` Returns a snapshot of (address,amount) pairs at current height (requires addressindex to be enabled).#### Arguments:  \"top\" (number, optional) Only return this many addresses, i.e. top N richlist",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "How do I use the `getaddresstxids` command to retrieve transaction IDs for a specific address?",
            "You can use the `getaddresstxids` command by providing a JSON object with an \"addresses\" property containing an array of base58check encoded addresses. For example:\n\n```bash\nverus getaddresstxids '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}'\n```\n\nAlternatively, you can use the JSON-RPC interface:\n\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddresstxids\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
            "#### Arguments: ```json {  \"addresses\"   [    \"address\" (string) The base58check encoded address    ,...   ]  \"start\" (number) The start block height  \"end\" (number) The end block height } ``` #### Result: ```json [  \"transactionid\" (string) The transaction id  ,... ] ``` Examples: ```bash > verus getaddresstxids '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddresstxids\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getaddressutxos` Returns all unspent outputs for an address (requires addressindex to be enabled).#### Arguments: ```json {  \"addresses\"   [    \"address\" (string) The base58check encoded address    ,...   ],  \"chainInfo\" (boolean) Include chain info with results  \"friendlynames\" (boolean) Include additional array of friendly names keyed by currency i-addresses  \"verbosity\"  (number) (default == 0), if 1, include output information for spends, including all reserve amounts and destinations } ``` #### Result: ```json [  {   \"address\" (string) The address base58check encoded   \"txid\" (string) The output txid   \"height\" (number) The block height   \"outputIndex\" (number) The output index   \"script\" (strin) The script hex encoded   \"satoshis\" (number) The number of satoshis of the output  } ] ``` Examples: ```bash > verus getaddressutxos '{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getaddressutxos\", \"params\": [{\"addresses\": [\"RY5LccmGiX9bUHYGtSWQouNy1yFhc5rM87\"]}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getsnapshot` Returns a snapshot of (address,amount) pairs at current height (requires addressindex to be enabled).#### Arguments:  \"top\" (number, optional) Only return this many addresses, i.e. top N richlist",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ]
]