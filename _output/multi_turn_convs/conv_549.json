[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey there! I'm here to help you understand Verus. What's on your mind today?\n\n**User:**\nI'm trying to create a new currency or chain and I'm not sure what the `proofprotocol` option does. Can you explain it?\n\n**AI Assistant:**\nThe `proofprotocol` option specifies the type of proof protocol used for minting and burning currencies. There are several options:\n\n* `PROOF_PBAASMMR` (1): Verus MMR proof, no notaries required.\n* `PROOF_CHAINID` (2): Chain ID is the sole notary for proof, no evidence required.\n* `PROOF_ETHNOTARIZATION` (3): Ethereum notarization and PATRICIA TRIE proof.\n\nThis option determines how the proof of ownership is handled for your new currency or chain. Do you have any other questions about this option or Verus in general?\n\n**User:**\nAnother question. What is the `expiryheight` option used for when defining a new transaction?\n\n**AI Assistant:**\nThe `expiryheight` option specifies the block height at which the transaction expires. If not specified, it defaults to the current block height plus 20. This option allows you to set a specific point in time when the transaction will no longer be valid. Do you have any more questions about Verus transactions?\n\n**User:**\nI have one more question. What is the purpose of the `notarizationprotocol` option when defining a new currency or chain?\n\n**AI Assistant:**\nThe `notarizationprotocol` option specifies the protocol used for notarization. If set to 2, the currency can be minted by whoever controls the ID. This option determines how notarization is handled for your new currency or chain. Do you have any more questions about Verus or its options?",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What does the `proofprotocol` option specify when defining a new currency or chain?",
            "The `proofprotocol` option specifies the type of proof protocol used for minting and burning currencies. There are several options:\n\n* `PROOF_PBAASMMR` (1): Verus MMR proof, no notaries required.\n* `PROOF_CHAINID` (2): Chain ID is the sole notary for proof, no evidence required.\n* `PROOF_ETHNOTARIZATION` (3): Ethereum notarization and PATRICIA TRIE proof.",
            "n mint/burn & change weights                          3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                        full understanding + C++, JavaScript & Solidity dev(s))  \"notarizationprotocol\" : n,   (int, optional) if 2, currency can be minted by whoever controls the ID                          1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                          2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                          3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof  \"expiryheight\" : n,       (int, optional) block height at which the transaction expires, default: curheight + 20  \"startblock\"  : n,       (int, optional) VRSC block must be notarized into block 1 of PBaaS chain, default curheight + 100  \"endblock\"   : n,       (int, optional) chain or currency intended to end life after this height, 0 = no end  \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies backing this chain in equal amounts  \"weights\"    : \"[\"xx.xx\",..]\",(list, optional) the weight of each reserve currency in a fractional currency  \"conversions\"  : \"[\"xx.xx\",..]\",(list, optional) if present, must be same size as currencies. pre-launch conversion ratio overrides  \"minpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) must be same size as currencies. minimum in each currency to launch  \"maxpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) maximum in each currency allowed  \"initialcontributions\" : \"[\"xx.xx\",..]\", (list, optional) initial contribution in each currency  \"prelaunchdiscount\" : \"xx.xx\"  (value, optional) for fractional reserve currencies less than 100%, discount on final price at launch  \"initialsupply\" : \"xx.xx\"    (value, required for fractional) supply after conversion of contributions, before preallocation  \"prelaunchcarveout\" : \"0.xx\",  (value, optional) identities and % of pre-converted amounts from each reserve currency  \"preallocations\" : \"[{\"identity\":xx.xx}..]\", (list, optional) list of identities and amounts from pre-allocation  \"gatewayconvertername\" : \"name\", (string, optional) if this is a PBaaS chain, this names a co-launched gateway converter currency  \"blocktime\"     : n,    (int, optional) target time in seconds to average between blocks (default 60 seconds)  \"powaveragingwindow\" : n,    (int, optional) total number of blocks to look back when averaging for DAA (default 45 blocks)  \"notarizationperio",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the `expiryheight` option used for when defining a new transaction?",
            "The `expiryheight` option specifies the block height at which the transaction expires. If not specified, it defaults to the current block height plus 20.",
            "n mint/burn & change weights                          3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                        full understanding + C++, JavaScript & Solidity dev(s))  \"notarizationprotocol\" : n,   (int, optional) if 2, currency can be minted by whoever controls the ID                          1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                          2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                          3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof  \"expiryheight\" : n,       (int, optional) block height at which the transaction expires, default: curheight + 20  \"startblock\"  : n,       (int, optional) VRSC block must be notarized into block 1 of PBaaS chain, default curheight + 100  \"endblock\"   : n,       (int, optional) chain or currency intended to end life after this height, 0 = no end  \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies backing this chain in equal amounts  \"weights\"    : \"[\"xx.xx\",..]\",(list, optional) the weight of each reserve currency in a fractional currency  \"conversions\"  : \"[\"xx.xx\",..]\",(list, optional) if present, must be same size as currencies. pre-launch conversion ratio overrides  \"minpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) must be same size as currencies. minimum in each currency to launch  \"maxpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) maximum in each currency allowed  \"initialcontributions\" : \"[\"xx.xx\",..]\", (list, optional) initial contribution in each currency  \"prelaunchdiscount\" : \"xx.xx\"  (value, optional) for fractional reserve currencies less than 100%, discount on final price at launch  \"initialsupply\" : \"xx.xx\"    (value, required for fractional) supply after conversion of contributions, before preallocation  \"prelaunchcarveout\" : \"0.xx\",  (value, optional) identities and % of pre-converted amounts from each reserve currency  \"preallocations\" : \"[{\"identity\":xx.xx}..]\", (list, optional) list of identities and amounts from pre-allocation  \"gatewayconvertername\" : \"name\", (string, optional) if this is a PBaaS chain, this names a co-launched gateway converter currency  \"blocktime\"     : n,    (int, optional) target time in seconds to average between blocks (default 60 seconds)  \"powaveragingwindow\" : n,    (int, optional) total number of blocks to look back when averaging for DAA (default 45 blocks)  \"notarizationperio",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ],
        [
            "What is the purpose of the `notarizationprotocol` option when defining a new currency or chain?",
            "The `notarizationprotocol` option specifies the protocol used for notarization. If set to 2, the currency can be minted by whoever controls the ID.",
            "n mint/burn & change weights                          3 = PROOF_ETHNOTARIZATION - ETH & PATRICIA TRIE proof (do not attempt without                                        full understanding + C++, JavaScript & Solidity dev(s))  \"notarizationprotocol\" : n,   (int, optional) if 2, currency can be minted by whoever controls the ID                          1 = PROOF_PBAASMMR - Verus MMR proof, no notaries required                          2 = PROOF_CHAINID - chain ID is sole notary for proof, no evidence required                          3 = PROOF_ETHNOTARIZATION - Ethereum notarization & PATRICIA TRIE proof  \"expiryheight\" : n,       (int, optional) block height at which the transaction expires, default: curheight + 20  \"startblock\"  : n,       (int, optional) VRSC block must be notarized into block 1 of PBaaS chain, default curheight + 100  \"endblock\"   : n,       (int, optional) chain or currency intended to end life after this height, 0 = no end  \"currencies\"  : \"[\"VRSC\",..]\", (list, optional) reserve currencies backing this chain in equal amounts  \"weights\"    : \"[\"xx.xx\",..]\",(list, optional) the weight of each reserve currency in a fractional currency  \"conversions\"  : \"[\"xx.xx\",..]\",(list, optional) if present, must be same size as currencies. pre-launch conversion ratio overrides  \"minpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) must be same size as currencies. minimum in each currency to launch  \"maxpreconversion\" : \"[\"xx.xx\",..]\", (list, optional) maximum in each currency allowed  \"initialcontributions\" : \"[\"xx.xx\",..]\", (list, optional) initial contribution in each currency  \"prelaunchdiscount\" : \"xx.xx\"  (value, optional) for fractional reserve currencies less than 100%, discount on final price at launch  \"initialsupply\" : \"xx.xx\"    (value, required for fractional) supply after conversion of contributions, before preallocation  \"prelaunchcarveout\" : \"0.xx\",  (value, optional) identities and % of pre-converted amounts from each reserve currency  \"preallocations\" : \"[{\"identity\":xx.xx}..]\", (list, optional) list of identities and amounts from pre-allocation  \"gatewayconvertername\" : \"name\", (string, optional) if this is a PBaaS chain, this names a co-launched gateway converter currency  \"blocktime\"     : n,    (int, optional) target time in seconds to average between blocks (default 60 seconds)  \"powaveragingwindow\" : n,    (int, optional) total number of blocks to look back when averaging for DAA (default 45 blocks)  \"notarizationperio",
            "./raw_txt_input/clifaq-02_verus_commands.md"
        ]
    ]
]