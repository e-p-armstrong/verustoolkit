[
    "## Conversation that answers the provided questions:\n**AI Assistant:**\nHey! I'm here to help with any Verus-related questions you might have. What's on your mind today?\n\n**User:**\nI've been looking into the Verus network, and I came across the concept of a fractal model. Can you explain what that means, and how it relates to the number of blockchains that can operate simultaneously?\n\n**AI Assistant:**\nThe fractal model in the Verus network refers to the ability of the network to support an unlimited number of simultaneously operating, interoperable blockchains. This means that there is no limit to the number of blockchains that can continuously operate and interoperate on the Verus network, with all features and currencies of the public chain but none of the access. While there is some overhead for cross notarization, the fractal model enables this scalability. Does that make sense?\n\n**User:**\nThat's really interesting. I also had a question about IDs on the Verus network. How can I lock an ID, and what are the implications of doing so?\n\n**AI Assistant:**\nYou can lock an ID on the Verus network using the `setidentitytimelock` command, which allows you to set a time lock or time delay for an ID. A locked identity cannot revoke itself, and revoking an identity will clear its locked status, regardless of time delay or unlock height. That's a pretty useful feature for added security!\n\n**User:**\nI've been exploring the Verus API as well. Can you explain the purpose of the `getcurrencyconverters` API, and how I can use it to retrieve information about currencies on the Verus network?\n\n**AI Assistant:**\nThe `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API to retrieve information about currencies on the Verus network, for example, to find all currencies that have a specific market (e.g., BTC/ETH) at or above the liquidity threshold. It's a handy tool for exploring the currencies available on the network!\n\n**User:**\nOne last question: how can I send and convert funds on the Verus network using the `sendcurrency` API?\n\n**AI Assistant:**\nThe `sendcurrency` API can be used to send and convert funds on the Verus network. You can use this API to send funds from a single address or all private wallet funds to one or multiple recipients, convert funds to a fractional basket currency, or convert funds to another reserve currency through a fractional currency. The API also allows you to preconvert funds to a new currency before it is active. It's a versatile tool for managing your funds on the network!",
    "AI Assistant",
    "",
    "N/A",
    [
        [
            "What is the concept of a fractal model in the Verus network, and how does it relate to the number of blockchains that can operate simultaneously?",
            "The fractal model in the Verus network refers to the ability of the network to support an unlimited number of simultaneously operating, interoperable blockchains. This means that there is no limit to the number of blockchains that can continuously operate and interoperate on the Verus network, with all features and currencies of the public chain but none of the access. While there is some overhead for cross notarization, the fractal model enables this scalability.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I lock an ID on the Verus network, and what are the implications of locking an ID?",
            "You can lock an ID on the Verus network using the `setidentitytimelock` command, which allows you to set a time lock or time delay for an ID. A locked identity cannot revoke itself, and revoking an identity will clear its locked status, regardless of time delay or unlock height.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "What is the purpose of the `getcurrencyconverters` API, and how can I use it to retrieve information about currencies on the Verus network?",
            "The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves. You can use this API to retrieve information about currencies on the Verus network, for example, to find all currencies that have a specific market (e.g., BTC/ETH) at or above the liquidity threshold.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ],
        [
            "How can I send and convert funds on the Verus network using the `sendcurrency` API?",
            "The `sendcurrency` API can be used to send and convert funds on the Verus network. You can use this API to send funds from a single address or all private wallet funds to one or multiple recipients, convert funds to a fractional basket currency, or convert funds to another reserve currency through a fractional currency. The API also allows you to preconvert funds to a new currency before it is active.",
            "te network and back, with all features and currencies of the public chain but none of the access. There is no limit on the number of blockchains that may continuously operate and interoperate on the Verus network. While there is some overhead for cross notarization, the model for the Verus blockchain network is fractal, enabling an unlimited number of simultaneously operating, interoperable blockchains. #### Locking and Unlocking IDs - **Time Lock:**  The unlockatblock parameter defines the unlock height of the identity. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"unlockatblock\": <Unlock block height>}' ``` - **Time Delay:**  The setunlockdelay parameter defines how many blocks to delay an ID's unlock when the flags are set back to an unlocked state. ``` verus -chain=VRSCTEST setidentitytimelock \"id@\" '{\"setunlockdelay\": <Unlock block delay>}' ``` - Revoking an identity will clear its locked status, regardless of time delay or unlock height. - A locked identity cannot revoke itself. ### Conversion Queries The `getcurrencyconverters` API retrieves all currencies that have at least 1000 VRSC in reserve, are greater than 10% VRSC reserve ratio, and have all listed currencies as reserves - **E.g. BTC ETH:** ``` verus -chain=VRSCTEST getcurrencyconverters btc eth ``` Will return all currencies that have btc/eth markets at or above the liquidity threshold.#### Sending and Converting Currency **Warning: All testnet coins/currencies have no value and will disappear whenever VRSCTEST is reset**The `sendcurrency` API can be used to send and convert funds. - **Sending VRSCTEST from a single address (bob@) to a single recipient (alice@):** ``` verus -chain=VRSCTEST sendcurrency \"bob@\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@\",\"amount\":10}]' ``` - **Sending VRSCTEST from all private wallet funds to two recipients with friendly-name z-addresses (alice@:private and bob@:private):** ``` verus -chain=VRSCTEST sendcurrency \"*Z\" '[{\"currency\":\"vrsctest\",\"address\":\"alice@:private\",\"amount\":10},{\"currency\":\"VRSCTEST\",\"address\":\"bob@:private\",\"amount\":10}]' ``` - **Converting VRSCTEST to a fractional basket currency, VRSC-BTC using IDs as a funding source:** ``` verus -chain=VRSCTEST sendcurrency \"*i\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"VRSC-BTC\"}]' ``` - **Converting VRSCTEST to another reserve, BTC through a fractional currency, VRSC-BTC:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"bob@\",\"amount\":10, \"convertto\":\"BTC\",\"via\":\"VRSC-BTC\"}]' ``` - **Preconverting to new currency, NEWCOIN, before it is active:** ``` verus -chain=VRSCTEST sendcurrency \"*\" '[{\"address\":\"alice@\",\"amount\":10, \"convertto\":\"NEWCOIN\", \"preconvert\":true, \"refund",
            "./raw_txt_input/release_notes.md"
        ]
    ]
]