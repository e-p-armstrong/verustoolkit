[
    "How can I verify a digital signature for a file using the `verifyfile` command?",
    "You can verify a digital signature for a file using the `verifyfile` command by running the following command:\n```\nverus verifyfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"filepath/filename\"\n```\nThis command will verify the digital signature \"signature\" for the file \"filepath/filename\" using the public key associated with the address \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\".",
    "\"  \"signature\":\"base64sig\"                   (string) The aggregate signature of the message or mmrroot encoded in base 64 if all or partial signing successful for MMR, it is of root  \"\"}``` #### Examples Create the signature ```bash > verus signdata '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}' ``` Verify the signature ```bash > verus verifydata '{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\", \"signature\":\"base64sig\"}' ``` As json rpc ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signdata\", \"params\": ['{\"identity\":\"Verus Coin Foundation.vrsc@\", \"message\":\"hello world\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `signfile \"address or identity\" \"filepath/filename\" \"curentsig\"` Generates a SHA256D hash of the file, returns the hash, and signs the hash with the private key specified#### Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity to use for signing. 2. \"filename\"    (string, required) Local file to sign 2. \"cursig\"     (string) The current signature of the message encoded in base 64 if multisig ID#### Result: ```json {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } ```Examples:Create the signature ```bash > verus signfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"filepath/filename\" ``` Verify the signature ```bash > verus verifyfile \"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\" \"signature\" \"filepath/filename\" ``` As json rpc ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"signfile\", \"params\": [\"RD6GgnrMpPaTSMn8vai6yiGA7mN4QGPV\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `signmessage \"address or identity\" \"message\" \"curentsig\"` Sign a message with the private key of a t-addr or the authorities present in this wallet for an identity#### Arguments: 1. \"t-addr or identity\"    (string, required) The transparent address or identity to use for signing. 2. \"message\"          (string, required) The message to create a signature of. 2. \"cursig\"          (string) The current signature of the message encoded in base 64 if multisig ID#### Result: ```json {  \"hash\":\"hexhash\"     (string) The hash of the message (SHA256, NOT SHA256D)  \"signature\":\"base64sig\" (string) The aggregate signature of the message encoded in base 64 if all or partial signing successful } ``` Examples:",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]