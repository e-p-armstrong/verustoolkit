[
    "What information does the `z_viewtransaction` command return about a transaction?",
    "The `z_viewtransaction` command returns a JSON object containing information about a transaction. This includes:\n\n1. `txid`: The transaction ID.\n2. `spends`: An array of objects, each describing a spend in the transaction, including the type of address, indices of the JSDescription and spend, previous transaction ID, and Zcash address involved.\n3. `outputs`: An array of objects, each describing an output in the transaction, including the type of address, indices of the JSDescription and output, Zcash address involved, value in VRSC and zatoshis, and a memo field.",
    "#### Result: ```json {  \"txid\" : \"transactionid\",  (string) The transaction id  \"spends\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsSpend\" : n,         (numeric, sprout) the index of the spend within the JSDescription    \"spend\" : n,          (numeric, sapling) the index of the spend within vShieldedSpend    \"txidPrev\" : \"transactionid\",  (string) The id for the transaction this note was created in    \"jsPrev\" : n,          (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutputPrev\" : n,       (numeric, sprout) the index of the output within the JSDescription    \"outputPrev\" : n,        (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"zcashaddress\",   (string) The Zcash address involved in the transaction    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis   }   ,...  ],  \"outputs\" : [   {    \"type\" : \"sprout|sapling\",   (string) The type of address    \"js\" : n,            (numeric, sprout) the index of the JSDescription within vJoinSplit    \"jsOutput\" : n,         (numeric, sprout) the index of the output within the JSDescription    \"output\" : n,          (numeric, sapling) the index of the output within the vShieldedOutput    \"address\" : \"zcashaddress\",   (string) The Zcash address involved in the transaction    \"recovered\" : true|false    (boolean, sapling) True if the output is not for an address in the wallet    \"value\" : x.xxx         (numeric) The amount in VRSC    \"valueZat\" : xxxx        (numeric) The amount in zatoshis    \"memo\" : \"hexmemo\",       (string) Hexademical string representation of the memo field    \"memoStr\" : \"memo\",       (string) Only returned if memo contains valid UTF-8 text.   }   ,...  ], } ```Examples: ```bash > verus z_viewtransaction \"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\" > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"z_viewtransaction\", \"params\": [\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `zcbenchmark benchmarktype samplecount` Runs a benchmark of the selected type samplecount times, returning the running times of each sample.",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]