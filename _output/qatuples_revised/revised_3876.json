[
    "How can I update an identity using the Verus command line?",
    "You can update an identity using the `updateidentity` command. Here's an example:\n```bash\nverus updateidentity '{\"name\" : \"myname\"}'\n```\nThis command updates the identity with a new name, \"myname\". You can also use JSON-RPC to update an identity, like this:\n```bash\ncurl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": [{\"name\" : \"myname\"}] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/\n```",
    "Examples: ```bash > verus updateidentity '{\"name\" : \"myname\"}' > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"updateidentity\", \"params\": ['{\"name\" : \"myname\"}'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `verifyfile \"address or identity\" \"signature\" \"filepath/filename\" \"checklatest\"` Verify a signed file#### Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the file. 2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signfile). 3. \"filename\"      (string, required) The file, which must be available locally to the daemon and that was signed. 3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result: true|false  (boolean) If the signature is verified or not.Examples: Create the signature ```bash > verus signfile \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"filepath/filename\" ``` Verify the signature ```bash > verus verifyfile \"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\" \"signature\" \"filepath/filename\" ``` As json rpc ```bash > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"verifyfile\", \"params\": [\"RNKiEBduBru6Siv1cZRVhp4fkZNyPska6z\", \"signature\", \"filepath/filename\"] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `verifyhash \"address or identity\" \"signature\" \"hexhash\" \"checklatest\"` Verify a signed message#### Arguments: 1. \"t-addr or identity\" (string, required) The transparent address or identity that signed the data. 2. \"signature\"     (string, required) The signature provided by the signer in base 64 encoding (see signmessage/signfile). 3. \"hexhash\"      (string, required) Hash of the message or file that was signed. 3. \"checklatest\"    (bool, optional)  If true, checks signature validity based on latest identity. defaults to false, which determines validity of signing height stored in signature.#### Result: true|false  (boolean) If the signature is verified or not.Examples:",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]