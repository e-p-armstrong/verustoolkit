[
    "How do I use the `prioritisetransaction` command to adjust the priority of a transaction?",
    "You can use the `prioritisetransaction` command by running `verus prioritisetransaction \"txid\" priority_delta fee_delta` or by making a JSON-RPC request with the method `prioritisetransaction` and arguments `txid`, `priority_delta`, and `fee_delta`. Replace `txid` with the ID of the transaction to modify, `priority_delta` with the change in priority to apply, and `fee_delta` with the change in fee to apply.",
    "#### Arguments: ``` 1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window. 2. height   (numeric, optional, default=-1) To estimate at the time of the given height. ``` #### Result: ``` x       (numeric) Solutions per second estimated ``` Examples: ```bash > verus getnetworkhashps > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworkhashps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `getnetworksolps ( blocks height )` Returns the estimated network solutions per second based on the last n blocks. Pass in [blocks] to override # of blocks, -1 specifies over difficulty averaging window. Pass in [height] to estimate the network speed at the time when a certain block was found.#### Arguments: ``` 1. blocks   (numeric, optional, default=120) The number of blocks, or -1 for blocks over difficulty averaging window. 2. height   (numeric, optional, default=-1) To estimate at the time of the given height. ``` #### Result: ``` x       (numeric) Solutions per second estimated ``` Examples: ```bash > verus getnetworksolps > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"getnetworksolps\", \"params\": [] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```### `prioritisetransaction <txid> <priority delta> <fee delta>` Accepts the transaction into mined blocks at a higher (or lower) priority#### Arguments: ``` 1. \"txid\"     (string, required) The transaction id. 2. priority delta (numeric, required) The priority to add or subtract.          The transaction selection algorithm considers the tx as it would have a higher priority.          (priority of a transaction is calculated: coinage * value_in_satoshis / txsize) 3. fee delta   (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).          The fee is not actually paid, only the algorithm for selecting transactions into a block          considers the transaction as it would have paid a higher (or lower) fee. ``` #### Results: ``` true       (boolean) Returns true ``` Examples: ```bash > verus prioritisetransaction \"txid\" 0.0 10000 > curl --user myusername --data-binary '{\"jsonrpc\": \"1.0\", \"id\":\"curltest\", \"method\": \"prioritisetransaction\", \"params\": [\"txid\", 0.0, 10000] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/ ```",
    "./raw_txt_input/clifaq-02_verus_commands.md"
]