[
    "How do I use the `verifyfile` command to verify a downloaded package?",
    "You can use the `verifyfile` command with the following format:\n\n```\n./verus verifyfile \"Verus Coin Foundation Releases@\" \"signature\" \"path/to/downloaded/file\"\n```\n\nReplace \"Verus Coin Foundation Releases@\" with the identity of the signer, \"signature\" with the actual signature, and \"path/to/downloaded/file\" with the path to the downloaded file.",
    "## Verifying Downloads A txt file containing the signer, standard sha256 file checksum, and signature, is included for each download. These packages have been signed with the identity \"Verus Coin Foundation Releases@\". 1) Extract downloaded archive 2) Verify signature for the extracted archive using the extracted text file. 3) Extract archive to desired directory ### CLI examples **Verifying file directly** ``` ./verus verifyfile \"Verus Coin Foundation Releases@\" \"AYUoIQABQR8xuMk0N7mT6KmiXJ5VKJnZR27+udobzfV0DTlb5S98KC5mYJRITYBta+vRvYtKF2EUCaPdQZsa+pMSawjEflRN\" \"/Downloads/Verus-CLI-Linux-v0.9.4-x86_64/Verus-CLI-Linux-v0.9.4-x86_64.tar.gz\" ``` **Verifying using a checksum** ``` ./verus verifyhash \"Verus Coin Foundation Releases@\" \"AYUoIQABQR8xuMk0N7mT6KmiXJ5VKJnZR27+udobzfV0DTlb5S98KC5mYJRITYBta+vRvYtKF2EUCaPdQZsa+pMSawjEflRN\" 8b2c32a13f1154a97644207076c6f73ef774c7897029b1f0d5018677645955b7 ```**The result will be true if the signature is valid.** ``` true ``` # Announcing v0.9.3, NON-MANDATORY FOR MAINNET -- MANDATORY FOR TESTNET USEThis release fixes one issue on mainnet where a node using -connect=\u201dnetworkaddress\u201d may still attempt to connect to other nodes.This update includes the first protocol release candidate for mainnet PBaaS, VerusID protocol upgrades, and Verus DeFi. In addition to some functional fixes and full web site support for mapped currencies and simple commands for mapping Verus currencies to any ERC20 currencies on Ethereum with provable, auditable 1:1 mapping and cross chain send/receive. In addition this new protocol upgrade changes some parameters of the Verus Proof of Power consensus algorithm, enabling smoother starts, restarts, and general operation of PBaaS chains, regardless of their native currency supply or emission schedule. As these consensus parameter changes would require either a testnet fork, which would not be relevant for the mainnet upgrade or a reset, accessing the v0.9.3 testnet requires that you reset your local testnet by deleting the vrsctest and pbaas data folders from the locations described below.",
    "./raw_txt_input/release_notes.md"
]