[
    [
        [
            "What is the significance of Z transactions for projects in the Komodo ecosystem, including Verus?",
            "Thanks to ZCash, Pirate, Komodo, and Verus, all projects in the Komodo ecosystem can implement faster Z transactions, which provides more options for exchanges that support Z to Z transactions. This is useful for projects in the ecosystem.",
            "te coin transfers \u2014 much more compelling. So, thanks to ZCash, Pirate, Komodo, and Verus, all of the projects in the Komodo ecosystem have the ability to implement much faster Z transactions and we all have options for exchanges that support Z to Z. That\u2019s pretty useful.\nHaving done so much useful, foundational work, the Verus project\u2019s devs did something absolutely mind blowing with self-sovereign IDs. It is amazing to find a project of this size that has made such a significant leap in a capability as fundamental as IDs/addresses. Seriously, VerusIDs are amazing. Namespaces, revocability, and recoverability all at the protocol level.\nA brief summary of just some of the benefit here: a VerusID can be used to send and receive coins just as any other cryptocurrency address. But revocability and recoverability mean that a VerusID can be protected as well. After you set them up these features, if you lose the private keys for an ID, you can revoke access to it and also recover access by associating that ID with a different private key. This is a sea change in how cryptocurrency addressing works and a big step forward for the whole space.\nI\u2019m not an expert on blockchain IDs but I don\u2019t know of any other project that has such an elegant, capable solution. And to tease a single feature that\u2019s currently on Verus testnet \u2014 it will soon be possible to configure Verus addresses so that it\u2019s very unlikely that coins will be stolen or lost. That\u2019s about as useful as current blockchain tech gets.\nSo, all of the above is useful tech. One challenge for general adoption right now, however, is that many of these are innovations at the protocol layer. It may take a while for the UI layer to catch up. I believe the UI layer will catch up though, and the Verus team is currently hard at work on that challenge. Before the UI catches up, IDs are already useful early adopter tech for many us",
            "./raw_text_input_medium/What Verus Did (and What It\u2019s Doing)-2020-08-29 19:24:56"
        ],
        [
            "What is unique about VerusIDs, and how do they improve upon traditional cryptocurrency addresses?",
            "VerusIDs are self-sovereign IDs that offer namespaces, revocability, and recoverability at the protocol level. This means that a VerusID can be used to send and receive coins like a traditional cryptocurrency address, but it also has additional features that protect it. If you lose the private keys for a VerusID, you can revoke access to it and recover access by associating the ID with a different private key. This is a significant improvement over traditional cryptocurrency addresses.",
            "te coin transfers \u2014 much more compelling. So, thanks to ZCash, Pirate, Komodo, and Verus, all of the projects in the Komodo ecosystem have the ability to implement much faster Z transactions and we all have options for exchanges that support Z to Z. That\u2019s pretty useful.\nHaving done so much useful, foundational work, the Verus project\u2019s devs did something absolutely mind blowing with self-sovereign IDs. It is amazing to find a project of this size that has made such a significant leap in a capability as fundamental as IDs/addresses. Seriously, VerusIDs are amazing. Namespaces, revocability, and recoverability all at the protocol level.\nA brief summary of just some of the benefit here: a VerusID can be used to send and receive coins just as any other cryptocurrency address. But revocability and recoverability mean that a VerusID can be protected as well. After you set them up these features, if you lose the private keys for an ID, you can revoke access to it and also recover access by associating that ID with a different private key. This is a sea change in how cryptocurrency addressing works and a big step forward for the whole space.\nI\u2019m not an expert on blockchain IDs but I don\u2019t know of any other project that has such an elegant, capable solution. And to tease a single feature that\u2019s currently on Verus testnet \u2014 it will soon be possible to configure Verus addresses so that it\u2019s very unlikely that coins will be stolen or lost. That\u2019s about as useful as current blockchain tech gets.\nSo, all of the above is useful tech. One challenge for general adoption right now, however, is that many of these are innovations at the protocol layer. It may take a while for the UI layer to catch up. I believe the UI layer will catch up though, and the Verus team is currently hard at work on that challenge. Before the UI catches up, IDs are already useful early adopter tech for many us",
            "./raw_text_input_medium/What Verus Did (and What It\u2019s Doing)-2020-08-29 19:24:56"
        ],
        [
            "How do the revocability and recoverability features of VerusIDs improve the security of cryptocurrency transactions?",
            "The revocability and recoverability features of VerusIDs allow users to protect their IDs in case they lose their private keys. If a user loses their private keys, they can revoke access to the ID and recover access by associating the ID with a different private key. This reduces the risk of coins being stolen or lost, making VerusIDs a more secure option for cryptocurrency transactions.",
            "te coin transfers \u2014 much more compelling. So, thanks to ZCash, Pirate, Komodo, and Verus, all of the projects in the Komodo ecosystem have the ability to implement much faster Z transactions and we all have options for exchanges that support Z to Z. That\u2019s pretty useful.\nHaving done so much useful, foundational work, the Verus project\u2019s devs did something absolutely mind blowing with self-sovereign IDs. It is amazing to find a project of this size that has made such a significant leap in a capability as fundamental as IDs/addresses. Seriously, VerusIDs are amazing. Namespaces, revocability, and recoverability all at the protocol level.\nA brief summary of just some of the benefit here: a VerusID can be used to send and receive coins just as any other cryptocurrency address. But revocability and recoverability mean that a VerusID can be protected as well. After you set them up these features, if you lose the private keys for an ID, you can revoke access to it and also recover access by associating that ID with a different private key. This is a sea change in how cryptocurrency addressing works and a big step forward for the whole space.\nI\u2019m not an expert on blockchain IDs but I don\u2019t know of any other project that has such an elegant, capable solution. And to tease a single feature that\u2019s currently on Verus testnet \u2014 it will soon be possible to configure Verus addresses so that it\u2019s very unlikely that coins will be stolen or lost. That\u2019s about as useful as current blockchain tech gets.\nSo, all of the above is useful tech. One challenge for general adoption right now, however, is that many of these are innovations at the protocol layer. It may take a while for the UI layer to catch up. I believe the UI layer will catch up though, and the Verus team is currently hard at work on that challenge. Before the UI catches up, IDs are already useful early adopter tech for many us",
            "./raw_text_input_medium/What Verus Did (and What It\u2019s Doing)-2020-08-29 19:24:56"
        ],
        [
            "What is the current challenge facing the adoption of VerusIDs and other innovations in the Verus protocol?",
            "The current challenge is that many of these innovations are at the protocol layer, and it may take some time for the user interface (UI) layer to catch up. However, the Verus team is working on this challenge, and the IDs are already useful for early adopters.",
            "te coin transfers \u2014 much more compelling. So, thanks to ZCash, Pirate, Komodo, and Verus, all of the projects in the Komodo ecosystem have the ability to implement much faster Z transactions and we all have options for exchanges that support Z to Z. That\u2019s pretty useful.\nHaving done so much useful, foundational work, the Verus project\u2019s devs did something absolutely mind blowing with self-sovereign IDs. It is amazing to find a project of this size that has made such a significant leap in a capability as fundamental as IDs/addresses. Seriously, VerusIDs are amazing. Namespaces, revocability, and recoverability all at the protocol level.\nA brief summary of just some of the benefit here: a VerusID can be used to send and receive coins just as any other cryptocurrency address. But revocability and recoverability mean that a VerusID can be protected as well. After you set them up these features, if you lose the private keys for an ID, you can revoke access to it and also recover access by associating that ID with a different private key. This is a sea change in how cryptocurrency addressing works and a big step forward for the whole space.\nI\u2019m not an expert on blockchain IDs but I don\u2019t know of any other project that has such an elegant, capable solution. And to tease a single feature that\u2019s currently on Verus testnet \u2014 it will soon be possible to configure Verus addresses so that it\u2019s very unlikely that coins will be stolen or lost. That\u2019s about as useful as current blockchain tech gets.\nSo, all of the above is useful tech. One challenge for general adoption right now, however, is that many of these are innovations at the protocol layer. It may take a while for the UI layer to catch up. I believe the UI layer will catch up though, and the Verus team is currently hard at work on that challenge. Before the UI catches up, IDs are already useful early adopter tech for many us",
            "./raw_text_input_medium/What Verus Did (and What It\u2019s Doing)-2020-08-29 19:24:56"
        ]
    ],
    "will",
    "be",
    "replaced",
    "af96a12e-2781-44d5-b29f-7a243e2c0b09"
]