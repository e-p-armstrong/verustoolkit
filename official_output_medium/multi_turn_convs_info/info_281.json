[
    [
        [
            "What does the \"proofprotocol\" parameter define when creating a currency with Verus?",
            "The \"proofprotocol\" parameter defines whether a currency is centralized or decentralized. It can take values of 1, 2, or 3, where 1 is the default (decentralized), 2 is for centralized currencies, and 3 is for Ethereum ERC-20 mapped tokens.",
            "o let\u2019s start.\n\u201cproofprotocol\u201d\nThis parameter defines, among others, if the currency is centralized or decentralized. You can choose 1,2 or 3.\n1 is default, which launches a decentralized currency (no need to include this parameter when defining such a currency). When subIDs are created with this option, the registration fees are burned.\n2 is for a centralized currency. If it\u2019s a basket currency the rootID can mint and burn supply while automatically lowering and raising the reserve ratio (also anyone can burn supply without lowering the reserve ratio). Or when it\u2019s a simple token currency they can just mint and burn supply. The subID registration fees go to the rootID.\n3 is for Ethereum ERC-20 mapped tokens. Read more here\nExample currency:\ndefinecurrency '{\n \"name\":\"MyBrand\", \n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Klaus@\":100}]\n}'\n\ud83d\udd0d A simple token currency called MyBrand, centralized (the controller of the rootID can mint and burn), and has a preallocation of 100 tokens to Klaus@.\n\u201ccurrencies\u201d\nHere you put the names of the currencies (or just one \u2014 it must have VRSC when launched on Verus) that will be in the reserves when it\u2019s a basket currency (options:33).\nOr when it\u2019s a simple token currency (options:32), what people convert during the preconversion timeframe will go to the rootID of the currency, as a funding mechanism. In the case of a simple token currency, combine it with \"conversions\" to determine the preconversion price.\nExample currency:\ndefinecurrency '{\n \"name\":\"CommunityX\", \n \"options\":33, \n \"currencies\":[\"vrsctest\",\"MyBrand\"], \n \"minpreconversion\":[10,50],\n \"initialsupply\":100\n}'\n\ud83d\udd0d A basket currency called CommunityX. It needs to get a minimum of 10 VRSCTEST and 50 MyBrand into its reserves within the preconversion time frame to be launched. The initial supply of 100 CommunityX will be distributed among the preconverters.\n",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "What happens to subID registration fees when a decentralized currency (with \"proofprotocol\" set to 1) is launched?",
            "When a decentralized currency (with \"proofprotocol\" set to 1) is launched, the subID registration fees are burned.",
            "o let\u2019s start.\n\u201cproofprotocol\u201d\nThis parameter defines, among others, if the currency is centralized or decentralized. You can choose 1,2 or 3.\n1 is default, which launches a decentralized currency (no need to include this parameter when defining such a currency). When subIDs are created with this option, the registration fees are burned.\n2 is for a centralized currency. If it\u2019s a basket currency the rootID can mint and burn supply while automatically lowering and raising the reserve ratio (also anyone can burn supply without lowering the reserve ratio). Or when it\u2019s a simple token currency they can just mint and burn supply. The subID registration fees go to the rootID.\n3 is for Ethereum ERC-20 mapped tokens. Read more here\nExample currency:\ndefinecurrency '{\n \"name\":\"MyBrand\", \n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Klaus@\":100}]\n}'\n\ud83d\udd0d A simple token currency called MyBrand, centralized (the controller of the rootID can mint and burn), and has a preallocation of 100 tokens to Klaus@.\n\u201ccurrencies\u201d\nHere you put the names of the currencies (or just one \u2014 it must have VRSC when launched on Verus) that will be in the reserves when it\u2019s a basket currency (options:33).\nOr when it\u2019s a simple token currency (options:32), what people convert during the preconversion timeframe will go to the rootID of the currency, as a funding mechanism. In the case of a simple token currency, combine it with \"conversions\" to determine the preconversion price.\nExample currency:\ndefinecurrency '{\n \"name\":\"CommunityX\", \n \"options\":33, \n \"currencies\":[\"vrsctest\",\"MyBrand\"], \n \"minpreconversion\":[10,50],\n \"initialsupply\":100\n}'\n\ud83d\udd0d A basket currency called CommunityX. It needs to get a minimum of 10 VRSCTEST and 50 MyBrand into its reserves within the preconversion time frame to be launched. The initial supply of 100 CommunityX will be distributed among the preconverters.\n",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "What are the implications of setting \"proofprotocol\" to 2 when creating a currency?",
            "When \"proofprotocol\" is set to 2, the currency is centralized, meaning that the controller of the rootID can mint and burn supply. In the case of a basket currency, the rootID can also automatically lower and raise the reserve ratio. Additionally, anyone can burn supply without lowering the reserve ratio. The subID registration fees go to the rootID.",
            "o let\u2019s start.\n\u201cproofprotocol\u201d\nThis parameter defines, among others, if the currency is centralized or decentralized. You can choose 1,2 or 3.\n1 is default, which launches a decentralized currency (no need to include this parameter when defining such a currency). When subIDs are created with this option, the registration fees are burned.\n2 is for a centralized currency. If it\u2019s a basket currency the rootID can mint and burn supply while automatically lowering and raising the reserve ratio (also anyone can burn supply without lowering the reserve ratio). Or when it\u2019s a simple token currency they can just mint and burn supply. The subID registration fees go to the rootID.\n3 is for Ethereum ERC-20 mapped tokens. Read more here\nExample currency:\ndefinecurrency '{\n \"name\":\"MyBrand\", \n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Klaus@\":100}]\n}'\n\ud83d\udd0d A simple token currency called MyBrand, centralized (the controller of the rootID can mint and burn), and has a preallocation of 100 tokens to Klaus@.\n\u201ccurrencies\u201d\nHere you put the names of the currencies (or just one \u2014 it must have VRSC when launched on Verus) that will be in the reserves when it\u2019s a basket currency (options:33).\nOr when it\u2019s a simple token currency (options:32), what people convert during the preconversion timeframe will go to the rootID of the currency, as a funding mechanism. In the case of a simple token currency, combine it with \"conversions\" to determine the preconversion price.\nExample currency:\ndefinecurrency '{\n \"name\":\"CommunityX\", \n \"options\":33, \n \"currencies\":[\"vrsctest\",\"MyBrand\"], \n \"minpreconversion\":[10,50],\n \"initialsupply\":100\n}'\n\ud83d\udd0d A basket currency called CommunityX. It needs to get a minimum of 10 VRSCTEST and 50 MyBrand into its reserves within the preconversion time frame to be launched. The initial supply of 100 CommunityX will be distributed among the preconverters.\n",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "What is the purpose of the \"currencies\" parameter when creating a currency with Verus?",
            "The \"currencies\" parameter specifies the names of the currencies that will be in the reserves when creating a basket currency (with \"options\" set to 33). Alternatively, when creating a simple token currency (with \"options\" set to 32), it determines what people convert during the preconversion timeframe, which goes to the rootID of the currency as a funding mechanism.",
            "o let\u2019s start.\n\u201cproofprotocol\u201d\nThis parameter defines, among others, if the currency is centralized or decentralized. You can choose 1,2 or 3.\n1 is default, which launches a decentralized currency (no need to include this parameter when defining such a currency). When subIDs are created with this option, the registration fees are burned.\n2 is for a centralized currency. If it\u2019s a basket currency the rootID can mint and burn supply while automatically lowering and raising the reserve ratio (also anyone can burn supply without lowering the reserve ratio). Or when it\u2019s a simple token currency they can just mint and burn supply. The subID registration fees go to the rootID.\n3 is for Ethereum ERC-20 mapped tokens. Read more here\nExample currency:\ndefinecurrency '{\n \"name\":\"MyBrand\", \n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Klaus@\":100}]\n}'\n\ud83d\udd0d A simple token currency called MyBrand, centralized (the controller of the rootID can mint and burn), and has a preallocation of 100 tokens to Klaus@.\n\u201ccurrencies\u201d\nHere you put the names of the currencies (or just one \u2014 it must have VRSC when launched on Verus) that will be in the reserves when it\u2019s a basket currency (options:33).\nOr when it\u2019s a simple token currency (options:32), what people convert during the preconversion timeframe will go to the rootID of the currency, as a funding mechanism. In the case of a simple token currency, combine it with \"conversions\" to determine the preconversion price.\nExample currency:\ndefinecurrency '{\n \"name\":\"CommunityX\", \n \"options\":33, \n \"currencies\":[\"vrsctest\",\"MyBrand\"], \n \"minpreconversion\":[10,50],\n \"initialsupply\":100\n}'\n\ud83d\udd0d A basket currency called CommunityX. It needs to get a minimum of 10 VRSCTEST and 50 MyBrand into its reserves within the preconversion time frame to be launched. The initial supply of 100 CommunityX will be distributed among the preconverters.\n",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ],
        [
            "How do you define a basket currency with Verus, and what are the implications of doing so?",
            "A basket currency can be defined by setting \"options\" to 33 and specifying the \"currencies\" that will be in the reserves. This means that the currency requires a minimum amount of each specified currency to be preconverted within the preconversion timeframe in order to be launched. The initial supply of the new currency will be distributed among the preconverters.",
            "o let\u2019s start.\n\u201cproofprotocol\u201d\nThis parameter defines, among others, if the currency is centralized or decentralized. You can choose 1,2 or 3.\n1 is default, which launches a decentralized currency (no need to include this parameter when defining such a currency). When subIDs are created with this option, the registration fees are burned.\n2 is for a centralized currency. If it\u2019s a basket currency the rootID can mint and burn supply while automatically lowering and raising the reserve ratio (also anyone can burn supply without lowering the reserve ratio). Or when it\u2019s a simple token currency they can just mint and burn supply. The subID registration fees go to the rootID.\n3 is for Ethereum ERC-20 mapped tokens. Read more here\nExample currency:\ndefinecurrency '{\n \"name\":\"MyBrand\", \n \"options\":32, \n \"proofprotocol\":2, \n \"preallocations\":[{\"Klaus@\":100}]\n}'\n\ud83d\udd0d A simple token currency called MyBrand, centralized (the controller of the rootID can mint and burn), and has a preallocation of 100 tokens to Klaus@.\n\u201ccurrencies\u201d\nHere you put the names of the currencies (or just one \u2014 it must have VRSC when launched on Verus) that will be in the reserves when it\u2019s a basket currency (options:33).\nOr when it\u2019s a simple token currency (options:32), what people convert during the preconversion timeframe will go to the rootID of the currency, as a funding mechanism. In the case of a simple token currency, combine it with \"conversions\" to determine the preconversion price.\nExample currency:\ndefinecurrency '{\n \"name\":\"CommunityX\", \n \"options\":33, \n \"currencies\":[\"vrsctest\",\"MyBrand\"], \n \"minpreconversion\":[10,50],\n \"initialsupply\":100\n}'\n\ud83d\udd0d A basket currency called CommunityX. It needs to get a minimum of 10 VRSCTEST and 50 MyBrand into its reserves within the preconversion time frame to be launched. The initial supply of 100 CommunityX will be distributed among the preconverters.\n",
            "./raw_text_input_medium/Ultimate Guide for Launching Currencies on Verus-2024-03-14 14:07:08"
        ]
    ],
    "will",
    "be",
    "replaced",
    "62d8b56a-aeca-45b3-8cef-02336199b290"
]