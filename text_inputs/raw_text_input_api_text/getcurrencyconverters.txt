getcurrencyconverters "currency1" "currency2" ... |
                      '{"convertto":"currencynameorid","fromcurrency":"sourcecurrency" | [{"currency":"sourcecurrency1", "targetprice":n}, ...],
                       "amount":n, "slippage":0.01 (=1 percent slippage)}'

Retrieves all currencies that will generally satisfy the request at or better than target price without other traffic and have all listed currencies as reserves

Arguments
       "currencyname"                    : "string" ...  (string(s), one or more) all selected currencies are returned with their current state
       "paramobject"                     : "object" ...  (one or more parameters) advanced query with slippage options
       {
           "convertto":"destcurrency"              "string" target currency
           "fromcurrency":"sourcecurrency" | [...] "string" | object array ... (string(s), one or more) currencies to convert from
           "targetprice":n | [n,...]                 "number(s)" ...       (number(s), one or more) target price within slippage required
           "amount":n                                "number"              (number) amount of tocurrency needed
           "slippage":n                              "number"              (number) max slippage with no other conversions max is 50000000 == 50%
       }

Result:
       "[{currency1}, {currency2}]" : "array of objects" (string) All currencies, last currency state, and last amount to convert if amount specified

Examples:
> verus getcurrencyconverters '["currency1","currency2",...]'
> curl --user myusername --data-binary '{"jsonrpc": "1.0", "id":"curltest", "method": "getcurrencyconverters", "params": ['["currency1","currency2",...]'] }' -H 'content-type: text/plain;' http://127.0.0.1:27486/